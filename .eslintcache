[{"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\index.tsx":"1","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\reportWebVitals.ts":"2","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\App.tsx":"3","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\theme.ts":"4","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\layout\\Blank\\index.tsx":"5","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\ZFS\\index.tsx":"6","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\Storage\\index.tsx":"7","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\Disks\\index.tsx":"8","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\Apps\\index.tsx":"9","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\Users\\index.tsx":"10","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\ShareFolder\\index.tsx":"11","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\Parts\\index.tsx":"12","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\DiskDetail\\index.tsx":"13","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\UserDetail\\index.tsx":"14","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\Network\\index.tsx":"15","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\NetworkDetail\\index.tsx":"16","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\UserDetail\\model.ts":"17","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\UserDetail\\style.ts":"18","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\DiskDetail\\model.ts":"19","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\Parts\\model.ts":"20","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\Parts\\style.ts":"21","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\ShareFolder\\model.ts":"22","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\ShareFolder\\style.ts":"23","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\Users\\model.ts":"24","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\Apps\\style.ts":"25","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\Users\\style.ts":"26","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\Storage\\model.ts":"27","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\Disks\\style.ts":"28","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\Disks\\model.ts":"29","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\Storage\\style.ts":"30","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\ZFS\\style.ts":"31","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\ZFS\\model.ts":"32","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\model\\layout.ts":"33","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\Apps\\model.ts":"34","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\hooks\\ContextMenu.ts":"35","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\DiskDetail\\style.tsx":"36","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\NetworkDetail\\model.ts":"37","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\Network\\model.ts":"38","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\NetworkDetail\\style.tsx":"39","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\Network\\style.tsx":"40","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\api\\storage.ts":"41","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\api\\disks.ts":"42","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\api\\users.ts":"43","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\api\\share.ts":"44","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\api\\zfs.ts":"45","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\utils\\message.ts":"46","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\api\\apps.ts":"47","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\hooks\\ConfirmDialog.ts":"48","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\api\\network.ts":"49","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\NewUserDialog\\index.tsx":"50","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\AppCard\\index.tsx":"51","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\InstallAppDialog\\index.tsx":"52","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\NewShareDialog\\index.tsx":"53","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\DiskCard\\index.tsx":"54","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\ListItemDialog\\index.tsx":"55","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\ListPage\\index.tsx":"56","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\ValueField\\index.tsx":"57","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\CreateZFSPoolDialog\\index.tsx":"58","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\NetworkCard\\index.tsx":"59","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\utils\\request.ts":"60","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\config.ts":"61","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\CreateZFSPoolDialog\\form.ts":"62","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\CreateZFSPoolDialog\\style.ts":"63","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\ListPage\\style.ts":"64","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\ListItemDialog\\style.ts":"65","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\DiskCard\\style.ts":"66","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\NewShareDialog\\hook.ts":"67","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\NewShareDialog\\style.ts":"68","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\ValueField\\style.ts":"69","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\Icons\\DiskIcon.tsx":"70","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\NetworkCard\\style.tsx":"71","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\CreateZFSPoolDialog\\step\\editor\\index.tsx":"72","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\CreateZFSPoolDialog\\step\\confirm\\index.tsx":"73","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\CreateZFSPoolDialog\\step\\simple\\index.tsx":"74","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\CreateZFSPoolDialog\\step\\info\\index.tsx":"75","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\NewShareDialog\\step\\storage\\index.tsx":"76","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\NewShareDialog\\step\\complete\\index.tsx":"77","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\NewShareDialog\\step\\info\\index.tsx":"78","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\InstallAppDialog\\setp\\confirm\\index.tsx":"79","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\InstallAppDialog\\setp\\upload\\index.tsx":"80","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\NewShareDialog\\step\\info\\style.ts":"81","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\NewShareDialog\\step\\complete\\style.ts":"82","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\NewShareDialog\\step\\storage\\style.ts":"83","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\CreateZFSPoolDialog\\step\\info\\style.ts":"84","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\CreateZFSPoolDialog\\step\\simple\\style.ts":"85","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\CreateZFSPoolDialog\\step\\confirm\\style.ts":"86","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\CreateZFSPoolDialog\\step\\editor\\style.ts":"87","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\InstallAppDialog\\setp\\confirm\\style.ts":"88","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\InstallAppDialog\\setp\\upload\\style.ts":"89","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\DiskSelectTable\\index.tsx":"90","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\ZFSTreeView\\index.tsx":"91","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\utils\\random.ts":"92","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\ZFSTreeView\\style.ts":"93","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\DiskSelectTable\\style.ts":"94","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\InstallAppDialog\\style.ts":"95","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\AppCard\\style.ts":"96","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\utils\\app.ts":"97","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\NewUserDialog\\style.ts":"98","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\PoolDetail\\index.tsx":"99","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\System\\index.tsx":"100","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\GroupDetail\\index.tsx":"101","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\Groups\\index.tsx":"102","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\layout\\Base\\index.tsx":"103","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\ShareFolderDetail\\index.tsx":"104","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\DashBoard\\index.tsx":"105","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\Account\\index.tsx":"106","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\Login\\index.tsx":"107","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\PoolDetail\\model.ts":"108","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\api\\os.ts":"109","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\GroupDetail\\style.ts":"110","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\Groups\\style.ts":"111","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\GroupDetail\\model.ts":"112","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\Groups\\model.ts":"113","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\ShareFolderDetail\\model.ts":"114","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\ShareFolderDetail\\style.ts":"115","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\DashBoard\\style.ts":"116","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\DashBoard\\model.ts":"117","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\Account\\style.ts":"118","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\api\\account.ts":"119","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\model\\user.ts":"120","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\Login\\style.ts":"121","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\PoolDetail\\style.tsx":"122","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\System\\style.tsx":"123","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\api\\auth.ts":"124","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\api\\system.ts":"125","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\InfoCard\\index.tsx":"126","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\UserListCard\\index.tsx":"127","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\UserSelectDialog\\index.tsx":"128","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\layout\\Auth\\index.tsx":"129","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\NewGroupDialog\\index.tsx":"130","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\layout\\Notification\\index.tsx":"131","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\SwitchSelectDialog\\index.tsx":"132","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\IconStatCard\\index.tsx":"133","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\ChangePasswordDialog\\index.tsx":"134","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\layout\\Base\\parts\\Tool\\index.tsx":"135","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\DashBoard\\part\\CpuMonitorCard\\index.tsx":"136","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\DashBoard\\part\\MemoryMonitorCard\\index.tsx":"137","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\DashBoard\\part\\SystemInfoCard\\index.tsx":"138","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\layout\\Base\\parts\\Nav\\index.tsx":"139","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\InfoCard\\style.ts":"140","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\UserSelectDialog\\style.ts":"141","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\UserListCard\\style.ts":"142","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\ws.ts":"143","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\NewGroupDialog\\style.ts":"144","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\SwitchSelectDialog\\style.ts":"145","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\ChangePasswordDialog\\style.ts":"146","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\layout\\Base\\parts\\Tool\\style.ts":"147","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\IconStatCard\\style.tsx":"148","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\DashBoard\\part\\CpuMonitorCard\\style.tsx":"149","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\DashBoard\\part\\SystemInfoCard\\style.tsx":"150","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\DashBoard\\part\\MemoryMonitorCard\\style.tsx":"151","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\layout\\Base\\parts\\Task\\index.tsx":"152","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\UserPopup\\index.tsx":"153","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\model\\task.ts":"154","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\layout\\Base\\parts\\Task\\style.tsx":"155","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\UserPopup\\style.tsx":"156","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\api\\task.ts":"157","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\InstallAppTaskCard\\index.tsx":"158","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\InstallAppTaskCard\\style.tsx":"159","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\UserGroupSelectDialog\\index.tsx":"160","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\UserGroupSelectDialog\\style.ts":"161","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\UserAndGroupListCard\\index.tsx":"162","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\UserAndGroupListCard\\style.ts":"163","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\PageHead\\index.tsx":"164","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\PageHead\\style.ts":"165","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\PageHead\\hook.ts":"166","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\PathPickDialog\\index.tsx":"167","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\PathPickDialog\\style.ts":"168","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\api\\path.ts":"169","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\InstallAppDialog\\hook.ts":"170"},{"size":630,"mtime":1626851070809,"results":"171","hashOfConfig":"172"},{"size":440,"mtime":1626851070887,"results":"173","hashOfConfig":"172"},{"size":595,"mtime":1627866305619,"results":"174","hashOfConfig":"172"},{"size":343,"mtime":1626851070888,"results":"175","hashOfConfig":"172"},{"size":6994,"mtime":1627866305634,"results":"176","hashOfConfig":"172"},{"size":7777,"mtime":1630311475088,"results":"177","hashOfConfig":"172"},{"size":3458,"mtime":1630312150778,"results":"178","hashOfConfig":"172"},{"size":2466,"mtime":1630310876021,"results":"179","hashOfConfig":"172"},{"size":6749,"mtime":1630554428076,"results":"180","hashOfConfig":"172"},{"size":3876,"mtime":1630311725850,"results":"181","hashOfConfig":"172"},{"size":2837,"mtime":1630312055613,"results":"182","hashOfConfig":"172"},{"size":1319,"mtime":1626851070858,"results":"183","hashOfConfig":"172"},{"size":5241,"mtime":1630317070492,"results":"184","hashOfConfig":"172"},{"size":4208,"mtime":1630394656782,"results":"185","hashOfConfig":"172"},{"size":1606,"mtime":1630310992633,"results":"186","hashOfConfig":"172"},{"size":5193,"mtime":1630317251235,"results":"187","hashOfConfig":"172"},{"size":741,"mtime":1626946854530,"results":"188","hashOfConfig":"172"},{"size":431,"mtime":1630394916730,"results":"189","hashOfConfig":"172"},{"size":602,"mtime":1627287728413,"results":"190","hashOfConfig":"172"},{"size":698,"mtime":1626851070860,"results":"191","hashOfConfig":"172"},{"size":356,"mtime":1626851070861,"results":"192","hashOfConfig":"172"},{"size":1018,"mtime":1626851070869,"results":"193","hashOfConfig":"172"},{"size":544,"mtime":1626851070870,"results":"194","hashOfConfig":"172"},{"size":1293,"mtime":1626916558177,"results":"195","hashOfConfig":"172"},{"size":1062,"mtime":1630552736943,"results":"196","hashOfConfig":"172"},{"size":626,"mtime":1630311180500,"results":"197","hashOfConfig":"172"},{"size":829,"mtime":1626916558173,"results":"198","hashOfConfig":"172"},{"size":570,"mtime":1630310830631,"results":"199","hashOfConfig":"172"},{"size":546,"mtime":1626916558163,"results":"200","hashOfConfig":"172"},{"size":359,"mtime":1626851070878,"results":"201","hashOfConfig":"172"},{"size":793,"mtime":1630311435417,"results":"202","hashOfConfig":"172"},{"size":1078,"mtime":1626916558179,"results":"203","hashOfConfig":"172"},{"size":1290,"mtime":1626916558151,"results":"204","hashOfConfig":"172"},{"size":1065,"mtime":1627866305636,"results":"205","hashOfConfig":"172"},{"size":849,"mtime":1626851070807,"results":"206","hashOfConfig":"172"},{"size":500,"mtime":1630317070482,"results":"207","hashOfConfig":"172"},{"size":549,"mtime":1627866305644,"results":"208","hashOfConfig":"172"},{"size":475,"mtime":1627866305640,"results":"209","hashOfConfig":"172"},{"size":850,"mtime":1630317251225,"results":"210","hashOfConfig":"172"},{"size":414,"mtime":1630310983214,"results":"211","hashOfConfig":"172"},{"size":712,"mtime":1626851070731,"results":"212","hashOfConfig":"172"},{"size":1341,"mtime":1627545287577,"results":"213","hashOfConfig":"172"},{"size":2651,"mtime":1626946419676,"results":"214","hashOfConfig":"172"},{"size":1903,"mtime":1628235602981,"results":"215","hashOfConfig":"172"},{"size":1237,"mtime":1627532739749,"results":"216","hashOfConfig":"172"},{"size":745,"mtime":1626851070891,"results":"217","hashOfConfig":"172"},{"size":2127,"mtime":1630551775062,"results":"218","hashOfConfig":"172"},{"size":909,"mtime":1626851070806,"results":"219","hashOfConfig":"172"},{"size":1717,"mtime":1627866305620,"results":"220","hashOfConfig":"172"},{"size":2013,"mtime":1626851070786,"results":"221","hashOfConfig":"172"},{"size":3832,"mtime":1626851070739,"results":"222","hashOfConfig":"172"},{"size":4473,"mtime":1630400025860,"results":"223","hashOfConfig":"172"},{"size":3955,"mtime":1626925412452,"results":"224","hashOfConfig":"172"},{"size":1086,"mtime":1627287728373,"results":"225","hashOfConfig":"172"},{"size":2074,"mtime":1626851070764,"results":"226","hashOfConfig":"172"},{"size":667,"mtime":1626851070767,"results":"227","hashOfConfig":"172"},{"size":683,"mtime":1626851070804,"results":"228","hashOfConfig":"172"},{"size":4164,"mtime":1627612220907,"results":"229","hashOfConfig":"172"},{"size":1481,"mtime":1627866305625,"results":"230","hashOfConfig":"172"},{"size":1280,"mtime":1627033767323,"results":"231","hashOfConfig":"172"},{"size":898,"mtime":1630315209197,"results":"232","hashOfConfig":"172"},{"size":838,"mtime":1627609793180,"results":"233","hashOfConfig":"172"},{"size":913,"mtime":1627549262518,"results":"234","hashOfConfig":"172"},{"size":457,"mtime":1626851070768,"results":"235","hashOfConfig":"172"},{"size":405,"mtime":1626851070765,"results":"236","hashOfConfig":"172"},{"size":526,"mtime":1626947501997,"results":"237","hashOfConfig":"172"},{"size":447,"mtime":1626916558124,"results":"238","hashOfConfig":"172"},{"size":551,"mtime":1627612951718,"results":"239","hashOfConfig":"172"},{"size":407,"mtime":1627866305629,"results":"240","hashOfConfig":"172"},{"size":792,"mtime":1626851070752,"results":"241","hashOfConfig":"172"},{"size":739,"mtime":1627866305627,"results":"242","hashOfConfig":"172"},{"size":375,"mtime":1627638954503,"results":"243","hashOfConfig":"172"},{"size":989,"mtime":1627609793202,"results":"244","hashOfConfig":"172"},{"size":736,"mtime":1627545158832,"results":"245","hashOfConfig":"172"},{"size":1206,"mtime":1627529822005,"results":"246","hashOfConfig":"172"},{"size":1880,"mtime":1626851070781,"results":"247","hashOfConfig":"172"},{"size":1082,"mtime":1626924747959,"results":"248","hashOfConfig":"172"},{"size":847,"mtime":1626851070778,"results":"249","hashOfConfig":"172"},{"size":3152,"mtime":1630400583016,"results":"250","hashOfConfig":"172"},{"size":1534,"mtime":1627033859564,"results":"251","hashOfConfig":"172"},{"size":253,"mtime":1626851070779,"results":"252","hashOfConfig":"172"},{"size":284,"mtime":1626851070776,"results":"253","hashOfConfig":"172"},{"size":330,"mtime":1626851070782,"results":"254","hashOfConfig":"172"},{"size":273,"mtime":1627529116362,"results":"255","hashOfConfig":"172"},{"size":202,"mtime":1627528593331,"results":"256","hashOfConfig":"172"},{"size":342,"mtime":1627552329949,"results":"257","hashOfConfig":"172"},{"size":202,"mtime":1627528593331,"results":"258","hashOfConfig":"172"},{"size":313,"mtime":1630400378624,"results":"259","hashOfConfig":"172"},{"size":539,"mtime":1627031996203,"results":"260","hashOfConfig":"172"},{"size":3574,"mtime":1627545422473,"results":"261","hashOfConfig":"172"},{"size":2746,"mtime":1627551369959,"results":"262","hashOfConfig":"172"},{"size":90,"mtime":1627550126333,"results":"263","hashOfConfig":"172"},{"size":202,"mtime":1627547685039,"results":"264","hashOfConfig":"172"},{"size":266,"mtime":1627545209715,"results":"265","hashOfConfig":"172"},{"size":408,"mtime":1630313610335,"results":"266","hashOfConfig":"172"},{"size":589,"mtime":1626851070740,"results":"267","hashOfConfig":"172"},{"size":201,"mtime":1626851070889,"results":"268","hashOfConfig":"172"},{"size":509,"mtime":1626916558134,"results":"269","hashOfConfig":"172"},{"size":1659,"mtime":1630317160653,"results":"270","hashOfConfig":"172"},{"size":3925,"mtime":1630312248624,"results":"271","hashOfConfig":"172"},{"size":3101,"mtime":1630394221627,"results":"272","hashOfConfig":"172"},{"size":2672,"mtime":1630311850494,"results":"273","hashOfConfig":"172"},{"size":1292,"mtime":1630308312214,"results":"274","hashOfConfig":"172"},{"size":18502,"mtime":1630317455788,"results":"275","hashOfConfig":"172"},{"size":4353,"mtime":1630310660045,"results":"276","hashOfConfig":"172"},{"size":2302,"mtime":1630312294736,"results":"277","hashOfConfig":"172"},{"size":3241,"mtime":1626916558166,"results":"278","hashOfConfig":"172"},{"size":581,"mtime":1626851070864,"results":"279","hashOfConfig":"172"},{"size":396,"mtime":1626916558113,"results":"280","hashOfConfig":"172"},{"size":361,"mtime":1630394221652,"results":"281","hashOfConfig":"172"},{"size":212,"mtime":1626851070853,"results":"282","hashOfConfig":"172"},{"size":1436,"mtime":1626851070847,"results":"283","hashOfConfig":"172"},{"size":623,"mtime":1626851070852,"results":"284","hashOfConfig":"172"},{"size":1273,"mtime":1626851070873,"results":"285","hashOfConfig":"172"},{"size":1280,"mtime":1630394402754,"results":"286","hashOfConfig":"172"},{"size":347,"mtime":1630310660073,"results":"287","hashOfConfig":"172"},{"size":1316,"mtime":1627287728392,"results":"288","hashOfConfig":"172"},{"size":265,"mtime":1630312294714,"results":"289","hashOfConfig":"172"},{"size":311,"mtime":1626851070725,"results":"290","hashOfConfig":"172"},{"size":1079,"mtime":1626916558155,"results":"291","hashOfConfig":"172"},{"size":1258,"mtime":1626851070856,"results":"292","hashOfConfig":"172"},{"size":510,"mtime":1630317160664,"results":"293","hashOfConfig":"172"},{"size":377,"mtime":1626916558176,"results":"294","hashOfConfig":"172"},{"size":351,"mtime":1626851070727,"results":"295","hashOfConfig":"172"},{"size":2881,"mtime":1627287728370,"results":"296","hashOfConfig":"172"},{"size":1004,"mtime":1626851070758,"results":"297","hashOfConfig":"172"},{"size":2217,"mtime":1626851070793,"results":"298","hashOfConfig":"172"},{"size":1906,"mtime":1626851070799,"results":"299","hashOfConfig":"172"},{"size":676,"mtime":1626916558143,"results":"300","hashOfConfig":"172"},{"size":1440,"mtime":1626851070769,"results":"301","hashOfConfig":"172"},{"size":1178,"mtime":1626851070822,"results":"302","hashOfConfig":"172"},{"size":1015,"mtime":1626916558136,"results":"303","hashOfConfig":"172"},{"size":1117,"mtime":1627287728376,"results":"304","hashOfConfig":"172"},{"size":2007,"mtime":1626851070741,"results":"305","hashOfConfig":"172"},{"size":2574,"mtime":1626916558148,"results":"306","hashOfConfig":"172"},{"size":3745,"mtime":1627526452076,"results":"307","hashOfConfig":"172"},{"size":2799,"mtime":1627287728400,"results":"308","hashOfConfig":"172"},{"size":2452,"mtime":1627287728406,"results":"309","hashOfConfig":"172"},{"size":9367,"mtime":1630307751166,"results":"310","hashOfConfig":"172"},{"size":486,"mtime":1626851070759,"results":"311","hashOfConfig":"172"},{"size":272,"mtime":1626851070800,"results":"312","hashOfConfig":"172"},{"size":763,"mtime":1626851070794,"results":"313","hashOfConfig":"172"},{"size":1172,"mtime":1626851070893,"results":"314","hashOfConfig":"172"},{"size":201,"mtime":1626851070770,"results":"315","hashOfConfig":"172"},{"size":204,"mtime":1626851070791,"results":"316","hashOfConfig":"172"},{"size":206,"mtime":1626851070742,"results":"317","hashOfConfig":"172"},{"size":519,"mtime":1626851070818,"results":"318","hashOfConfig":"172"},{"size":748,"mtime":1627287728378,"results":"319","hashOfConfig":"172"},{"size":826,"mtime":1627287728398,"results":"320","hashOfConfig":"172"},{"size":283,"mtime":1627287728408,"results":"321","hashOfConfig":"172"},{"size":873,"mtime":1627287728403,"results":"322","hashOfConfig":"172"},{"size":2528,"mtime":1626851070815,"results":"323","hashOfConfig":"172"},{"size":950,"mtime":1626916558138,"results":"324","hashOfConfig":"172"},{"size":472,"mtime":1626916558153,"results":"325","hashOfConfig":"172"},{"size":793,"mtime":1626851070815,"results":"326","hashOfConfig":"172"},{"size":525,"mtime":1626851070797,"results":"327","hashOfConfig":"172"},{"size":708,"mtime":1626851070733,"results":"328","hashOfConfig":"172"},{"size":1365,"mtime":1626851070762,"results":"329","hashOfConfig":"172"},{"size":301,"mtime":1626851070763,"results":"330","hashOfConfig":"172"},{"size":1951,"mtime":1628238697152,"results":"331","hashOfConfig":"172"},{"size":272,"mtime":1626851070800,"results":"332","hashOfConfig":"172"},{"size":3469,"mtime":1628232756982,"results":"333","hashOfConfig":"172"},{"size":759,"mtime":1628221951012,"results":"334","hashOfConfig":"172"},{"size":2845,"mtime":1630549032877,"results":"335","hashOfConfig":"172"},{"size":1500,"mtime":1630461221219,"results":"336","hashOfConfig":"172"},{"size":354,"mtime":1630295473598,"results":"337","hashOfConfig":"172"},{"size":3600,"mtime":1630316806706,"results":"338","hashOfConfig":"172"},{"size":804,"mtime":1630315466252,"results":"339","hashOfConfig":"172"},{"size":410,"mtime":1630315346824,"results":"340","hashOfConfig":"172"},{"size":1022,"mtime":1630397966435,"results":"341","hashOfConfig":"172"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},"1fcaumm",{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351","usedDeprecatedRules":"344"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354","usedDeprecatedRules":"344"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357","usedDeprecatedRules":"344"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360","usedDeprecatedRules":"344"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363","usedDeprecatedRules":"344"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"366","messages":"367","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"368","usedDeprecatedRules":"344"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371","usedDeprecatedRules":"344"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"374","usedDeprecatedRules":"344"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"377","usedDeprecatedRules":"344"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"380","usedDeprecatedRules":"344"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"383","usedDeprecatedRules":"344"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"386","usedDeprecatedRules":"344"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389","usedDeprecatedRules":"344"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"396","usedDeprecatedRules":"344"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"401","usedDeprecatedRules":"344"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"412","usedDeprecatedRules":"344"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"417","usedDeprecatedRules":"344"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"424","usedDeprecatedRules":"344"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"429","usedDeprecatedRules":"344"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"448","usedDeprecatedRules":"344"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"451","usedDeprecatedRules":"344"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"456","usedDeprecatedRules":"344"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"459","messages":"460","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"461","usedDeprecatedRules":"344"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"464","usedDeprecatedRules":"344"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"469","usedDeprecatedRules":"344"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"472","usedDeprecatedRules":"344"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"475","usedDeprecatedRules":"344"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"478","usedDeprecatedRules":"344"},{"filePath":"479","messages":"480","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"481","usedDeprecatedRules":"344"},{"filePath":"482","messages":"483","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"489","usedDeprecatedRules":"344"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"494","usedDeprecatedRules":"344"},{"filePath":"495","messages":"496","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"497","messages":"498","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"499","messages":"500","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"501","messages":"502","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"503","messages":"504","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"505","messages":"506","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"507","messages":"508","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"509","messages":"510","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"511","messages":"512","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"513","messages":"514","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"515","messages":"516","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"517","messages":"518","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"521","usedDeprecatedRules":"344"},{"filePath":"522","messages":"523","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"524","messages":"525","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"526","messages":"527","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"528","usedDeprecatedRules":"344"},{"filePath":"529","messages":"530","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"531","messages":"532","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"533","messages":"534","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"535","messages":"536","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"537","messages":"538","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"539","messages":"540","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"541","messages":"542","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"543","messages":"544","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"545","messages":"546","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"547","messages":"548","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"549","messages":"550","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"551","messages":"552","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"553","messages":"554","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"555","messages":"556","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"557","usedDeprecatedRules":"344"},{"filePath":"558","messages":"559","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"560","usedDeprecatedRules":"344"},{"filePath":"561","messages":"562","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"563","messages":"564","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"565","messages":"566","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"567","messages":"568","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"569","messages":"570","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"571","messages":"572","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"573","messages":"574","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"575","messages":"576","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"577","usedDeprecatedRules":"344"},{"filePath":"578","messages":"579","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"580","usedDeprecatedRules":"344"},{"filePath":"581","messages":"582","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"583","usedDeprecatedRules":"344"},{"filePath":"584","messages":"585","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"586","usedDeprecatedRules":"344"},{"filePath":"587","messages":"588","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"589","usedDeprecatedRules":"344"},{"filePath":"590","messages":"591","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"592","usedDeprecatedRules":"344"},{"filePath":"593","messages":"594","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"595","usedDeprecatedRules":"344"},{"filePath":"596","messages":"597","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"598","usedDeprecatedRules":"344"},{"filePath":"599","messages":"600","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"601","usedDeprecatedRules":"344"},{"filePath":"602","messages":"603","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"604","messages":"605","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"606","messages":"607","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"608","messages":"609","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"610","messages":"611","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"612","usedDeprecatedRules":"344"},{"filePath":"613","messages":"614","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"615","messages":"616","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"617","messages":"618","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"619","messages":"620","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"621","messages":"622","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"623","usedDeprecatedRules":"344"},{"filePath":"624","messages":"625","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"626","messages":"627","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"628","messages":"629","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"630","usedDeprecatedRules":"344"},{"filePath":"631","messages":"632","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"633","messages":"634","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"635","messages":"636","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"637","messages":"638","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"639","messages":"640","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"641","messages":"642","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"643","messages":"644","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"645","usedDeprecatedRules":"344"},{"filePath":"646","messages":"647","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"648","messages":"649","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"650","messages":"651","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"652","messages":"653","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"654","usedDeprecatedRules":"344"},{"filePath":"655","messages":"656","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"657","messages":"658","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"659","usedDeprecatedRules":"344"},{"filePath":"660","messages":"661","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"662","messages":"663","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"664","usedDeprecatedRules":"665"},{"filePath":"666","messages":"667","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"668","usedDeprecatedRules":"344"},{"filePath":"669","messages":"670","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"671","usedDeprecatedRules":"344"},{"filePath":"672","messages":"673","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"674","messages":"675","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"676","usedDeprecatedRules":"344"},{"filePath":"677","messages":"678","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"679","messages":"680","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"681","messages":"682","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"683","messages":"684","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"685","messages":"686","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"687","messages":"688","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"689","messages":"690","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"691","messages":"692","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"665"},{"filePath":"693","messages":"694","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"695","messages":"696","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"697","messages":"698","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"699","messages":"700","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"701","messages":"702","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"703","usedDeprecatedRules":"344"},{"filePath":"704","messages":"705","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"706","usedDeprecatedRules":"344"},{"filePath":"707","messages":"708","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"709","messages":"710","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"711","messages":"712","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"713","messages":"714","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"715","messages":"716","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"717","messages":"718","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"719","messages":"720","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"721","messages":"722","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"723","messages":"724","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"725","messages":"726","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"727","messages":"728","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"729","messages":"730","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"731","messages":"732","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"733","messages":"734","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"735","usedDeprecatedRules":"344"},{"filePath":"736","messages":"737","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"738","messages":"739","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"740","usedDeprecatedRules":"344"},{"filePath":"741","messages":"742","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\index.tsx",[],["743","744"],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\reportWebVitals.ts",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\App.tsx",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\theme.ts",["745","746"],"import {createMuiTheme} from '@material-ui/core/styles';\r\nimport {blue, green, indigo, yellow} from \"@material-ui/core/colors\";\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: green[700],\r\n        },\r\n        secondary: {\r\n            main: yellow[800],\r\n        },\r\n\r\n    },\r\n});\r\nexport default theme","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\layout\\Blank\\index.tsx",["747","748"],"import {HashRouter as Router, Route, Switch} from \"react-router-dom\";\r\nimport ZFSPage from \"../../pages/ZFS\";\r\nimport StoragePage from \"../../pages/Storage\";\r\nimport PartsPage from \"../../pages/Parts\";\r\nimport DisksPage from \"../../pages/Disks\";\r\nimport UsersPage from \"../../pages/Users\";\r\nimport ShareFolder from \"../../pages/ShareFolder\";\r\nimport AppsPage from \"../../pages/Apps\";\r\nimport * as React from \"react\";\r\nimport BaseLayout from \"../Base\";\r\nimport LoginPage from \"../../pages/Login\";\r\nimport AccountPage from \"../../pages/Account\";\r\nimport DashboardPage from \"../../pages/DashBoard\";\r\nimport ShareFolderDetail from \"../../pages/ShareFolderDetail\";\r\nimport useLayoutModel from \"../../model/layout\";\r\nimport {Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle} from \"@material-ui/core\";\r\nimport GroupsPage from \"../../pages/Groups\";\r\nimport GroupDetailPage from \"../../pages/GroupDetail\";\r\nimport PoolDetailPage from \"../../pages/PoolDetail\";\r\nimport {OptionsObject, SnackbarMessage, useSnackbar} from \"notistack\";\r\nimport {useEffect} from \"react\";\r\nimport SystemPage from \"../../pages/System\";\r\nimport UserDetail from \"../../pages/UserDetail\";\r\nimport DiskDetailPage from \"../../pages/DiskDetail\";\r\nimport NetworkPage from \"../../pages/Network\";\r\nimport NetworkDetail from \"../../pages/NetworkDetail\";\r\n\r\nexport interface BlankLayoutPropsType {\r\n\r\n}\r\n\r\nconst BlankLayout = ({}: BlankLayoutPropsType) => {\r\n    const layoutModel = useLayoutModel()\r\n    const {enqueueSnackbar} = useSnackbar()\r\n    const onGlobalSnackMessage = (e: any) => {\r\n        const {message, options}: { message: SnackbarMessage, options?: OptionsObject } = e.detail\r\n        enqueueSnackbar(message, options)\r\n    }\r\n    useEffect(() => {\r\n        document.addEventListener(\"globalMessage\", onGlobalSnackMessage)\r\n    }, [])\r\n    return (\r\n        <div>\r\n            <Dialog open={layoutModel.confirmDialogController.open}\r\n                    onClose={layoutModel.confirmDialogController.onClose}>\r\n                <DialogTitle>\r\n                    {layoutModel.confirmDialogController.title}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        {layoutModel.confirmDialogController.message}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    {\r\n                        layoutModel.confirmDialogController.onOk &&\r\n                        <Button onClick={() => {\r\n                            if (layoutModel.confirmDialogController.onOk) {\r\n                                layoutModel.confirmDialogController.onOk()\r\n                            }\r\n                            layoutModel.confirmDialogController.onClose()\r\n                        }}>\r\n                            OK\r\n                        </Button>\r\n                    }\r\n                    {\r\n                        <Button onClick={layoutModel.confirmDialogController.onClose}>\r\n                            Cancel\r\n                        </Button>\r\n                    }\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Router>\r\n                <Switch>\r\n                    <Route path=\"/zfs\">\r\n                        <BaseLayout>\r\n                            <ZFSPage/>\r\n                        </BaseLayout>\r\n                    </Route>\r\n                    <Route path=\"/pool/:name/info\">\r\n                        <BaseLayout>\r\n                            <PoolDetailPage/>\r\n                        </BaseLayout>\r\n                    </Route>\r\n                    <Route path=\"/storage\">\r\n                        <BaseLayout>\r\n                            <StoragePage/>\r\n                        </BaseLayout>\r\n                    </Route>\r\n                    <Route path=\"/parts\">\r\n                        <BaseLayout>\r\n                            <PartsPage/>\r\n                        </BaseLayout>\r\n                    </Route>\r\n                    <Route path=\"/disks\">\r\n                        <BaseLayout>\r\n                            <DisksPage/>\r\n                        </BaseLayout>\r\n                    </Route>\r\n                    <Route path=\"/network/:name\">\r\n                        <BaseLayout>\r\n                            <NetworkDetail/>\r\n                        </BaseLayout>\r\n                    </Route>\r\n                    <Route path=\"/network\">\r\n                        <BaseLayout>\r\n                            <NetworkPage/>\r\n                        </BaseLayout>\r\n                    </Route>\r\n\r\n                    <Route path=\"/disk/:name\">\r\n                        <BaseLayout>\r\n                            <DiskDetailPage/>\r\n                        </BaseLayout>\r\n                    </Route>\r\n                    <Route path=\"/users\">\r\n                        <BaseLayout>\r\n                            <UsersPage/>\r\n                        </BaseLayout>\r\n                    </Route>\r\n                    <Route path=\"/user/:name\">\r\n                        <BaseLayout>\r\n                            <UserDetail/>\r\n                        </BaseLayout>\r\n                    </Route>\r\n                    <Route path=\"/folders\">\r\n                        <BaseLayout>\r\n                            <ShareFolder/>\r\n                        </BaseLayout>\r\n                    </Route>\r\n                    <Route path=\"/folder/:name/info\">\r\n                        <BaseLayout>\r\n                            <ShareFolderDetail/>\r\n                        </BaseLayout>\r\n                    </Route>\r\n                    <Route path=\"/my/account\">\r\n                        <BaseLayout>\r\n                            <AccountPage/>\r\n                        </BaseLayout>\r\n                    </Route>\r\n                    <Route path=\"/apps\">\r\n                        <BaseLayout>\r\n                            <AppsPage/>\r\n                        </BaseLayout>\r\n                    </Route>\r\n                    <Route path=\"/groups\">\r\n                        <BaseLayout>\r\n                            <GroupsPage/>\r\n                        </BaseLayout>\r\n                    </Route>\r\n                    <Route path=\"/group/:name/info\">\r\n                        <BaseLayout>\r\n                            <GroupDetailPage/>\r\n                        </BaseLayout>\r\n                    </Route>\r\n                    <Route path=\"/home\">\r\n                        <BaseLayout>\r\n                            <DashboardPage/>\r\n                        </BaseLayout>\r\n                    </Route>\r\n                    <Route path=\"/system\">\r\n                        <BaseLayout>\r\n                            <SystemPage/>\r\n                        </BaseLayout>\r\n                    </Route>\r\n                    <Route path=\"/\">\r\n                        <LoginPage/>\r\n                    </Route>\r\n                </Switch>\r\n            </Router>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BlankLayout;\r\n","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\ZFS\\index.tsx",["749","750","751"],"import React, {useEffect, useState} from \"react\";\r\nimport {\r\n    Avatar,\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle,\r\n    IconButton,\r\n    List,\r\n    ListItem,\r\n    ListItemAvatar,\r\n    ListItemSecondaryAction,\r\n    ListItemText,\r\n    Menu,\r\n    MenuItem\r\n} from \"@material-ui/core\";\r\nimport useZFSModel from \"./model\";\r\nimport {Add, Delete, Dns, MoreVert} from \"@material-ui/icons\";\r\nimport ListPage from \"../../components/ListPage\";\r\nimport CreateZFSPoolDialog from \"../../components/CreateZFSPoolDialog\";\r\nimport useStyles from \"./style\";\r\nimport useLayoutModel from \"../../model/layout\";\r\nimport ListItemDialog from \"../../components/ListItemDialog\";\r\nimport {ZFSPool} from \"../../api/zfs\";\r\nimport useStorageModel from \"../Storage/model\";\r\nimport {useSnackbar} from \"notistack\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport PageHead from \"../../components/PageHead\";\r\nimport {usePageHeadController} from \"../../components/PageHead/hook\";\r\n\r\nexport interface ZFSPagePropsType {\r\n\r\n}\r\n\r\nconst ZFSPage = ({}: ZFSPagePropsType) => {\r\n    const zfsModel = useZFSModel()\r\n    const layoutModel = useLayoutModel()\r\n    const storageModel = useStorageModel()\r\n    const history = useHistory()\r\n    const classes = useStyles()\r\n    useEffect(() => {\r\n        zfsModel.refresh()\r\n    },[])\r\n    const [moreMenuEl, setMoreMenuEl] = React.useState(null);\r\n    const createPoolDialogSwitchHandler = layoutModel.getDialogSwitchHandler(\"newZFSPool\")\r\n    const [contextPool, setContextPool] = useState<ZFSPool>()\r\n    const [deleteConfirmDialog, setDeleteConfirmDialog] = useState<{\r\n        name: string,\r\n        open: boolean\r\n    }>({name: \"\", open: false})\r\n    const {enqueueSnackbar} = useSnackbar();\r\n    const pageHeadController = usePageHeadController({})\r\n    const openDeleteConfirm = (name: string) => {\r\n        setDeleteConfirmDialog({\r\n            name,\r\n            open: true\r\n        })\r\n    }\r\n    const closeDeleteConfirm = () => {\r\n        setDeleteConfirmDialog({\r\n            ...deleteConfirmDialog,\r\n            open: false\r\n        })\r\n    }\r\n    const onRemoveHandler = async () => {\r\n        if (deleteConfirmDialog?.name) {\r\n            await zfsModel.removePool(deleteConfirmDialog.name)\r\n            enqueueSnackbar(\"delete success\", {variant: 'success'})\r\n            closeDeleteConfirm()\r\n        }\r\n    }\r\n    const handleMoreMenuClick = (event: any) => {\r\n        setMoreMenuEl(event.currentTarget);\r\n    };\r\n    const handleMoreMenuClose = () => {\r\n        setMoreMenuEl(null);\r\n    };\r\n    const asStorageSwitchHandler = layoutModel.getDialogSwitchHandler('poolAsStorageDialog')\r\n    return (\r\n        <div className={classes.root}>\r\n            <PageHead title={\"Pools\"} controller={pageHeadController} actions={\r\n                <>\r\n                    <Button\r\n                        className={classes.headAction}\r\n                        variant={\"text\"}\r\n                        color={'secondary'}\r\n                        startIcon={<Add/>}\r\n                        onClick={createPoolDialogSwitchHandler}\r\n                    >New pool</Button>\r\n                </>\r\n            } />\r\n            <div className={classes.content}>\r\n                <Menu\r\n                    anchorEl={moreMenuEl}\r\n                    keepMounted\r\n                    open={Boolean(moreMenuEl)}\r\n                    onClose={handleMoreMenuClose}\r\n                >\r\n                    <MenuItem onClick={() => {\r\n                        asStorageSwitchHandler()\r\n                        handleMoreMenuClose()\r\n                    }}>Use as storage</MenuItem>\r\n\r\n                </Menu>\r\n                <ListItemDialog\r\n                    primary={contextPool?.name ?? \"unknown\"}\r\n                    icon={<Dns/>}\r\n                    onClose={asStorageSwitchHandler}\r\n                    title={\"As storage\"}\r\n                    onOk={async () => {\r\n                        await storageModel.addStorage(`/${contextPool?.name}`, \"ZFSPool\")\r\n                        asStorageSwitchHandler()\r\n                        enqueueSnackbar(\"storage created\", {\r\n                            variant: 'success'\r\n                        })\r\n                    }}\r\n                    text={\"Use this pool to create new storage\"}\r\n                    open={layoutModel.getDialogOpen('poolAsStorageDialog')}\r\n                />\r\n                <CreateZFSPoolDialog\r\n                    open={layoutModel.getDialogOpen(\"newZFSPool\")}\r\n                    onClose={createPoolDialogSwitchHandler}\r\n                    onOk={async () => {\r\n                        enqueueSnackbar(\"create pool success\", {\r\n                            variant: 'success'\r\n                        })\r\n                        createPoolDialogSwitchHandler()\r\n                        await zfsModel.refresh()\r\n                    }}\r\n                />\r\n                <Dialog open={Boolean(deleteConfirmDialog.open)} maxWidth={\"xl\"}>\r\n                    <DialogTitle>\r\n                        Remove\r\n                    </DialogTitle>\r\n                    <DialogContent className={classes.deleteDialogContent}>\r\n                        <DialogContentText>\r\n                            ALL DATA in pool will deleted,please confirm!\r\n                        </DialogContentText>\r\n                        <ListItem className={classes.deleteDialogItem}>\r\n                            <ListItemAvatar>\r\n                                <Avatar>\r\n                                    <Dns/>\r\n                                </Avatar>\r\n                            </ListItemAvatar>\r\n                            <ListItemText primary={deleteConfirmDialog.name}/>\r\n                        </ListItem>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button color={\"secondary\"} onClick={closeDeleteConfirm}>\r\n                            Cancel\r\n                        </Button>\r\n                        <Button color={\"secondary\"} onClick={onRemoveHandler}>\r\n                            Delete\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <List className={classes.list}>\r\n                    {\r\n                        zfsModel.pools.map(pool => {\r\n                            return (\r\n                                <ListItem key={pool.name} button onClick={() => history.push(`/pool/${pool.name}/info`)}>\r\n                                    <ListItemAvatar>\r\n                                        <Avatar className={classes.avatar}>\r\n                                            <Dns/>\r\n                                        </Avatar>\r\n                                    </ListItemAvatar>\r\n                                    <ListItemText primary={pool.name}/>\r\n                                    <ListItemSecondaryAction>\r\n\r\n                                        <IconButton>\r\n                                            <Delete onClick={() => openDeleteConfirm(pool.name)}/>\r\n                                        </IconButton>\r\n                                        <IconButton onClick={(e) => {\r\n                                            setContextPool(pool)\r\n                                            handleMoreMenuClick(e)\r\n                                        }}>\r\n                                            <MoreVert/>\r\n                                        </IconButton>\r\n                                    </ListItemSecondaryAction>\r\n                                </ListItem>\r\n                            )\r\n                        })\r\n                    }\r\n\r\n                </List>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ZFSPage;\r\n","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\Storage\\index.tsx",["752","753","754","755","756"],"import React, {useEffect, useState} from \"react\";\r\nimport ListPage from \"../../components/ListPage\";\r\nimport useStorageModel from \"./model\";\r\nimport {\r\n    Avatar, Button,\r\n    IconButton,\r\n    List,\r\n    ListItem,\r\n    ListItemAvatar,\r\n    ListItemSecondaryAction,\r\n    ListItemText\r\n} from \"@material-ui/core\";\r\nimport {Add, Archive, Delete} from \"@material-ui/icons\";\r\nimport useStyles from \"./style\";\r\nimport ListItemDialog from \"../../components/ListItemDialog\";\r\nimport {Storage} from \"../../api/storage\";\r\nimport useLayoutModel from \"../../model/layout\";\r\nimport {useSnackbar} from \"notistack\";\r\nimport PageHead from \"../../components/PageHead\";\r\nimport {usePageHeadController} from \"../../components/PageHead/hook\";\r\n\r\nexport interface StoragePagePropsType {\r\n\r\n}\r\n\r\nconst StoragePage = ({}: StoragePagePropsType) => {\r\n    const storageModel = useStorageModel()\r\n    const layoutModel = useLayoutModel()\r\n    const classes = useStyles()\r\n    useEffect(() => {\r\n        storageModel.init()\r\n    }, [])\r\n    const {enqueueSnackbar} = useSnackbar();\r\n    const [contextStorage, setContextStorage] = useState<Storage>()\r\n    const switchDeleteConfirmDialog = layoutModel.getDialogSwitchHandler('deleteStorageConfirm')\r\n    const pageHeadController = usePageHeadController({})\r\n\r\n    const openDeleteDialog = (storage: Storage) => {\r\n        setContextStorage(storage)\r\n        switchDeleteConfirmDialog()\r\n    }\r\n    return (\r\n        <div>\r\n            <ListItemDialog\r\n                primary={contextStorage?.id ?? \"unknown\"}\r\n                icon={<Archive/>}\r\n                onClose={switchDeleteConfirmDialog}\r\n                title={\"Delete\"}\r\n                onOk={async () => {\r\n                    if (contextStorage) {\r\n                        await storageModel.remove(contextStorage?.id)\r\n                        enqueueSnackbar(`storage ${contextStorage?.id} removed`, {variant: \"success\"})\r\n                    }\r\n                    switchDeleteConfirmDialog()\r\n                }}\r\n                open={layoutModel.getDialogOpen('deleteStorageConfirm')}\r\n                secondary={contextStorage?.type ?? \"unknown\"}\r\n                text={\"Remove action will remove all SHARE FOLDER in this storage!\"}\r\n            />\r\n            <PageHead\r\n                title={\"Storage\"}\r\n                controller={pageHeadController}\r\n            />\r\n            <List className={classes.list}>\r\n                {\r\n                    storageModel.storages.map(storage => {\r\n                        return (\r\n                            <ListItem key={storage.id} button>\r\n                                <ListItemAvatar>\r\n                                    <Avatar className={classes.avatar}>\r\n                                        <Archive/>\r\n                                    </Avatar>\r\n                                </ListItemAvatar>\r\n                                <ListItemText primary={storage.id} secondary={storage.type}/>\r\n                                <ListItemSecondaryAction>\r\n                                    <IconButton onClick={() => openDeleteDialog(storage)}>\r\n                                        <Delete/>\r\n                                    </IconButton>\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                        )\r\n                    })\r\n                }\r\n            </List>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StoragePage;\r\n","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\Disks\\index.tsx",["757","758","759"],"import React, {useEffect} from \"react\";\r\nimport useDisksModel from \"./model\";\r\nimport {Grid, Typography} from \"@material-ui/core\";\r\nimport useStyles from \"./style\";\r\nimport DiskCard from \"../../components/DiskCard\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {usePageHeadController} from \"../../components/PageHead/hook\";\r\nimport PageHead from \"../../components/PageHead\";\r\n\r\nexport interface DisksPagePropsType {\r\n\r\n}\r\n\r\nconst DisksPage = ({}: DisksPagePropsType) => {\r\n    const classes = useStyles()\r\n    const model = useDisksModel()\r\n    const history = useHistory()\r\n    const pageHeadController = usePageHeadController({})\r\n    useEffect(() => {\r\n        model.initData()\r\n    }, [])\r\n    return (\r\n        <div className={classes.root}>\r\n            <PageHead title={\"Disks\"} controller={pageHeadController}/>\r\n            <div className={classes.content}>\r\n                <Grid container className={classes.grid}>\r\n                    {\r\n                        model.disks.map(it => {\r\n                            return (\r\n                                <Grid item xl={2} lg={3} md={3} sm={6} xs={12} className={classes.item}>\r\n                                    <DiskCard\r\n                                        disk={it}\r\n                                        onClick={() => {\r\n                                            history.push(`/disk/${it.name}`)\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                            )\r\n                        })\r\n                    }\r\n                </Grid>\r\n            </div>\r\n\r\n\r\n            {/*<List>*/}\r\n            {/*    {*/}\r\n            {/*        model.disks.map(it => {*/}\r\n            {/*            return (*/}\r\n            {/*                <ListItem key={it.name} button>*/}\r\n            {/*                    <ListItemAvatar>*/}\r\n            {/*                        <Avatar className={classes.avatar}>*/}\r\n            {/*                            <Storage />*/}\r\n            {/*                        </Avatar>*/}\r\n            {/*                    </ListItemAvatar>*/}\r\n            {/*                    <ListItemText primary={it.name} secondary={it.model}/>*/}\r\n            {/*                </ListItem>*/}\r\n            {/*            )*/}\r\n            {/*        })*/}\r\n            {/*    }*/}\r\n            {/*</List>*/}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DisksPage;\r\n","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\Apps\\index.tsx",["760","761","762","763"],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\Users\\index.tsx",["764","765","766"],"import React, {useEffect} from \"react\";\r\nimport useStyles from \"./style\";\r\nimport {\r\n    Avatar,\r\n    Button, IconButton,\r\n    List,\r\n    ListItem,\r\n    ListItemAvatar,\r\n    ListItemSecondaryAction,\r\n    ListItemText, Menu,\r\n    MenuItem,\r\n    Typography\r\n} from \"@material-ui/core\";\r\nimport useUsersModel from \"./model\";\r\nimport {Add, Delete, MoreVert, Person} from \"@material-ui/icons\";\r\nimport useLayoutModel from \"../../model/layout\";\r\nimport NewUserDialog from \"../../components/NewUserDialog\";\r\nimport {useContextMenu} from \"../../hooks/ContextMenu\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport PageHead from \"../../components/PageHead\";\r\nimport {usePageHeadController} from \"../../components/PageHead/hook\";\r\n\r\nexport interface UsersPagePropsType {\r\n\r\n}\r\nconst UsersPage = ({}: UsersPagePropsType) => {\r\n    const classes = useStyles()\r\n    const usersModel = useUsersModel()\r\n    const layoutModel = useLayoutModel()\r\n    const userContextMenu = useContextMenu<string>()\r\n    const history = useHistory()\r\n    const onSwitchNewUserDialog = layoutModel.getDialogSwitchHandler(\"newUser\")\r\n    const onUserClickItem = (username:string) => {\r\n        history.push(`/user/${username}`)\r\n    }\r\n    const pageHeadController = usePageHeadController({})\r\n    useEffect(() => {\r\n        usersModel.initData()\r\n    }, [])\r\n    return (\r\n        <div className={classes.root}>\r\n            <NewUserDialog\r\n                open={layoutModel.getDialogOpen(\"newUser\")}\r\n                onClose={onSwitchNewUserDialog}\r\n                onOk={(username, password) => {\r\n                    usersModel.newUser(username,password)\r\n                    onSwitchNewUserDialog()\r\n                }}\r\n            />\r\n            <Menu\r\n                open={userContextMenu.isOpen}\r\n                anchorEl={userContextMenu.anchor}\r\n                onClose={() => userContextMenu.close()}\r\n            >\r\n                <MenuItem onClick={async () => {\r\n                    if (userContextMenu.data) {\r\n                        userContextMenu.close()\r\n                        await usersModel.remove(userContextMenu.data)\r\n\r\n                    }\r\n                }}>\r\n                    <Delete/> Remove user\r\n                </MenuItem>\r\n            </Menu>\r\n            <PageHead\r\n                title={\"Users\"}\r\n                controller={pageHeadController}\r\n                actions={\r\n                    <>\r\n                        <Button\r\n                            variant=\"text\"\r\n                            color=\"secondary\"\r\n                            startIcon={<Add />}\r\n                            onClick={onSwitchNewUserDialog}\r\n                        >\r\n                            New user\r\n                        </Button>\r\n                    </>\r\n                }\r\n\r\n            />\r\n            <List>\r\n                {\r\n                    usersModel.users.map(it => {\r\n                        return (\r\n                            <ListItem key={it} button onClick={() => onUserClickItem(it)}>\r\n                                <ListItemAvatar>\r\n                                    <Avatar className={classes.avatar}>\r\n                                        <Person />\r\n                                    </Avatar>\r\n                                </ListItemAvatar>\r\n                                <ListItemText primary={it} />\r\n                                <ListItemSecondaryAction>\r\n                                    <IconButton onClick={(e) => userContextMenu.open(it,e.target)}>\r\n                                        <MoreVert />\r\n                                    </IconButton>\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                        )\r\n                    })\r\n                }\r\n\r\n            </List>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UsersPage;\r\n","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\ShareFolder\\index.tsx",["767","768","769","770","771"],"import React, {useEffect} from \"react\";\r\nimport useStyles from \"./style\";\r\nimport useShareFoldersModel from \"./model\";\r\nimport {Avatar, Button, List, ListItem, ListItemAvatar, ListItemText, Typography} from \"@material-ui/core\";\r\nimport {Add, Folder, Person} from \"@material-ui/icons\";\r\nimport NewShareDialog from \"../../components/NewShareDialog\";\r\nimport useLayoutModel from \"../../model/layout\";\r\nimport layout from \"../../model/layout\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport PageHead from \"../../components/PageHead\";\r\nimport {usePageHeadController} from \"../../components/PageHead/hook\";\r\n\r\nexport interface ShareFolderPropsType {\r\n\r\n}\r\n\r\nconst ShareFolder = ({}: ShareFolderPropsType) => {\r\n    const classes = useStyles()\r\n    const model = useShareFoldersModel()\r\n    const history = useHistory()\r\n    useEffect(() => {\r\n        model.initData()\r\n    }, [])\r\n    const layoutModel = useLayoutModel()\r\n    const pageHeadController = usePageHeadController({})\r\n    const newShareSwitchHandler = layoutModel.getDialogSwitchHandler(\"newShare\")\r\n    return (\r\n        <div>\r\n            {\r\n                layoutModel.getDialogOpen(\"newShare\") &&\r\n                <NewShareDialog\r\n                    open={true}\r\n                    onClose={newShareSwitchHandler}\r\n                    onCreateShare={async (data) => {\r\n                        await model.createShare(data)\r\n                        newShareSwitchHandler()\r\n                    }}\r\n                />\r\n            }\r\n            <PageHead\r\n                title={\"ShareFolders\"}\r\n                controller={pageHeadController}\r\n                actions={\r\n                    <>\r\n                        <Button\r\n                            variant=\"text\"\r\n                            color=\"secondary\"\r\n                            startIcon={<Add />}\r\n                            onClick={newShareSwitchHandler}\r\n                        >\r\n                            New share folder\r\n                        </Button>\r\n                    </>\r\n                }\r\n\r\n            />\r\n            <List>\r\n                {\r\n                    model.folders.map(it => {\r\n                        return (\r\n                            <ListItem key={it.name} button onClick={() => history.push(`/folder/${it.name}/info`)}>\r\n                                <ListItemAvatar>\r\n                                    <Avatar className={classes.avatar}>\r\n                                        <Folder />\r\n                                    </Avatar>\r\n                                </ListItemAvatar>\r\n                                <ListItemText primary={it.name}/>\r\n                            </ListItem>\r\n                        )\r\n                    })\r\n                }\r\n\r\n            </List>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShareFolder;\r\n","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\Parts\\index.tsx",["772","773","774"],"﻿import React, {useEffect} from \"react\";\r\nimport usePartsPageModel from \"./model\";\r\nimport {Avatar, List, ListItem, ListItemAvatar, ListItemText, Typography} from \"@material-ui/core\";\r\nimport {Inbox} from \"@material-ui/icons\";\r\nimport useStyles from \"./style\";\r\n\r\nexport interface PartsPagePropsType {\r\n\r\n}\r\n\r\nconst PartsPage = ({}: PartsPagePropsType) => {\r\n    const model = usePartsPageModel()\r\n    const classes = useStyles()\r\n    useEffect(() => {\r\n        model.initData()\r\n    },[])\r\n    return (\r\n        <div>\r\n            <Typography variant={\"h4\"} className={classes.title}>\r\n                Parts\r\n            </Typography>\r\n            <List>\r\n            {\r\n                model.parts.map(part => {\r\n                    return (\r\n                        <ListItem key={part.name} button>\r\n                            <ListItemAvatar>\r\n                                <Avatar className={classes.avatar}>\r\n                                    <Inbox />\r\n                                </Avatar>\r\n                            </ListItemAvatar>\r\n                            <ListItemText primary={part.name} secondary={part.fs_type}/>\r\n                        </ListItem>\r\n                    )\r\n                })\r\n            }\r\n            </List>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PartsPage;\r\n","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\DiskDetail\\index.tsx",["775","776"],"import useStyles from \"./style\";\r\nimport {Divider, Paper, Table, TableBody, TableCell, TableHead, TableRow, Typography} from \"@material-ui/core\";\r\nimport React, {useEffect} from \"react\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport useDiskDetailModel from \"./model\";\r\nimport PageHead from \"../../components/PageHead\";\r\nimport {usePageHeadController} from \"../../components/PageHead/hook\";\r\n\r\nexport interface DiskDetailPagePropsType {\r\n\r\n}\r\n\r\nconst DiskDetailPage = ({}: DiskDetailPagePropsType) => {\r\n    const classes = useStyles()\r\n    const {name}: any = useParams();\r\n    const model = useDiskDetailModel()\r\n    const pageHeadController = usePageHeadController({})\r\n    useEffect(() => {\r\n        model.setName(name)\r\n        model.loadInfo(name)\r\n    }, [])\r\n    return (\r\n        <div className={classes.root}>\r\n            <PageHead title={model.name ?? \"Disk\"} controller={pageHeadController} />\r\n            <div className={classes.content}>\r\n                <Paper className={classes.section} elevation={1}>\r\n                    <div className={classes.tableSectionHeader}>\r\n                        <Typography variant={\"subtitle1\"}>\r\n                            Base info\r\n                        </Typography>\r\n                    </div>\r\n                    <Divider/>\r\n                    <Table>\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell>\r\n                                    ModelFamily\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    {model.info?.modelFamily}\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>\r\n                                    ModelName\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    {model.info?.modelName}\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>\r\n                                    SerialNumber\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    {model.info?.serialNumber}\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </Paper>\r\n                <Paper className={classes.section} elevation={1}>\r\n                    <div className={classes.tableSectionHeader}>\r\n                        <Typography variant={\"subtitle1\"}>\r\n                            SMART\r\n                        </Typography>\r\n                    </div>\r\n                    <Divider/>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>\r\n                                    ID\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    Name\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    Value\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    Worst\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    Threshold\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {\r\n                                (model.info?.attrs ?? []).map(attr => {\r\n                                    return (\r\n                                        <TableRow key={attr.id}>\r\n                                            <TableCell>\r\n                                                { attr.id }\r\n                                            </TableCell>\r\n                                            <TableCell>\r\n                                                { attr.name }\r\n                                            </TableCell>\r\n                                            <TableCell>\r\n                                                { attr.value }\r\n                                            </TableCell>\r\n                                            <TableCell>\r\n                                                { attr.worst }\r\n                                            </TableCell>\r\n                                            <TableCell>\r\n                                                { attr.threshold }\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    )\r\n                                },[])\r\n                            }\r\n                        </TableBody>\r\n                    </Table>\r\n                </Paper>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DiskDetailPage;\r\n","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\UserDetail\\index.tsx",["777","778","779"],"import useStyles from './style'\r\nimport {\r\n    Button,\r\n    Divider,\r\n    Paper,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n    Typography\r\n} from \"@material-ui/core\";\r\nimport React, {useEffect} from \"react\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport useUserDetailModel from \"./model\";\r\nimport {usePageHeadController} from \"../../components/PageHead/hook\";\r\nimport PageHead from \"../../components/PageHead\";\r\nimport {Delete} from \"@material-ui/icons\";\r\n\r\nexport interface UserDetailPropsType {\r\n    className?: string\r\n}\r\n\r\nconst UserDetail = ({className}: UserDetailPropsType): React.ReactElement => {\r\n    const classes = useStyles()\r\n    const {name}: any = useParams();\r\n    const model = useUserDetailModel()\r\n    const pageHeadController = usePageHeadController({})\r\n    useEffect(() => {\r\n        model.setUsername(name)\r\n        model.refreshShareFolders(name)\r\n    },[])\r\n    return (\r\n        <div className={classes.root}>\r\n            <PageHead\r\n                title={ model.username ?? \"\" }\r\n                controller={pageHeadController}\r\n            />\r\n            <div className={classes.content}>\r\n                <Paper>\r\n                    <div className={classes.tableSectionHeader}>\r\n                        <Typography variant={\"h5\"}>\r\n                            Folders\r\n                        </Typography>\r\n                    </div>\r\n                    <Divider />\r\n                    <TableContainer>\r\n                        <Table>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>\r\n                                        Folder\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        Access\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        Read\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        Write\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {\r\n                                    model.userShareFolder.map(folder => {\r\n                                        return (\r\n                                            <TableRow key={folder.name}>\r\n                                                <TableCell>\r\n                                                    {\r\n                                                        folder.name\r\n                                                    }\r\n                                                </TableCell>\r\n                                                <TableCell>\r\n                                                    {\r\n                                                        folder.access ? \"yes\":\"no\"\r\n                                                    }\r\n                                                </TableCell>\r\n                                                <TableCell>\r\n                                                    {\r\n                                                        folder.read ? \"yes\":\"no\"\r\n                                                    }\r\n                                                </TableCell>\r\n                                                <TableCell>\r\n                                                    {\r\n                                                        folder.write ? \"yes\":\"no\"\r\n                                                    }\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </Paper>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserDetail\r\n","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\Network\\index.tsx",["780","781","782"],"import useStyles from \"./style\";\r\nimport {Grid, Typography} from \"@material-ui/core\";\r\nimport React, {useEffect} from \"react\";\r\nimport useNetworkModel from \"./model\";\r\nimport NetworkCard from \"../../components/NetworkCard\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport PageHead from \"../../components/PageHead\";\r\nimport {usePageHeadController} from \"../../components/PageHead/hook\";\r\n\r\nexport interface NetworkPagePropsType {\r\n\r\n}\r\n\r\nconst NetworkPage = ({}: NetworkPagePropsType) => {\r\n    const classes = useStyles()\r\n    const networkModel = useNetworkModel()\r\n    const history = useHistory()\r\n    const pageHeadController = usePageHeadController({})\r\n    useEffect(() => {\r\n        networkModel.refresh()\r\n    },[])\r\n    return (\r\n        <div>\r\n            <PageHead title={\"Network\"} controller={pageHeadController} />\r\n            <div className={classes.content}>\r\n                <Grid container  spacing={2}>\r\n                    {\r\n                        networkModel.networks.map(network => {\r\n                            return (\r\n                                <Grid item key={network.name} xs={2}>\r\n                                    <NetworkCard\r\n                                        network={network}\r\n                                        onClick={() => history.push(`/network/${network.name}`)}\r\n                                    />\r\n                                </Grid>\r\n                            )\r\n                        })\r\n                    }\r\n                </Grid>\r\n            </div>\r\n\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NetworkPage;\r\n","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\NetworkDetail\\index.tsx",["783","784","785"],"import useStyles from \"./style\";\r\nimport {Divider, Grid, Paper, Table, TableBody, TableCell, TableHead, TableRow, Typography} from \"@material-ui/core\";\r\nimport React, {useEffect} from \"react\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport useNetworkDetailModel from \"./model\";\r\nimport ValueField from \"../../components/ValueField\";\r\nimport {usePageHeadController} from \"../../components/PageHead/hook\";\r\nimport PageHead from \"../../components/PageHead\";\r\n\r\nexport interface NetworkDetailPropsType {\r\n\r\n}\r\n\r\nconst NetworkDetail = ({}: NetworkDetailPropsType) => {\r\n    const classes = useStyles()\r\n    const {name}: any = useParams()\r\n    const model = useNetworkDetailModel()\r\n    const pageHeadController = usePageHeadController({})\r\n\r\n    useEffect(() => {\r\n        model.refresh(name)\r\n    }, [])\r\n    return (\r\n        <div className={classes.root}>\r\n            <PageHead title={name} controller={pageHeadController} />\r\n            <div className={classes.contentWrap}>\r\n                <div className={classes.center}>\r\n                    {\r\n                        model.network &&\r\n                        <Paper className={classes.content}>\r\n                            <div className={classes.sectionTitle}>\r\n                                Status\r\n                            </div>\r\n                            <Grid container spacing={2} className={classes.sectionContent}>\r\n                                <Grid item xs={3}>\r\n                                    <ValueField label={\"product\"} value={model.network.hardwareInfo.product}\r\n                                                valueFontSize={14}/>\r\n                                </Grid>\r\n                                <Grid item xs={3}>\r\n                                    <ValueField label={\"speed\"}\r\n                                                value={model.network.hardwareInfo.configuration.speed}\r\n                                                valueFontSize={14}/>\r\n                                </Grid>\r\n                                <Grid item xs={3}>\r\n                                    <ValueField label={\"mac\"}\r\n                                                value={model.network.hardwareInfo.serial}\r\n                                                valueFontSize={14}/>\r\n                                </Grid>\r\n                                <Grid item xs={3}>\r\n                                    <ValueField label={\"link\"}\r\n                                                value={model.network.hardwareInfo.configuration.link}\r\n                                                valueFontSize={14}/>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Divider />\r\n                            <div className={classes.sectionContent}>\r\n                                <div className={classes.sectionTitle}>\r\n                                    Address\r\n                                </div>\r\n                                <Table>\r\n                                    <TableHead>\r\n\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {\r\n                                            model.network.IPv4Address.map(addr => {\r\n                                                return (\r\n                                                    <TableRow key={addr}>\r\n                                                        <TableCell>\r\n                                                            {addr}\r\n                                                        </TableCell>\r\n                                                        <TableCell>\r\n                                                            IPv4\r\n                                                        </TableCell>\r\n                                                    </TableRow>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                        {\r\n                                            model.network.IPv6Address.map(addr => {\r\n                                                return (\r\n                                                    <TableRow key={addr}>\r\n                                                        <TableCell>\r\n                                                            {addr}\r\n                                                        </TableCell>\r\n                                                        <TableCell>\r\n                                                            IPv6\r\n                                                        </TableCell>\r\n                                                    </TableRow>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </div>\r\n                        </Paper>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NetworkDetail;\r\n","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\UserDetail\\model.ts",["786"],"import {createModel} from 'hox'\r\nimport {useEffect, useState} from \"react\";\r\nimport {fetchUserShareFolder, UserShareFolder} from \"../../api/users\";\r\n\r\nconst UserDetailModel = () => {\r\n    const [username,setUsername] = useState<string>()\r\n    const [userShareFolder,setUserShareFolder] = useState<UserShareFolder[]>([])\r\n    const refreshShareFolders = async (username:string) => {\r\n        if (!username) {\r\n            return;\r\n        }\r\n        const response = await fetchUserShareFolder(username)\r\n        setUserShareFolder(response.folders)\r\n    }\r\n\r\n    return {\r\n        username,setUsername,userShareFolder,refreshShareFolders\r\n    }\r\n}\r\nconst useUserDetailModel = createModel(UserDetailModel)\r\nexport default useUserDetailModel\r\n","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\UserDetail\\style.ts",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\DiskDetail\\model.ts",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\Parts\\model.ts",["787","788"],"import {createModel} from \"hox\";\r\nimport {fetchDisks, fetchParts, Part} from \"../../api/disks\";\r\nimport {useEffect, useState} from \"react\";\r\nconst targetFS = [\"ext4\",\"ntfs\"]\r\nconst PartsPageModel = () => {\r\n    const [parts, setParts] = useState<Part[]>([])\r\n    const initData = async () => {\r\n        let result: Part[] = await fetchParts()\r\n        if (!result) {\r\n            return\r\n        }\r\n        result = result.filter(part => {\r\n            return targetFS.find(it => it === part.fs_type) !== undefined\r\n        })\r\n        setParts(result)\r\n    }\r\n    return {\r\n        parts,initData\r\n    }\r\n}\r\nconst usePartsPageModel = createModel(PartsPageModel)\r\nexport default usePartsPageModel\r\n","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\Parts\\style.ts",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\ShareFolder\\model.ts",["789","790"],"import {getUserList} from \"../../api/users\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {createModel} from \"hox\";\r\nimport {createNewShare, getShareList, ShareFolder} from \"../../api/share\";\r\nimport {showAPIResponseErrorMessage, showGlobalSnackMessage} from \"../../utils/message\";\r\n\r\nconst ShareFoldersModel = () => {\r\n    const [folders, setFolders] = useState<ShareFolder[]>([])\r\n    const initData = async () => {\r\n        const response = await getShareList()\r\n        setFolders(response.folders)\r\n    }\r\n    const createShare = async (data: any) => {\r\n        const response:any = await createNewShare(data)\r\n        if (response.success) {\r\n            showGlobalSnackMessage(\"create share folder success\",{variant:\"success\"})\r\n        }else{\r\n            showAPIResponseErrorMessage(response)\r\n        }\r\n        await initData()\r\n    }\r\n\r\n    return {\r\n        folders, createShare, initData\r\n    }\r\n}\r\nconst useShareFoldersModel = createModel(ShareFoldersModel)\r\nexport default useShareFoldersModel\r\n","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\ShareFolder\\style.ts",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\Users\\model.ts",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\Apps\\style.ts",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\Users\\style.ts",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\Storage\\model.ts",["791"],"import {createModel} from \"hox\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {fetchStorageList, Storage, removeStorage, createStorage} from \"../../api/storage\";\r\n\r\nconst StorageModel = () => {\r\n    const [storages, setStorages] = useState<Storage[]>([])\r\n    const init = async () => {\r\n        const response = await fetchStorageList()\r\n        if (response) {\r\n            setStorages(response.storages)\r\n\r\n        }\r\n    }\r\n    const remove = async (id: string) => {\r\n        await removeStorage(id)\r\n        await init()\r\n    }\r\n    const addStorage = async (source:string,type:string) => {\r\n        await createStorage({source,type})\r\n        await init()\r\n    }\r\n\r\n    return {\r\n        storages, remove, addStorage,init\r\n    }\r\n}\r\nconst useStorageModel = createModel(StorageModel)\r\nexport default useStorageModel\r\n","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\Disks\\style.ts",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\Disks\\model.ts",["792"],"import {createModel} from \"hox\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {Disk, fetchDisks} from \"../../api/disks\";\r\n\r\nconst DisksModel = () => {\r\n    const [disks,setDisks] = useState<Disk[]>([])\r\n    const initData = async () => {\r\n        const response = await fetchDisks()\r\n        if (response) {\r\n            setDisks(response.disks.sort((a, b) => a.name.localeCompare(b.name)))\r\n\r\n        }\r\n    }\r\n\r\n    return {\r\n        disks,initData\r\n    }\r\n}\r\nconst useDisksModel = createModel(DisksModel)\r\nexport default useDisksModel\r\n","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\Storage\\style.ts",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\ZFS\\style.ts",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\ZFS\\model.ts",["793"],"import {createModel} from \"hox\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {createZFSPool, fetchZFSPools, removeZFSPool, ZFSPool} from \"../../api/zfs\";\r\nimport {showAPIResponseErrorMessage, showGlobalSnackMessage} from \"../../utils/message\";\r\n\r\nconst ZFSModel = () => {\r\n    const [pools,setPools] = useState<ZFSPool[]>([])\r\n    const refresh = async() => {\r\n        const response = await fetchZFSPools()\r\n        if (response) {\r\n            setPools(response.pools)\r\n        }\r\n    }\r\n    const removePool = async (name:string) => {\r\n        const response = await removeZFSPool(name)\r\n        if (response.success) {\r\n            showGlobalSnackMessage(\"remove zfs pool success\",{variant:\"success\"})\r\n        }else{\r\n            showAPIResponseErrorMessage(response)\r\n        }\r\n        await refresh()\r\n    }\r\n    const createPool = async (data:any) => {\r\n        await createZFSPool(data)\r\n        await refresh()\r\n    }\r\n    return {\r\n        pools,removePool,createPool,refresh\r\n    }\r\n}\r\nconst useZFSModel = createModel(ZFSModel)\r\nexport default useZFSModel\r\n","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\model\\layout.ts",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\Apps\\model.ts",["794"],"import {createModel} from \"hox\";\r\nimport {useState} from \"react\";\r\nimport {App, fetchApps, removeAutoStart, setAutoStart, startApp, stopApp, unInstallAPP} from \"../../api/apps\";\r\n\r\nconst AppsPageModel = () => {\r\n    const [appList,setAppList] = useState<App[]>([])\r\n    const loadApp = async () => {\r\n        const response = await fetchApps()\r\n        if (response) {\r\n            setAppList(response.apps)\r\n        }\r\n    }\r\n\r\n    const start = async (appId:string) => {\r\n        await startApp(appId)\r\n    }\r\n    const stop = async (appId:string) => {\r\n        await stopApp(appId)\r\n    }\r\n    const addToAutoStart = async (appId:string) => {\r\n        await setAutoStart(appId)\r\n    }\r\n    const removeFromAutoStart = async (appId:string) => {\r\n        await removeAutoStart(appId)\r\n    }\r\n    const uninstall = async (id:string) => {\r\n        await unInstallAPP(id)\r\n    }\r\n    return {\r\n        appList,loadApp,start,stop,addToAutoStart,removeAutoStart,uninstall\r\n    }\r\n}\r\nconst useAppsPageModel = createModel(AppsPageModel)\r\nexport default useAppsPageModel\r\n","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\hooks\\ContextMenu.ts",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\DiskDetail\\style.tsx",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\NetworkDetail\\model.ts",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\Network\\model.ts",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\NetworkDetail\\style.tsx",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\Network\\style.tsx",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\api\\storage.ts",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\api\\disks.ts",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\api\\users.ts",["795"],"import apiRequest from \"../utils/request\";\r\nimport {ApplicationConfig} from \"../config\";\r\nimport {BaseResponse} from \"./base\";\r\nimport {useClickAway} from \"ahooks\";\r\n\r\nexport type UserGroupType = \"admin\" | \"normal\"\r\n\r\nexport interface UserGroup {\r\n    name: string\r\n    type: UserGroupType\r\n    gid: string\r\n}\r\n\r\nexport interface UserListResponse {\r\n    users: string[]\r\n}\r\n\r\nexport type UserGroupDetail = UserGroup & {\r\n    users: {\r\n        name: string\r\n        uid: string\r\n    }[]\r\n}\r\n\r\nexport interface UserShareFolder {\r\n    name: string\r\n    access: boolean\r\n    read: boolean\r\n    write: boolean\r\n}\r\nexport interface fetchUserShareFolderResponse {\r\n    folders: UserShareFolder[]\r\n}\r\n\r\nexport const getUserList = async (): Promise<UserListResponse> => {\r\n    return await apiRequest.get(ApplicationConfig.apiPaths.users)\r\n}\r\nexport const createUser = async (username: string, password: string): Promise<BaseResponse> => {\r\n    return await apiRequest.post(ApplicationConfig.apiPaths.users, {\r\n        data: {\r\n            username, password\r\n        }\r\n    })\r\n}\r\n\r\nexport const removeUser = async (username: string): Promise<BaseResponse> => {\r\n    return await apiRequest.delete(ApplicationConfig.apiPaths.users, {\r\n        params: {\r\n            username\r\n        }\r\n    })\r\n}\r\nexport const fetchGroupList = async (): Promise<{ groups: UserGroup[] }> => {\r\n    return await apiRequest.get(ApplicationConfig.apiPaths.groups)\r\n}\r\nexport const createGroup = async (name: string): Promise<UserGroup> => {\r\n    return await apiRequest.post(ApplicationConfig.apiPaths.groups, {data: {name}})\r\n}\r\nexport const fetchGroupDetail = async (name: string): Promise<UserGroupDetail> => {\r\n    return await apiRequest.get(ApplicationConfig.apiPaths.group.replace(\":name\", name))\r\n}\r\nexport const removeGroup = async (name: string): Promise<UserGroupDetail> => {\r\n    return await apiRequest.delete(ApplicationConfig.apiPaths.groups, {params: {name}})\r\n}\r\nexport const addUserToUserGroup = async (name: string, users: string[]): Promise<BaseResponse> => {\r\n    return await apiRequest.post(ApplicationConfig.apiPaths.groupUsers.replace(\":name\", name), {data: {users}})\r\n}\r\n\r\nexport const removeUserFromUserGroup = async (name: string, users: string[]): Promise<BaseResponse> => {\r\n    return await apiRequest.delete(ApplicationConfig.apiPaths.groupUsers.replace(\":name\", name), {data: {users}})\r\n}\r\n\r\nexport const fetchUserShareFolder = async (username: string):Promise<BaseResponse & fetchUserShareFolderResponse> => {\r\n    return await apiRequest.get(ApplicationConfig.apiPaths.userShare,{\r\n        params:{\r\n            username\r\n        }\r\n    })\r\n}\r\n","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\api\\share.ts",["796"],"import apiRequest from \"../utils/request\";\r\nimport {ApplicationConfig} from \"../config\";\r\nimport {UserGroup, UserListResponse} from \"./users\";\r\nimport {BaseResponse} from \"./base\";\r\n\r\nexport interface ShareFolderUser {\r\n    uid: string\r\n    name: string\r\n}\r\n\r\nexport interface ShareFolder {\r\n    id: number\r\n    name: string\r\n    storage: {\r\n        id: string\r\n    },\r\n    validUsers: ShareFolderUser[],\r\n    invalidUsers: ShareFolderUser[],\r\n    readUsers: ShareFolderUser[],\r\n    writeUsers: ShareFolderUser[],\r\n    validGroups: UserGroup[]\r\n    invalidGroups: UserGroup[]\r\n    readGroups: UserGroup[]\r\n    writeGroups: UserGroup[]\r\n    public: boolean,\r\n    readonly: boolean\r\n    enable: boolean\r\n}\r\n\r\nexport interface FetchShareFoldersResponse {\r\n    folders: ShareFolder[]\r\n}\r\n\r\nexport const getShareList = async (): Promise<FetchShareFoldersResponse> => {\r\n    return await apiRequest.get(ApplicationConfig.apiPaths.share)\r\n}\r\n\r\nexport const createNewShare = async (data: any): Promise<BaseResponse> => {\r\n    return await apiRequest.post(ApplicationConfig.apiPaths.share, {\r\n        data\r\n    })\r\n}\r\n\r\nexport const removeShare = async (id: number): Promise<BaseResponse> => {\r\n    return await apiRequest.delete(ApplicationConfig.apiPaths.share, {\r\n        params: {\r\n            id\r\n        }\r\n    })\r\n}\r\n\r\nexport interface ShareUpdateOption {\r\n    readUsers?: string[]\r\n    writeUsers?: string[]\r\n    validUsers?: string[]\r\n    invalidUsers?: string[]\r\n    readGroups?: string[]\r\n    writeGroups?: string[]\r\n    validGroups?: string[]\r\n    invalidGroups?: string[]\r\n    public?: boolean\r\n    readonly?: boolean\r\n    enable?: boolean\r\n}\r\n\r\nexport const updateShare = async (name: string, option: ShareUpdateOption): Promise<void> => {\r\n    return await apiRequest.post(ApplicationConfig.apiPaths.shareUpdate, {\r\n        data: {\r\n            name,\r\n            ...option\r\n        }\r\n    })\r\n}\r\n","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\api\\zfs.ts",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\utils\\message.ts",["797"],"import {OptionsObject, SnackbarMessage} from \"notistack\";\r\nimport {ResponseError} from \"umi-request\";\r\n\r\nexport const showGlobalSnackMessage = (message: SnackbarMessage, options?: OptionsObject) => {\r\n    document.dispatchEvent(new CustomEvent<{ message: SnackbarMessage, options?: OptionsObject }>(\"globalMessage\", {\r\n        detail: {\r\n            message,\r\n            options\r\n        }\r\n    }))\r\n}\r\nexport const showAPIResponseErrorMessage = (err:any) => {\r\n    console.log(err)\r\n    document.dispatchEvent(new CustomEvent<{ message: SnackbarMessage, options?: OptionsObject }>(\"globalMessage\", {\r\n        detail: {\r\n            message:`${err.data.reason} [${err.status}]`,\r\n            options: {variant: \"error\"}\r\n        }\r\n    }))\r\n}\r\n","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\api\\apps.ts",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\hooks\\ConfirmDialog.ts",["798"],"import {useEffect, useState} from \"react\";\r\n\r\nexport interface ConfirmDialogController {\r\n    message?: string\r\n    open: boolean\r\n    openDialog: (option: ConfirmOption) => void\r\n    onClose: () => void\r\n    onOk?: () => void\r\n    title: string\r\n}\r\n\r\nexport interface ConfirmOption {\r\n    message: string\r\n    onOk?: () => void\r\n    title?: string\r\n}\r\n\r\nexport const useConfirmDialog = (): ConfirmDialogController => {\r\n    const [open, setOpen] = useState<boolean>(false)\r\n    const [option, setOption] = useState<ConfirmOption | undefined>()\r\n    const openDialog = (option: ConfirmOption) => {\r\n        setOption(option)\r\n        setOpen(true)\r\n    }\r\n    const onClose = () => {\r\n        setOpen(false)\r\n    }\r\n\r\n    return {\r\n        message: option?.message,\r\n        open: open,\r\n        openDialog,\r\n        onClose,\r\n        onOk: option?.onOk,\r\n        title: option?.title ?? \"Confirm\"\r\n    }\r\n}\r\n","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\api\\network.ts",["799"],"import apiRequest from \"../utils/request\";\r\nimport {ApplicationConfig} from \"../config\";\r\nimport {DiskInfo} from \"./disks\";\r\nimport {BaseResponse} from \"./base\";\r\n\r\nexport interface IPv4 {\r\n    dhcp: boolean;\r\n    address?: any;\r\n}\r\n\r\nexport interface IPv6 {\r\n    dhcp: boolean;\r\n    address?: any;\r\n}\r\n\r\nexport interface Configuration {\r\n    autonegotiation: string;\r\n    broadcast: string;\r\n    driver: string;\r\n    driverversion: string;\r\n    duplex: string;\r\n    firmware: string;\r\n    ip: string;\r\n    latency: string;\r\n    link: string;\r\n    multicast: string;\r\n    port: string;\r\n    speed: string;\r\n}\r\n\r\nexport interface Capabilities {\r\n    pm: string;\r\n    msi: string;\r\n    pciexpress: string;\r\n    msix: string;\r\n    bus_master: string;\r\n    cap_list: string;\r\n    ethernet: boolean;\r\n    physical: string;\r\n    tp: string;\r\n    mii: string;\r\n    autonegotiation: string;\r\n}\r\n\r\nexport interface HardwareInfo {\r\n    id: string;\r\n    class: string;\r\n    claimed: boolean;\r\n    handle: string;\r\n    description: string;\r\n    product: string;\r\n    vendor: string;\r\n    physid: string;\r\n    businfo: string;\r\n    logicalname: string;\r\n    version: string;\r\n    serial: string;\r\n    units: string;\r\n    size: number;\r\n    capacity: number;\r\n    width: number;\r\n    clock: number;\r\n    configuration: Configuration;\r\n    capabilities: Capabilities;\r\n}\r\n\r\nexport interface Network {\r\n    name: string;\r\n    IPv4Address: string[];\r\n    IPv6Address: string[];\r\n    IPv4: IPv4;\r\n    IPv6: IPv6;\r\n    hardwareInfo: HardwareInfo;\r\n}\r\nexport const fetchNetworkStatus = async ():Promise<{ networks:Network[] } & BaseResponse> => {\r\n    return await apiRequest.get(ApplicationConfig.apiPaths.networkStatus,{\r\n\r\n    })\r\n}\r\n","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\NewUserDialog\\index.tsx",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\AppCard\\index.tsx",["800","801","802","803"],"import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {\r\n    Avatar,\r\n    Button,\r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    IconButton,\r\n    Menu,\r\n    MenuItem,\r\n    Typography\r\n} from \"@material-ui/core\";\r\nimport {Apps, MoreVert} from \"@material-ui/icons\";\r\nimport {App} from \"../../api/apps\";\r\nimport {getAppIconUrl} from \"../../utils/app\";\r\nimport useStyles from \"./style\";\r\n\r\n\r\n\r\ninterface AppCardPropsType {\r\n    app: App\r\n    onStart?: () => void\r\n    onStop?: () => void\r\n    enableAutoStart?: () => void\r\n    disableAutoStart?: () => void\r\n    onRemove:() => void\r\n}\r\n\r\n\r\nexport default function AppCard({app, onStart, onStop, enableAutoStart, disableAutoStart,onRemove}: AppCardPropsType) {\r\n    const classes = useStyles();\r\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n\r\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    const renderMenu = () => {\r\n        return (\r\n            <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n            >\r\n                {\r\n                    app.auto_start ?\r\n                        <MenuItem\r\n                            onClick={() => {\r\n                                if (disableAutoStart){\r\n                                    disableAutoStart()\r\n                                }\r\n                                handleClose()\r\n                            }}\r\n                        >\r\n                            Disable autostart\r\n                        </MenuItem>\r\n                        :\r\n                        <MenuItem\r\n                            onClick={\r\n                                () => {\r\n                                    if (enableAutoStart) {\r\n                                        enableAutoStart()\r\n                                    }\r\n                                    handleClose()\r\n                                }\r\n                            }\r\n                        >\r\n                            Enable autostart\r\n                        </MenuItem>\r\n                }\r\n                <MenuItem\r\n                    onClick={\r\n                        () => {\r\n                            onRemove()\r\n                            handleClose()\r\n                        }\r\n                    }\r\n                >\r\n                    Uninstall\r\n                </MenuItem>\r\n            </Menu>\r\n        )\r\n    }\r\n    return (\r\n        <Card className={classes.main}>\r\n            {renderMenu()}\r\n            <CardContent>\r\n                <div className={classes.header}>\r\n                    <Avatar className={classes.icon}>\r\n                        <img src={getAppIconUrl(app.id)} className={classes.appicon}  />\r\n                    </Avatar>\r\n                    <div className={classes.title}>\r\n                        {app.name}\r\n                    </div>\r\n                    <IconButton onClick={handleClick}>\r\n                        <MoreVert/>\r\n                    </IconButton>\r\n                </div>\r\n\r\n                <div className={classes.status}>\r\n                    {app.status}\r\n                </div>\r\n            </CardContent>\r\n            <CardActions>\r\n                {\r\n                    app.status === \"Stop\" &&\r\n                    <Button size=\"small\" onClick={onStart}>Start</Button>\r\n                }\r\n                {\r\n                    app.status === \"Running\" &&\r\n                    <Button size=\"small\" onClick={onStop}>Stop</Button>\r\n                }\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n}\r\n","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\InstallAppDialog\\index.tsx",["804","805","806","807","808","809","810"],"import {Button, Dialog, DialogActions, DialogContent, DialogTitle} from \"@material-ui/core\";\r\nimport {ReactElement, useEffect, useState} from \"react\";\r\nimport useStyles from \"./style\";\r\nimport UploadStep from \"./setp/upload\";\r\nimport InstallPackInfoStep from \"./setp/confirm\";\r\nimport {AppPackInfo, installApp, uploadAppPack} from \"../../api/apps\";\r\nimport {useInstallAppForm} from \"./hook\";\r\nimport {useSnackbar} from \"notistack\";\r\n\r\nexport interface InstallAppDialogPropsType {\r\n    open?: boolean\r\n    onClose: () => void\r\n    onOk: () => void\r\n}\r\n\r\nconst InstallAppDialog = ({onOk, onClose, open = false}: InstallAppDialogPropsType): ReactElement => {\r\n    const classes = useStyles()\r\n    const [file, setFile] = useState<File | undefined>()\r\n    const [stepIndex, setStepIndex] = useState<number>(0)\r\n    const [isUpload,setIsUpload] = useState(false)\r\n    const [packInfo,setPackInfo] = useState<AppPackInfo | undefined>()\r\n    const installForm = useInstallAppForm()\r\n    const { enqueueSnackbar } = useSnackbar()\r\n    const uploadFile = async () => {\r\n        if (!file) {\r\n            return\r\n        }\r\n        setIsUpload(true)\r\n        const result  = await uploadAppPack(file)\r\n        setIsUpload(false)\r\n        setPackInfo(result)\r\n        setStepIndex(stepIndex + 1)\r\n        installForm.clear()\r\n    }\r\n    const onFinish = async () => {\r\n        if (!packInfo) {\r\n            return\r\n        }\r\n        for (let installArg of packInfo.args) {\r\n            if (installArg.require && installForm.getArgValue(installArg.key) === undefined) {\r\n                enqueueSnackbar(`install arg [${installArg.name}] is require`,{variant:\"error\"})\r\n                return\r\n            }\r\n        }\r\n        const args:any[] = []\r\n        installForm.args.forEach(arg => {\r\n            const packArg = packInfo.args.find(it => it.key === arg.key)\r\n            if (!packArg) {\r\n                return\r\n            }\r\n            args.push({\r\n                key:arg.key,\r\n                value:arg.value,\r\n                source:packArg.source\r\n            })\r\n        })\r\n        await installApp(packInfo.id,{\r\n            args\r\n        })\r\n        enqueueSnackbar(\"add install app task success\",{\r\n            variant: \"success\"\r\n        })\r\n        onOk()\r\n    }\r\n    useEffect(() => {\r\n        uploadFile()\r\n    },[file])\r\n    const renderContent = () => {\r\n        if (stepIndex == 0) {\r\n            return (\r\n                <UploadStep\r\n                    onFileChange={(file) => {\r\n                        setFile(file)\r\n                    }}\r\n                    filename={file?.name}\r\n                    isUpload={isUpload}\r\n                />\r\n            )\r\n        }\r\n        if (stepIndex == 1) {\r\n            return (\r\n                <InstallPackInfoStep packInfo={packInfo} form={installForm}/>\r\n            )\r\n        }\r\n    }\r\n    const getTitleText = () => {\r\n        switch (stepIndex) {\r\n            case 0:\r\n                return \"Install App > Upload\"\r\n            case 1:\r\n                return \"Install App > Confirm\"\r\n        }\r\n        return \"Install App\"\r\n    }\r\n    const isNextDisable = () => {\r\n        if (stepIndex == 2) {\r\n            return true\r\n        }\r\n        // if (!packInfo && stepIndex == 0) {\r\n        //     return true\r\n        // }\r\n        return false\r\n    }\r\n    return (\r\n        <Dialog open={open} onClose={onClose} maxWidth={\"xl\"}>\r\n            <DialogTitle>\r\n                {getTitleText()}\r\n            </DialogTitle>\r\n            <DialogContent className={classes.content}>\r\n                {renderContent()}\r\n            </DialogContent>\r\n            <DialogActions className={classes.actions}>\r\n                <Button\r\n                    disabled={stepIndex == 0}\r\n                    onClick={() => {\r\n                        setStepIndex(stepIndex - 1)\r\n                    }}\r\n                >\r\n                    Previous\r\n                </Button>\r\n                <Button\r\n                    disabled={isNextDisable()}\r\n                    onClick={() => {\r\n                        if (stepIndex == 1) {\r\n                            onFinish()\r\n                            return\r\n                        }\r\n                        setStepIndex(stepIndex + 1)\r\n                    }}\r\n                >\r\n                    {stepIndex == 1 ? \"Install\" : \"Next\" }\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default InstallAppDialog\r\n","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\NewShareDialog\\index.tsx",["811"],"import React, {useState} from \"react\";\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogProps,\r\n    DialogTitle,\r\n    Step,\r\n    StepLabel,\r\n    Stepper\r\n} from \"@material-ui/core\";\r\nimport useStyles from \"./style\";\r\nimport ShareInfoStep, {InfoForm} from \"./step/info\";\r\nimport StorageStep from \"./step/storage\";\r\nimport {UsersForm} from \"./step/users\";\r\nimport CompleteStep from \"./step/complete\";\r\nimport {useForm} from \"./hook\";\r\nimport {Storage} from \"../../api/storage\";\r\n\r\nexport interface NewShareDialogPropsType {\r\n    onCreateShare: (data: any) => void\r\n}\r\n\r\nconst steps = [\r\n    \"info\", \"storage\", \"complete\"\r\n]\r\nconst NewShareDialog = ({onCreateShare, ...other}: NewShareDialogPropsType & DialogProps) => {\r\n    const [index, setIndex] = useState<number>(0)\r\n    const [selectStorage, setSelectStorage] = useState<Storage | undefined>()\r\n    const usersFormController = useForm<UsersForm>({\r\n        folderPublic: true\r\n    })\r\n    const infoForm = useForm<InfoForm>({})\r\n    const classes = useStyles()\r\n    const renderStepContent = () => {\r\n        switch (index) {\r\n            case 0:\r\n                return <ShareInfoStep controller={infoForm}/>\r\n            case 1:\r\n                return <StorageStep selectedStorage={selectStorage} onSelect={(part) => setSelectStorage(part)}/>\r\n            case 2:\r\n                return <CompleteStep\r\n                    name={infoForm.form.name}\r\n                    access={usersFormController.form.folderPublic ? \"Allow guest\" : \"Not allow guest\"}\r\n                    storage={selectStorage?.id}\r\n                    validateUsers={\r\n                        (usersFormController.form.readUsers ?? []).join(\",\")\r\n                    }\r\n                    writeUsers={\r\n                        (usersFormController.form.writeUsers ?? []).join(\",\")\r\n                    }\r\n                />\r\n            default:\r\n                return (<></>)\r\n        }\r\n    }\r\n    const validate = () => {\r\n        if (\r\n            infoForm.form.name === undefined ||\r\n            selectStorage == undefined\r\n        ) {\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n    const onCreate = () => {\r\n        if (!validate()) {\r\n            return\r\n        }\r\n        const data = {\r\n            name: infoForm.form.name,\r\n            public: usersFormController.form.folderPublic,\r\n            storageId: selectStorage?.id\r\n        }\r\n        onCreateShare(data)\r\n\r\n    }\r\n    return (\r\n        <Dialog {...other} maxWidth={\"xl\"}>\r\n            <DialogTitle>\r\n                New Share\r\n                <Stepper activeStep={index} className={classes.stepper}>\r\n                    {\r\n                        steps.map((label, index) => {\r\n                            return (\r\n                                <Step key={index}>\r\n                                    <StepLabel>{label}</StepLabel>\r\n                                </Step>\r\n                            )\r\n                        })\r\n                    }\r\n                </Stepper>\r\n            </DialogTitle>\r\n            <DialogContent className={classes.content}>\r\n\r\n                <div className={classes.stepContent}>\r\n                    {renderStepContent()}\r\n                </div>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button\r\n                    disabled={index < 1}\r\n                    onClick={() => setIndex(index - 1)}\r\n                >Previous</Button>\r\n                {\r\n                    index === steps.length - 1 && <Button onClick={() => onCreate()}>Create</Button>\r\n                }\r\n                {\r\n                    index !== steps.length - 1 && <Button\r\n                        onClick={() => setIndex(index + 1)}\r\n                    >\r\n                        Next\r\n                    </Button>\r\n                }\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default NewShareDialog;\r\n","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\DiskCard\\index.tsx",["812"],"import {Avatar, ButtonBase, Card, Paper} from \"@material-ui/core\";\r\nimport {ReactElement} from \"react\";\r\nimport useStyles from \"./style\";\r\nimport DiskIcon from \"../Icons/DiskIcon\";\r\nimport clsx from \"clsx\";\r\nimport {Disk} from \"../../api/disks\";\r\n\r\nexport interface DiskCardPropsType {\r\n    className?:string\r\n    disk:Disk\r\n    onClick:() => void\r\n}\r\n\r\nconst DiskCard = ({className,disk,onClick}: DiskCardPropsType): ReactElement => {\r\n    const classes = useStyles()\r\n    return (\r\n\r\n        <Paper className={clsx(className,)}>\r\n            <ButtonBase className={classes.root} onClick={onClick}>\r\n                <div className={classes.info}>\r\n                    <div>\r\n                        { disk.name }\r\n                    </div>\r\n                    <div className={classes.model}>\r\n                        { disk.model }\r\n                    </div>\r\n                </div>\r\n                <Avatar className={classes.avatar}>\r\n                    <DiskIcon />\r\n                </Avatar>\r\n            </ButtonBase>\r\n\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default DiskCard\r\n","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\ListItemDialog\\index.tsx",["813"],"import React, {ReactElement} from \"react\";\r\nimport {\r\n    Avatar, Button, Dialog, DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle,\r\n    ListItem,\r\n    ListItemAvatar,\r\n    ListItemText\r\n} from \"@material-ui/core\";\r\nimport {Dns} from \"@material-ui/icons\";\r\nimport useStyles from \"./style\";\r\n\r\nexport interface ListItemDialogPropsType {\r\n    open?: boolean\r\n    primary: string\r\n    secondary?: string\r\n    icon: ReactElement,\r\n    onClose: () => void\r\n    title: string\r\n    onOk: () => void\r\n    okText?: string,\r\n    text?:string\r\n}\r\n\r\nconst ListItemDialog = ({\r\n                            primary,\r\n                            icon,\r\n                            secondary,\r\n                            onOk,\r\n                            onClose,\r\n                            title,\r\n    text,\r\n                            okText = \"OK\",\r\n                            open = false\r\n                        }: ListItemDialogPropsType) => {\r\n    const classes = useStyles()\r\n    return (\r\n        <Dialog open={open} maxWidth={\"xl\"} onClose={onClose}>\r\n            <DialogTitle>\r\n                {title}\r\n            </DialogTitle>\r\n            <DialogContent className={classes.deleteDialogContent}>\r\n                <DialogContentText>\r\n                    {text}\r\n                </DialogContentText>\r\n                <ListItem className={classes.deleteDialogItem}>\r\n                    <ListItemAvatar>\r\n                        <Avatar>\r\n                            {icon}\r\n                        </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText primary={primary} secondary={secondary}/>\r\n                </ListItem>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button color={\"secondary\"} onClick={onClose}>\r\n                    Cancel\r\n                </Button>\r\n                <Button color={\"secondary\"} onClick={onOk}>\r\n                    {okText}\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default ListItemDialog;\r\n","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\ListPage\\index.tsx",[],["814","815"],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\ValueField\\index.tsx",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\CreateZFSPoolDialog\\index.tsx",["816","817","818","819","820"],"import {Button, Dialog, DialogActions, DialogContent, DialogTitle} from \"@material-ui/core\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport useStyles from \"./style\";\r\nimport {Disk, fetchDisks} from \"../../api/disks\";\r\nimport {CreateZPoolForm, useCreateZPoolForm} from \"./form\";\r\nimport PoolInfoStep from \"./step/info\";\r\nimport PoolSimpleEditStep from \"./step/simple\";\r\nimport PoolEditStep from \"./step/editor\";\r\nimport PoolConfirm from \"./step/confirm\";\r\nimport {createZFSPool} from \"../../api/zfs\";\r\n\r\nexport interface CreateZFSPoolDialogPropsType {\r\n    open?: boolean\r\n    onOk: () => void\r\n    onClose?: () => void\r\n}\r\n\r\n\r\nconst MAX_STEP = 3;\r\nconst StepName = [\r\n    \"Info\", \"Edit\", \"Confirm\"\r\n]\r\nconst CreateZFSPoolDialog = ({onClose, onOk, open = false}: CreateZFSPoolDialogPropsType) => {\r\n    const classes = useStyles()\r\n    const form = useCreateZPoolForm()\r\n    const [disks, setDisks] = useState<Disk[]>([])\r\n    const [stepIndex, setStepIndex] = useState<number>(0)\r\n\r\n    const loadDisks = async () => {\r\n        const response = await fetchDisks()\r\n        if (response) {\r\n            setDisks(response.disks)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (open) {\r\n            loadDisks()\r\n        }\r\n    }, [open])\r\n    const onDialogOk = () => {\r\n\r\n    }\r\n    const onFinish = async () => {\r\n        if (!form.name || !form.vdevTree) {\r\n            return\r\n        }\r\n        const response = await createZFSPool({\r\n            name:form.name,\r\n            conf:form.vdevTree\r\n        })\r\n        onOk()\r\n    }\r\n    const onNextClick = () => {\r\n        if (stepIndex === MAX_STEP - 1) {\r\n            onFinish()\r\n            return;\r\n        }\r\n        if (stepIndex > MAX_STEP - 1) {\r\n            return\r\n        }\r\n        if (stepIndex == 1) {\r\n            if (!form.advanceMode) {\r\n                form.setVDevTree({\r\n                    type: \"disk\",\r\n                    devices: form.pickupDisk.map(disk => {\r\n                        return {\r\n                            path: `/dev/${disk.name}`,\r\n                            type: \"disk\"\r\n                        }\r\n                    })\r\n                })\r\n            }\r\n        }\r\n        setStepIndex(stepIndex + 1)\r\n    }\r\n    const onPreviousClick = () => {\r\n        if (stepIndex == 0) {\r\n            return\r\n        }\r\n        setStepIndex(stepIndex - 1)\r\n    }\r\n    const isNextEnable = () => {\r\n        if (stepIndex === 0 && !form.name) {\r\n            return false\r\n        }\r\n        return stepIndex < MAX_STEP\r\n    }\r\n    const isPreviousEnable = () => {\r\n        return stepIndex !== 0\r\n    }\r\n    const getTitle = () => {\r\n        return `Create new pool > ${StepName[stepIndex]}`\r\n    }\r\n    const renderStep = () => {\r\n        switch (stepIndex) {\r\n            case 0:\r\n                return (\r\n                    <PoolInfoStep form={form} className={classes.stepView}/>\r\n                )\r\n            case 1:\r\n                if (form.advanceMode) {\r\n                    return <PoolEditStep className={classes.stepView}/>\r\n                } else {\r\n                    return <PoolSimpleEditStep form={form} disks={disks} className={classes.stepView}/>\r\n                }\r\n            case 2:\r\n                return (\r\n                    <PoolConfirm  form={form}/>\r\n                )\r\n        }\r\n    }\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            maxWidth='xl'\r\n            onClose={onClose}\r\n        >\r\n            <DialogTitle>\r\n                {getTitle()}\r\n            </DialogTitle>\r\n            <DialogContent className={classes.content}>\r\n                {renderStep()}\r\n            </DialogContent>\r\n            <DialogActions className={classes.action}>\r\n                <Button\r\n                    disabled={!isPreviousEnable()}\r\n                    onClick={onPreviousClick}\r\n                >Previous</Button>\r\n                <Button\r\n                    disabled={!isNextEnable()}\r\n                    onClick={onNextClick}\r\n                >{stepIndex === MAX_STEP - 1 ? \"Finish\" : \"Next\"}</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default CreateZFSPoolDialog;\r\n","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\NetworkCard\\index.tsx",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\utils\\request.ts",["821"],"import {extend, ResponseError} from 'umi-request'\r\nimport { ApplicationConfig } from '../config'\r\nconst errorHandler = (error:ResponseError) => {\r\n  console.log(error)\r\n  if (error.response) {\r\n    // The request was made and the server responded with a status code\r\n    // that falls out of the range of 2xx\r\n    console.log(error.response.status);\r\n    console.log(error.response.headers);\r\n    console.log(error.data);\r\n    console.log(error.request);\r\n    return { status:error.response.status,data:error.data }\r\n  } else {\r\n    console.log(error.message);\r\n  }\r\n  // return {some: 'data'}; If return, return the value as a return. If you don't write it is equivalent to return undefined, you can judge whether the response has a value when processing the result.\r\n  // return {some: 'data'};\r\n};\r\nconst apiRequest = extend({\r\n  timeout: 10000,\r\n  credentials: 'omit',\r\n  errorHandler\r\n})\r\napiRequest.interceptors.request.use((url,options) => {\r\n  const token = localStorage.getItem(\"token\")\r\n  const apiUrl = localStorage.getItem(\"apiUrl\")\r\n  if (apiUrl) {\r\n    url  = apiUrl + url\r\n  }\r\n  if (token) {\r\n    options.headers = {\r\n      ...options.headers,\r\n      \"Authorization\" :`Bearer ${token}`\r\n    }\r\n  }\r\n  return {\r\n    url,options\r\n  }\r\n})\r\nexport default apiRequest\r\n","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\config.ts",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\CreateZFSPoolDialog\\form.ts",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\CreateZFSPoolDialog\\style.ts",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\ListPage\\style.ts",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\ListItemDialog\\style.ts",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\DiskCard\\style.ts",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\NewShareDialog\\hook.ts",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\NewShareDialog\\style.ts",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\ValueField\\style.ts",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\Icons\\DiskIcon.tsx",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\NetworkCard\\style.tsx",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\CreateZFSPoolDialog\\step\\editor\\index.tsx",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\CreateZFSPoolDialog\\step\\confirm\\index.tsx",["822"],"import useStyles from './style'\r\nimport clsx from 'clsx'\r\nimport {Vdev} from \"../../../../api/zfs\";\r\nimport ZFSTreeView from \"../../../ZFSTreeView\";\r\nimport ValueField from \"../../../ValueField\";\r\nimport React from \"react\";\r\nimport {CreateZPoolForm} from \"../../form\";\r\nimport {Divider} from \"@material-ui/core\";\r\n\r\nexport interface PoolConfirmPropsType {\r\n    className?: string\r\n    form:CreateZPoolForm\r\n}\r\n\r\nconst PoolConfirm = ({className,form}: PoolConfirmPropsType): React.ReactElement => {\r\n    const classes = useStyles()\r\n    return (\r\n        <div className={clsx(className,classes.root)}>\r\n            <div className={classes.info}>\r\n                <ValueField label=\"name\" value={form.name} />\r\n            </div>\r\n            <Divider   />\r\n            <div className={classes.vdev}>\r\n                {\r\n                    form.vdevTree && <ZFSTreeView root={form.vdevTree} />\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PoolConfirm\r\n","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\CreateZFSPoolDialog\\step\\simple\\index.tsx",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\CreateZFSPoolDialog\\step\\info\\index.tsx",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\NewShareDialog\\step\\storage\\index.tsx",["823","824","825","826","827"],"import React, {useEffect, useState} from \"react\";\r\nimport {fetchParts, Part} from \"../../../../api/disks\";\r\nimport {Avatar, List, ListItem, ListItemAvatar, ListItemText} from \"@material-ui/core\";\r\nimport {Inbox} from \"@material-ui/icons\";\r\nimport useStyles from \"./style\";\r\nimport usePartsPageModel from \"../../../../pages/Parts/model\";\r\nimport useStorageModel from \"../../../../pages/Storage/model\";\r\nimport {Storage} from \"../../../../api/storage\";\r\n\r\nexport interface StorageStepPropsType {\r\n    selectedStorage?:Storage\r\n    onSelect:(storage:Storage) => void\r\n}\r\nconst StorageStep = ({onSelect,selectedStorage}: StorageStepPropsType) => {\r\n    const classes = useStyles()\r\n    const partsModel = usePartsPageModel()\r\n    const storageModel = useStorageModel()\r\n    useEffect(() => {\r\n        storageModel.init()\r\n    },[])\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n            <List>\r\n                {\r\n                    storageModel.storages.map(storage => {\r\n                        return (\r\n                            <ListItem\r\n                                key={storage.id}\r\n                                button\r\n                                selected={selectedStorage?.id === storage.id}\r\n                                onClick={() => onSelect(storage)}\r\n                            >\r\n                                <ListItemAvatar>\r\n                                    <Avatar className={classes.avatar}>\r\n                                        <Inbox />\r\n                                    </Avatar>\r\n                                </ListItemAvatar>\r\n                                <ListItemText primary={storage.id} secondary={storage.type}/>\r\n                            </ListItem>\r\n                        )\r\n                    })\r\n                }\r\n            </List>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StorageStep;\r\n","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\NewShareDialog\\step\\complete\\index.tsx",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\NewShareDialog\\step\\info\\index.tsx",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\InstallAppDialog\\setp\\confirm\\index.tsx",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\InstallAppDialog\\setp\\upload\\index.tsx",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\NewShareDialog\\step\\info\\style.ts",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\NewShareDialog\\step\\complete\\style.ts",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\NewShareDialog\\step\\storage\\style.ts",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\CreateZFSPoolDialog\\step\\info\\style.ts",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\CreateZFSPoolDialog\\step\\simple\\style.ts",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\CreateZFSPoolDialog\\step\\confirm\\style.ts",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\CreateZFSPoolDialog\\step\\editor\\style.ts",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\InstallAppDialog\\setp\\confirm\\style.ts",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\InstallAppDialog\\setp\\upload\\style.ts",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\DiskSelectTable\\index.tsx",["828"],"import useStyles from './style'\r\nimport clsx from 'clsx'\r\nimport {Disk} from \"../../api/disks\";\r\nimport {IconButton, MenuItem, Select, Table, TableBody, TableCell, TableHead, TableRow} from \"@material-ui/core\";\r\nimport filesize from \"filesize\";\r\nimport {Close} from \"@material-ui/icons\";\r\n\r\nexport interface DiskSelectTablePropsType {\r\n    className?: string\r\n    disks: Disk[]\r\n    selectedDisk: Disk[]\r\n    onDiskSelectChange: (disks: Disk[]) => void\r\n}\r\n\r\nconst DiskSelectTable = ({\r\n                             className,\r\n                             disks,\r\n                             selectedDisk,\r\n                             onDiskSelectChange\r\n                         }: DiskSelectTablePropsType): React.ReactElement => {\r\n    const classes = useStyles()\r\n    const getSelectDisk = () => {\r\n        return disks.filter(disk => selectedDisk.find(it => it.name === disk.name) === undefined)\r\n    }\r\n    const onDiskSelect = (diskName:any) => {\r\n        const disk = disks.find(it => it.name === diskName)\r\n        if (!disk) {\r\n            return\r\n        }\r\n        onDiskSelectChange([...selectedDisk,disk])\r\n    }\r\n    const onDeleteDisk = (diskName:string) => {\r\n        onDiskSelectChange(selectedDisk.filter(it => it.name !== diskName))\r\n    }\r\n    return (\r\n        <div>\r\n            <Table>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>\r\n                            Name\r\n                        </TableCell>\r\n                        <TableCell>\r\n                            Model\r\n                        </TableCell>\r\n                        <TableCell>\r\n                            Size\r\n                        </TableCell>\r\n                        <TableCell>\r\n                           Action\r\n                        </TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {\r\n                        selectedDisk.map(disk => {\r\n                            return (\r\n                                <TableRow key={disk.name}>\r\n                                    <TableCell>\r\n                                        { disk.name }\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        { disk.model }\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {filesize(disk.size) }\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        <IconButton size={\"small\"} onClick={() => onDeleteDisk(disk.name)}>\r\n                                            <Close />\r\n                                        </IconButton>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            )\r\n                        })\r\n                    }\r\n                </TableBody>\r\n            </Table>\r\n            <Select fullWidth onChange={(e) => onDiskSelect(e.target.value)} variant={\"outlined\"} size={\"small\"} className={classes.select}>\r\n                {\r\n                    getSelectDisk().map(disk => {\r\n                        return (\r\n                            <MenuItem value={disk.name}>{`${disk.name} | ${ disk.model} | ${ filesize(disk.size)}`}</MenuItem>\r\n                        )\r\n                    })\r\n                }\r\n            </Select>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DiskSelectTable\r\n","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\ZFSTreeView\\index.tsx",["829"],"import useStyles from './style'\r\nimport clsx from 'clsx'\r\nimport {TreeItem, TreeView} from \"@material-ui/lab\";\r\nimport {Vdev} from \"../../api/zfs\";\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport {randomText} from \"../../utils/random\";\r\nimport {\r\n    AppsRounded,\r\n    DnsRounded,\r\n    LayersRounded,\r\n    Memory,\r\n    SettingsBackupRestoreRounded,\r\n    StorageRounded\r\n} from \"@material-ui/icons\";\r\nexport interface ZFSTreeViewPropsType {\r\n    className?: string\r\n    root:Vdev\r\n}\r\n\r\nconst ZFSTreeView = ({className,root}: ZFSTreeViewPropsType): React.ReactElement => {\r\n    const classes = useStyles()\r\n    console.log(root)\r\n    const renderRootIcon = (node:Vdev) => {\r\n        switch (node.type) {\r\n            case \"disk\":\r\n                return (\r\n                    <StorageRounded />\r\n                )\r\n            case \"mirror\":\r\n                return (\r\n                    <LayersRounded />\r\n                )\r\n            case \"raidz\":\r\n                return (\r\n                    <DnsRounded />\r\n                )\r\n        }\r\n    }\r\n\r\n    const renderTree = (node:Vdev) => {\r\n        const getLabel = () => {\r\n            if (node.path) {\r\n                return node.path\r\n            }\r\n            return node.type\r\n        }\r\n        return (\r\n            <TreeItem nodeId={randomText()} label={getLabel()} icon={renderRootIcon(node)}>\r\n                {\r\n                    node.devices &&  <TreeItem nodeId={randomText()} label=\"devices\" icon={<AppsRounded />}>\r\n                        {\r\n                            node.devices?.map(it => renderTree(it))\r\n                        }\r\n                    </TreeItem>\r\n                }\r\n                {\r\n                    node.l2 &&  <TreeItem nodeId={randomText()} label=\"l2\" icon={<Memory />}>\r\n                        {\r\n                            node.l2?.map(it => renderTree(it))\r\n                        }\r\n                    </TreeItem>\r\n                }\r\n                {\r\n                    node.spares &&  <TreeItem nodeId={randomText()} label=\"spares\" icon={<SettingsBackupRestoreRounded />} >\r\n                        {\r\n                            node.spares?.map(it => renderTree(it))\r\n                        }\r\n                    </TreeItem>\r\n                }\r\n\r\n            </TreeItem>\r\n        )\r\n    }\r\n    return (\r\n        <TreeView\r\n            className={classes.root}\r\n            disableSelection\r\n            defaultCollapseIcon={<ExpandMoreIcon />}\r\n            defaultExpandIcon={<ChevronRightIcon />}\r\n\r\n        >\r\n            {\r\n                renderTree(root)\r\n            }\r\n        </TreeView>\r\n    );\r\n}\r\n\r\nexport default ZFSTreeView\r\n","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\utils\\random.ts",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\ZFSTreeView\\style.ts",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\DiskSelectTable\\style.ts",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\InstallAppDialog\\style.ts",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\AppCard\\style.ts",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\utils\\app.ts",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\NewUserDialog\\style.ts",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\PoolDetail\\index.tsx",["830","831","832"],"import useStyles from \"./style\";\r\nimport {Grid, Typography} from \"@material-ui/core\";\r\nimport React, {useEffect} from \"react\";\r\nimport usePoolDetailModel from \"./model\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport InfoCard from \"../../components/InfoCard\";\r\nimport filesize from \"filesize\";\r\nimport PageHead from \"../../components/PageHead\";\r\nimport {usePageHeadController} from \"../../components/PageHead/hook\";\r\n\r\nexport interface PoolDetailPagePropsType {\r\n\r\n}\r\n\r\nconst PoolDetailPage = ({}: PoolDetailPagePropsType) => {\r\n    const {name}: any = useParams();\r\n    const classes = useStyles()\r\n    const model = usePoolDetailModel()\r\n    const pageHeadController = usePageHeadController({})\r\n    useEffect(() => {\r\n        model.refresh(name)\r\n    },[])\r\n    return (\r\n        <div className={classes.root}>\r\n            <PageHead title={model.pool?.name ?? \"Pool\"} controller={pageHeadController} />\r\n            <div className={classes.content}>\r\n                <Grid container spacing={4}>\r\n                    <Grid xs={2} item>\r\n                        <InfoCard label={\"Size\"} value={filesize(model.pool?.tree.size ?? 0)} valueSize={18} />\r\n                    </Grid>\r\n                    <Grid xs={2} item>\r\n                        <InfoCard label={\"Used\"} value={filesize(model.pool?.tree.alloc ?? 0)} valueSize={18} />\r\n                    </Grid>\r\n                    <Grid xs={2} item>\r\n                        <InfoCard label={\"Free\"} value={filesize(model.pool?.tree.free ?? 0)} valueSize={18} />\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PoolDetailPage;\r\n","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\System\\index.tsx",["833","834","835"],"import {Button, Dialog, DialogActions, DialogContent, DialogTitle, Grid, Paper, Typography} from \"@material-ui/core\";\r\nimport React, {useState} from \"react\";\r\nimport useStyles from \"./style\";\r\nimport InfoCard from \"../../components/InfoCard\";\r\nimport {rebootDevice, shutdownDevice} from \"../../api/os\";\r\nimport {showAPIResponseErrorMessage, showGlobalSnackMessage} from \"../../utils/message\";\r\nimport PageHead from \"../../components/PageHead\";\r\nimport {usePageHeadController} from \"../../components/PageHead/hook\";\r\n\r\nexport interface SystemPagePropsType {\r\n\r\n}\r\ntype ActionTypes = \"Reboot\" | \"Shutdown\"\r\nconst SystemPage = ({}: SystemPagePropsType) => {\r\n    const classes = useStyles()\r\n    const [isConfirmOpen, setIsConfirmOpen] = useState(false)\r\n    const [confirmContent, setConfirmContent] = useState<string>()\r\n    const [confirmAction,setConfirmAction] = useState<ActionTypes>()\r\n    const pageHeadController = usePageHeadController({})\r\n    const openConfirmActionDialog = (content:string,action:ActionTypes) => {\r\n        setConfirmContent(content)\r\n        setConfirmAction(action)\r\n        setIsConfirmOpen(true)\r\n    }\r\n    const onConfirmOk = async () => {\r\n        setIsConfirmOpen(false)\r\n        if (!confirmAction) {\r\n            return\r\n        }\r\n        let response;\r\n        switch (confirmAction){\r\n            case \"Shutdown\":\r\n                response = await shutdownDevice();\r\n                break;\r\n            case \"Reboot\":\r\n                response = await rebootDevice();\r\n                return;\r\n        }\r\n        if (response) {\r\n            if (response.success) {\r\n                showGlobalSnackMessage(`${confirmAction} success`,{variant:\"success\"})\r\n            }else{\r\n                showAPIResponseErrorMessage(response)\r\n            }\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <Dialog open={isConfirmOpen} onClose={() => setIsConfirmOpen(false)}>\r\n                <DialogTitle>\r\n                    Confirm run\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    { confirmContent }\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setIsConfirmOpen(false)}>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={onConfirmOk}>\r\n                        OK\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <PageHead\r\n                title={\"System\"}\r\n                controller={pageHeadController}\r\n            />\r\n            <Grid container>\r\n                <Grid item xs={12} sm={3} md={3} lg={2} xl={2} className={classes.item}>\r\n                    <InfoCard\r\n                        label={\"Action\"}\r\n                        value={\"Shutdown\"}\r\n                        valueSize={20}\r\n                        bottom={\r\n                            <>\r\n                                <Button onClick={() => openConfirmActionDialog(\"Device will shutdown!\",\"Shutdown\")}>\r\n                                    Run\r\n                                </Button>\r\n                            </>\r\n                        }\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={3} md={3} lg={2} xl={2} className={classes.item}>\r\n                    <InfoCard\r\n                        label={\"Action\"}\r\n                        value={\"Reboot\"}\r\n                        valueSize={20}\r\n                        bottom={\r\n                            <>\r\n                                <Button onClick={() => openConfirmActionDialog(\"Device will reboot!\",\"Reboot\")}>\r\n                                    Run\r\n                                </Button>\r\n                            </>\r\n                        }\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SystemPage;\r\n","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\GroupDetail\\index.tsx",["836","837","838","839"],"import React, {ReactElement, useEffect} from \"react\";\r\nimport useStyles from \"./style\";\r\nimport useGroupDetailModel from \"./model\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport {Button, Paper, Typography} from \"@material-ui/core\";\r\nimport UserListCard from \"../../components/UserListCard\";\r\nimport UserSelectDialog from \"../../components/UserSelectDialog\";\r\nimport useLayoutModel from \"../../model/layout\";\r\nimport {Delete} from \"@material-ui/icons\";\r\nimport PageHead from \"../../components/PageHead\";\r\nimport {usePageHeadController} from \"../../components/PageHead/hook\";\r\n\r\nexport interface GroupDetailPagePropsType {\r\n\r\n}\r\n\r\nconst GroupDetailPage = ({}: GroupDetailPagePropsType): ReactElement => {\r\n    const {name}: any = useParams()\r\n    const classes = useStyles()\r\n    const model = useGroupDetailModel()\r\n    const layoutModel = useLayoutModel()\r\n    const history = useHistory()\r\n    const pageHeadController = usePageHeadController({})\r\n\r\n    useEffect(() => {\r\n        model.setGroupName(name)\r\n    }, [])\r\n    return (\r\n        <div className={classes.root}>\r\n            <PageHead\r\n                title={model.groupDetail?.name ?? \"\"}\r\n                controller={pageHeadController}\r\n                actions={\r\n                    <>\r\n                        <Button\r\n                            variant={\"text\"}\r\n                            startIcon={<Delete/>}\r\n                            onClick={() => {\r\n                                layoutModel.showConfirmDialog({\r\n                                    title: \"Remove confirm\",\r\n                                    message:\"confirm remove\",\r\n                                    onOk:async () => {\r\n                                        await model.remove()\r\n                                        history.replace(\"/groups\")\r\n                                    }\r\n                                })\r\n                            }}\r\n                        >\r\n                            Remove\r\n                        </Button>\r\n                    </>\r\n                }\r\n            />\r\n            <UserSelectDialog\r\n                onCancel={() => layoutModel.switchDialog(\"group/addUser\")}\r\n                onOk={(username) => {\r\n                    layoutModel.switchDialog(\"group/addUser\")\r\n                    model.addUser([username])\r\n                }}\r\n                except={(model.groupDetail?.users ?? []).map(it => it.name)}\r\n                open={layoutModel.getDialogOpen(\"group/addUser\")}\r\n            />\r\n            <div className={classes.content}>\r\n                <UserListCard\r\n                    onRemove={(username) => {\r\n                        model.removeUser([username])\r\n                    }}\r\n                    className={classes.userList}\r\n                    users={\r\n                        model.groupDetail?.users ?? []\r\n                    }\r\n                    actions={<Button onClick={() => layoutModel.switchDialog(\"group/addUser\")}>Add user</Button>}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GroupDetailPage\r\n","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\Groups\\index.tsx",["840","841","842"],"import React, {ReactElement, useEffect} from \"react\";\r\nimport ListPage from \"../../components/ListPage\";\r\nimport {Avatar, Button, List, ListItem, ListItemAvatar, ListItemText} from \"@material-ui/core\";\r\nimport {Add, Group} from \"@material-ui/icons\";\r\nimport useUserGroupsModel from \"./model\";\r\nimport NewGroupDialog from \"../../components/NewGroupDialog\";\r\nimport useLayoutModel from \"../../model/layout\";\r\nimport useStyles from \"./style\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {usePageHeadController} from \"../../components/PageHead/hook\";\r\nimport PageHead from \"../../components/PageHead\";\r\n\r\nexport interface GroupsPagePropsType {\r\n\r\n}\r\n\r\nconst GroupsPage = ({}: GroupsPagePropsType): ReactElement => {\r\n    const classes = useStyles()\r\n    const model = useUserGroupsModel()\r\n    const layoutModel = useLayoutModel()\r\n    const history = useHistory()\r\n    useEffect(() => {\r\n        model.fetchData()\r\n    }, [])\r\n    const pageHeadController = usePageHeadController({})\r\n    return (\r\n        <div>\r\n            <NewGroupDialog\r\n                onOk={(name) => {\r\n                    model.create(name)\r\n                    layoutModel.switchDialog(\"newgroup\")\r\n                }}\r\n                onCancel={() => layoutModel.switchDialog(\"newgroup\")}\r\n                open={layoutModel.getDialogOpen(\"newgroup\")}\r\n            />\r\n            <PageHead\r\n                title={\"Groups\"}\r\n                controller={pageHeadController}\r\n                actions={\r\n                    <>\r\n                        <Button startIcon={<Add/>} variant={\"text\"}\r\n                                onClick={() => layoutModel.switchDialog(\"newgroup\")}>\r\n                            New user group\r\n                        </Button>\r\n                    </>\r\n                }\r\n\r\n            />\r\n            <List>\r\n                {\r\n                    model.groups.map(group => {\r\n                        return (\r\n                            <ListItem key={group.gid} button onClick={() => {\r\n                                history.push(`/group/${group.name}/info`)\r\n                            }}>\r\n                                <ListItemAvatar>\r\n                                    <Avatar className={classes.avatar}>\r\n                                        <Group/>\r\n                                    </Avatar>\r\n                                </ListItemAvatar>\r\n                                <ListItemText primary={group.name} secondary={group.type}/>\r\n                            </ListItem>\r\n                        )\r\n                    })\r\n\r\n                }\r\n            </List>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GroupsPage\r\n","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\layout\\Base\\index.tsx",["843","844","845","846"],"import * as React from 'react';\r\nimport {createStyles, makeStyles, Theme} from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppNavigation from \"./parts/Nav\";\r\nimport AuthLayout from \"../Auth\";\r\nimport Notification from \"../Notification\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            display: 'flex',\r\n        },\r\n        appBar: {\r\n            zIndex: theme.zIndex.drawer + 1,\r\n        },\r\n        content: {\r\n            flexGrow: 1,\r\n            minHeight: \"100vh\",\r\n            backgroundColor: \"#F6F7F9\",\r\n        },\r\n    }),\r\n);\r\n\r\nconst BaseLayout = ({children}: { children: any }) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <AuthLayout>\r\n            <Notification />\r\n            <div className={classes.root}>\r\n                <CssBaseline/>\r\n                {/*<AppBar position=\"fixed\" className={classes.appBar} elevation={1}>*/}\r\n                {/*  <AppToolbar />*/}\r\n                {/*</AppBar>*/}\r\n\r\n                <AppNavigation/>\r\n                <main className={classes.content}>\r\n                    {children}\r\n                </main>\r\n            </div>\r\n        </AuthLayout>\r\n    );\r\n};\r\nexport default BaseLayout\r\n","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\ShareFolderDetail\\index.tsx",["847","848","849"],"import React, {ReactElement, useEffect, useState} from \"react\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport useShareFolderDetailModel from \"./model\";\r\nimport useStyles from \"./style\";\r\nimport InfoCard from \"../../components/InfoCard\";\r\nimport {Button, Grid} from \"@material-ui/core\";\r\nimport UserListCard from \"../../components/UserListCard\";\r\nimport UserSelectDialog from \"../../components/UserSelectDialog\";\r\nimport SwitchSelectDialog from \"../../components/SwitchSelectDialog\";\r\nimport {Delete} from \"@material-ui/icons\";\r\nimport useLayoutModel from \"../../model/layout\";\r\nimport UserGroupSelectDialog from \"../../components/UserGroupSelectDialog\";\r\nimport UserAndGroupListCard from \"../../components/UserAndGroupListCard\";\r\nimport {usePageHeadController} from \"../../components/PageHead/hook\";\r\nimport PageHead from \"../../components/PageHead\";\r\n\r\nexport interface ShareFolderDetailPropsType {\r\n\r\n}\r\n\r\ntype UserAndGroupPickModeType = \"readUsers\" | \"writeUsers\" | \"validUsers\" | \"invalidUsers\" | \"validGroup\" | \"invalidGroup\" | 'readGroup' | 'writeGroup'\r\ntype SwitchSelectTargetType = \"public\" | 'readonly' | \"writable\" | 'enable'\r\nconst ShareFolderDetail = ({}: ShareFolderDetailPropsType): ReactElement => {\r\n    const {name}: any = useParams();\r\n    const classes = useStyles()\r\n    const model = useShareFolderDetailModel()\r\n    const layoutModel = useLayoutModel()\r\n    const history = useHistory()\r\n    useEffect(() => {\r\n        model.initData(name)\r\n    }, [])\r\n    const [pickUpUserMode, setPickUpUserMode] = useState<UserAndGroupPickModeType | undefined>()\r\n    const [pickUpGroupMode, setPickUpGroupMode] = useState<UserAndGroupPickModeType | undefined>()\r\n    const [pickUserExcept, setPickUserExcept] = useState<string[]>([])\r\n    const [pickGroupExcept, setPickGroupExcept] = useState<string[]>([])\r\n    const [switchSelectTarget, setSwitchSelectTarget] = useState<SwitchSelectTargetType | undefined>()\r\n    const pageHeadController = usePageHeadController({})\r\n    const onPickupUserOk = async (name: string) => {\r\n        if (!model.folder) {\r\n            return\r\n        }\r\n        const option = {\r\n            public: model.folder.public,\r\n            enable: model.folder.enable,\r\n            readonly: model.folder.readonly\r\n        }\r\n        switch (pickUpUserMode) {\r\n            case \"readUsers\":\r\n                model.update({\r\n                    ...option,\r\n                    readUsers: [...(model.folder?.readUsers ?? []).map(it => it.name), name]\r\n                })\r\n                break;\r\n            case \"writeUsers\":\r\n                model.update({\r\n                    ...option,\r\n                    writeUsers: [...(model.folder?.writeUsers ?? []).map(it => it.name), name]\r\n                })\r\n                break;\r\n            case \"validUsers\":\r\n                model.update({\r\n                    ...option,\r\n                    validUsers: [...(model.folder?.validUsers ?? []).map(it => it.name), name]\r\n                })\r\n                break;\r\n            case \"invalidUsers\":\r\n                model.update({\r\n                    ...option,\r\n                    invalidUsers: [...(model.folder?.invalidUsers ?? []).map(it => it.name), name]\r\n                })\r\n                break;\r\n            case 'validGroup':\r\n                model.update({\r\n                    ...option,\r\n                    validGroups: [...(model.folder?.validGroups ?? []).map(it => it.name), name]\r\n                })\r\n                break;\r\n        }\r\n        setPickUpUserMode(undefined)\r\n    }\r\n    const onPickupGroupOk = (name:string) => {\r\n        if (!model.folder) {\r\n            return\r\n        }\r\n        const option = {\r\n            public: model.folder.public,\r\n            enable: model.folder.enable,\r\n            readonly: model.folder.readonly\r\n        }\r\n        switch (pickUpGroupMode) {\r\n            case 'validGroup':\r\n                model.update({\r\n                    ...option,\r\n                    validGroups: [...(model.folder?.validGroups ?? []).map(it => it.name), name]\r\n                })\r\n                break;\r\n            case 'invalidGroup':\r\n                model.update({\r\n                    ...option,\r\n                    invalidGroups: [...(model.folder?.invalidGroups ?? []).map(it => it.name), name]\r\n                })\r\n                break;\r\n            case 'readGroup':\r\n                model.update({\r\n                    ...option,\r\n                    readGroups: [...(model.folder?.readGroups ?? []).map(it => it.name), name]\r\n                })\r\n                break;\r\n            case 'writeGroup':\r\n                model.update({\r\n                    ...option,\r\n                    writeGroups: [...(model.folder?.writeGroups ?? []).map(it => it.name), name]\r\n                })\r\n                break;\r\n        }\r\n        setPickUpGroupMode(undefined)\r\n    }\r\n    const onSwitchSelect = (value: boolean) => {\r\n        if (!model.folder) {\r\n            return\r\n        }\r\n        const option = {\r\n            public: model.folder.public,\r\n            enable: model.folder.enable,\r\n            readonly: model.folder.readonly\r\n        }\r\n        switch (switchSelectTarget) {\r\n            case \"public\":\r\n                option.public = value\r\n                break;\r\n            case 'readonly':\r\n                option.readonly = value\r\n                break;\r\n            case 'enable':\r\n                option.enable = value\r\n        }\r\n        model.update(option)\r\n        setSwitchSelectTarget(undefined)\r\n\r\n    }\r\n    return (\r\n        <div className={classes.root}>\r\n            <UserSelectDialog\r\n                onCancel={() => setPickUpUserMode(undefined)}\r\n                onOk={onPickupUserOk}\r\n                open={Boolean(pickUpUserMode)}\r\n                except={pickUserExcept}\r\n            />\r\n            <UserGroupSelectDialog\r\n                onCancel={() => setPickUpGroupMode(undefined)}\r\n                onOk={onPickupGroupOk}\r\n                open={Boolean(pickUpGroupMode)}\r\n                except={pickGroupExcept}\r\n            />\r\n            <SwitchSelectDialog\r\n                onOk={onSwitchSelect}\r\n                onClose={() => setSwitchSelectTarget(undefined)}\r\n                open={Boolean(switchSelectTarget)}\r\n            />\r\n\r\n                <PageHead\r\n                    title={model.folder?.name ?? \"\"}\r\n                    controller={pageHeadController}\r\n                    actions={\r\n                        <>\r\n                            <Button\r\n                                variant={'text'}\r\n                                size={\"small\"}\r\n                                startIcon={<Delete/>}\r\n                                onClick={() => {\r\n                                    layoutModel.showConfirmDialog({\r\n                                        title: 'Remove Confirm',\r\n                                        message: 'Remove folder will lost ALL DATA in folder',\r\n                                        onOk: async () => {\r\n                                            await model.remove()\r\n                                            history.goBack()\r\n                                        }\r\n                                    })\r\n                                }}\r\n                            >\r\n                                Remove folder\r\n                            </Button>\r\n                        </>\r\n                    }\r\n                />\r\n\r\n            <div className={classes.content}>\r\n                <Grid container spacing={4} className={classes.grid}>\r\n                    <Grid xs={12} sm={6} md={4} lg={3} xl={3} item>\r\n                        <InfoCard label={\"folder name\"} value={model.folder?.name} valueSize={18}\r\n                                  className={classes.infoCard}/>\r\n                    </Grid>\r\n                    <Grid xs={12} sm={6} md={4} lg={3} xl={3} item>\r\n                        <InfoCard label={\"storage\"} value={model.folder?.storage.id} valueSize={18}\r\n                                  className={classes.infoCard}/>\r\n                    </Grid>\r\n                    <Grid xs={12} sm={6} md={4} lg={3} xl={3} item>\r\n                        <InfoCard\r\n                            label={\"public\"}\r\n                            value={model.folder?.public ? \"yes\" : \"no\"}\r\n                            valueSize={18}\r\n                            className={classes.infoCard}\r\n                            onEdit={() => setSwitchSelectTarget(\"public\")}\r\n                        />\r\n                    </Grid>\r\n                    <Grid xs={12} sm={6} md={4} lg={3} xl={3} item>\r\n                        <InfoCard\r\n                            label={\"readonly\"}\r\n                            value={model.folder?.readonly ? \"yes\" : \"no\"}\r\n                            valueSize={18}\r\n                            className={classes.infoCard}\r\n                            onEdit={() => setSwitchSelectTarget(\"readonly\")}\r\n                        />\r\n                    </Grid>\r\n                    <Grid xs={12} sm={6} md={4} lg={3} xl={3} item>\r\n                        <InfoCard\r\n                            label={\"enable\"}\r\n                            value={model.folder?.enable ? \"yes\" : \"no\"}\r\n                            valueSize={18}\r\n                            className={classes.infoCard}\r\n                            onEdit={() => setSwitchSelectTarget(\"enable\")}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid className={classes.grid} container spacing={4}>\r\n                    <Grid xs={12} sm={6} xl={4} item>\r\n                        <UserAndGroupListCard\r\n                            users={model.folder?.validUsers}\r\n                            groups={model.folder?.validGroups}\r\n                            title={\"valid list\"}\r\n                            actions={\r\n                                <>\r\n                                    <Button onClick={() => {\r\n                                        setPickUserExcept((model.folder?.validUsers ?? []).map(it => it.name))\r\n                                        setPickUpUserMode(\"validUsers\")\r\n                                    }}>\r\n                                        add user\r\n                                    </Button>\r\n                                    <Button onClick={() => {\r\n                                        setPickGroupExcept((model.folder?.validGroups ?? []).map(it => it.name))\r\n                                        setPickUpGroupMode(\"validGroup\")\r\n                                    }}>\r\n                                        add group\r\n                                    </Button>\r\n                                </>\r\n                            }\r\n                            onRemoveUser={(name) => {\r\n                                if (!model.folder) {\r\n                                    return\r\n                                }\r\n                                model.update({\r\n                                    validUsers: model.folder?.validUsers.map(it => it.name).filter(it => it !== name)\r\n                                })\r\n                            }}\r\n                            onRemoveGroup={(name) => {\r\n                                if (!model.folder) {\r\n                                    return\r\n                                }\r\n                                model.update({\r\n                                    validGroups: model.folder?.validGroups.map(it => it.name).filter(it => it !== name)\r\n                                })\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid xs={12} sm={6} xl={4} item>\r\n                        <UserAndGroupListCard\r\n                            users={model.folder?.invalidUsers}\r\n                            groups={model.folder?.invalidGroups}\r\n                            title={\"invalid list\"}\r\n                            actions={\r\n                                <>\r\n                                    <Button onClick={() => {\r\n                                        setPickUserExcept((model.folder?.invalidUsers ?? []).map(it => it.name))\r\n                                        setPickUpUserMode(\"invalidUsers\")\r\n                                    }}>\r\n                                        add user\r\n                                    </Button>\r\n                                    <Button onClick={() => {\r\n                                        setPickGroupExcept((model.folder?.invalidGroups ?? []).map(it => it.name))\r\n                                        setPickUpGroupMode(\"invalidGroup\")\r\n                                    }}>\r\n                                        add group\r\n                                    </Button>\r\n                                </>\r\n                            }\r\n                            onRemoveUser={(name) => {\r\n                                if (!model.folder) {\r\n                                    return\r\n                                }\r\n                                model.update({\r\n                                    public: model.folder.public,\r\n                                    enable: model.folder.enable,\r\n                                    readonly: model.folder.readonly,\r\n                                    invalidUsers: model.folder?.invalidUsers.map(it => it.name).filter(it => it !== name)\r\n                                })\r\n                            }}\r\n                            onRemoveGroup={(name) => {\r\n                                if (!model.folder) {\r\n                                    return\r\n                                }\r\n                                model.update({\r\n                                    public: model.folder.public,\r\n                                    enable: model.folder.enable,\r\n                                    readonly: model.folder.readonly,\r\n                                    invalidGroups: model.folder?.invalidGroups.map(it => it.name).filter(it => it !== name)\r\n                                })\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid xs={12} sm={6} xl={4} item>\r\n                        <UserAndGroupListCard\r\n                            users={model.folder?.readUsers}\r\n                            groups={model.folder?.readGroups}\r\n                            title={\"read list\"}\r\n                            actions={\r\n                                <>\r\n                                    <Button onClick={() => {\r\n                                        setPickUserExcept((model.folder?.readUsers ?? []).map(it => it.name))\r\n                                        setPickUpUserMode(\"readUsers\")\r\n                                    }}>\r\n                                        add user\r\n                                    </Button>\r\n                                    <Button onClick={() => {\r\n                                        setPickGroupExcept((model.folder?.readGroups ?? []).map(it => it.name))\r\n                                        setPickUpGroupMode(\"readGroup\")\r\n                                    }}>\r\n                                        add group\r\n                                    </Button>\r\n                                </>\r\n                            }\r\n                            onRemoveUser={(name) => {\r\n                                if (!model.folder) {\r\n                                    return\r\n                                }\r\n                                model.update({\r\n                                    readUsers: model.folder?.readUsers.map(it => it.name).filter(it => it !== name)\r\n                                })\r\n                            }}\r\n                            onRemoveGroup={(name) => {\r\n                                if (!model.folder) {\r\n                                    return\r\n                                }\r\n                                model.update({\r\n                                    readGroups: model.folder?.readGroups.map(it => it.name).filter(it => it !== name)\r\n                                })\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid xs={12} sm={6} xl={4} item>\r\n                        <UserAndGroupListCard\r\n                            users={model.folder?.writeUsers}\r\n                            groups={model.folder?.writeGroups}\r\n                            title={\"write list\"}\r\n                            onRemoveUser={(name) => {\r\n                                if (!model.folder) {\r\n                                    return\r\n                                }\r\n                                model.update({\r\n                                    writeUsers: model.folder?.writeUsers.map(it => it.name).filter(it => it !== name)\r\n                                })\r\n                            }}\r\n                            onRemoveGroup={(name) => {\r\n                                if (!model.folder) {\r\n                                    return\r\n                                }\r\n                                model.update({\r\n                                    writeGroups: model.folder?.writeGroups.map(it => it.name).filter(it => it !== name)\r\n                                })\r\n                            }}\r\n                            actions={\r\n                                <>\r\n                                    <Button onClick={() => {\r\n                                        setPickUserExcept((model.folder?.writeUsers ?? []).map(it => it.name))\r\n                                        setPickUpUserMode(\"writeUsers\")\r\n                                    }}>\r\n                                        add user\r\n                                    </Button>\r\n                                    <Button onClick={() => {\r\n                                        setPickGroupExcept((model.folder?.writeGroups ?? []).map(it => it.name))\r\n                                        setPickUpGroupMode(\"writeGroup\")\r\n                                    }}>\r\n                                        add group\r\n                                    </Button>\r\n                                </>\r\n                            }\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShareFolderDetail\r\n","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\DashBoard\\index.tsx",["850","851"],"import {ReactElement, useEffect} from \"react\";\r\nimport useStyles from \"./style\";\r\nimport {Grid} from \"@material-ui/core\";\r\nimport useDashboardModel from \"./model\";\r\nimport DiskIcon from \"../../components/Icons/DiskIcon\";\r\nimport {useInterval} from \"ahooks\";\r\nimport IconStatCard from \"../../components/IconStatCard\";\r\nimport {Apps, Archive, Dns, Folder, Person} from \"@material-ui/icons\";\r\nimport SystemInfoCard from \"./part/SystemInfoCard\";\r\nimport CpuMonitorCard from \"./part/CpuMonitorCard\";\r\nimport MemoryMonitorCard from \"./part/MemoryMonitorCard\";\r\nimport PageHead from \"../../components/PageHead\";\r\nimport {usePageHeadController} from \"../../components/PageHead/hook\";\r\n\r\nexport interface DashboardPagePropsType {\r\n\r\n}\r\n\r\nconst DashboardPage = ({}: DashboardPagePropsType): ReactElement => {\r\n    const classes = useStyles()\r\n    const model = useDashboardModel()\r\n    const pageHeadController = usePageHeadController({})\r\n    useInterval(() => {\r\n        model.initData()\r\n        model.refreshMonitorData()\r\n    },4000,{immediate:true})\r\n    useEffect(() => {\r\n        model.refreshSystemInfo()\r\n    },[])\r\n    return (\r\n        <div className={classes.root}>\r\n            <PageHead title={\"Dashboard\"} controller={pageHeadController} />\r\n            <div className={classes.content}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={6} sm={3} md={4} lg={2} xl={2}>\r\n                        <IconStatCard\r\n                            label={\"Disks\"}\r\n                            value={`${model.deviceInfo?.diskCount ?? 0} Disks`}\r\n                            icon={<DiskIcon />}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={6} sm={3} md={4} lg={2} xl={2}>\r\n                        <IconStatCard\r\n                            label={\"Storage\"}\r\n                            value={`${model.deviceInfo?.storageCount ?? 0} Storage`}\r\n                            icon={<Archive />}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={6} sm={3} md={4} lg={2} xl={2}>\r\n                        <IconStatCard\r\n                            label={\"Share Folder\"}\r\n                            value={`${model.deviceInfo?.shareFolderCount ?? 0} Share folders`}\r\n                            icon={<Folder />}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={6} sm={3} md={4} lg={2} xl={2}>\r\n                        <IconStatCard\r\n                            label={\"Users\"}\r\n                            value={`${model.deviceInfo?.userCount ?? 0} Users`}\r\n                            icon={<Person />}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={6} sm={3} md={4} lg={2} xl={2}>\r\n                        <IconStatCard\r\n                            label={\"ZFS pool\"}\r\n                            value={`${model.deviceInfo?.zfsCount ?? 0} Pool`}\r\n                            icon={<Dns />}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={6} sm={3} md={4} lg={2} xl={2}>\r\n                        <IconStatCard\r\n                            label={\"Apps\"}\r\n                            value={`${model.deviceInfo?.appCount ?? 0} apps`}\r\n                            icon={<Apps />}\r\n                        />\r\n                    </Grid>\r\n                    {\r\n                        model.systemInfo &&\r\n                        <Grid item xs={12} sm={12} md={12} lg={4} xl={3}>\r\n                            <SystemInfoCard systemInfo={model.systemInfo} />\r\n                        </Grid>\r\n                    }\r\n                    {\r\n                        model.systemMonitor &&\r\n                        <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                            <CpuMonitorCard cpu={model.systemMonitor.monitor.cpu} />\r\n                        </Grid>\r\n                    }\r\n                    {\r\n                        model.systemMonitor &&\r\n                        <Grid item xs={12} sm={12} md={6} lg={4} xl={3}>\r\n                            <MemoryMonitorCard memory={model.systemMonitor.monitor.memory} />\r\n                        </Grid>\r\n                    }\r\n                </Grid>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DashboardPage\r\n","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\Account\\index.tsx",["852","853"],"import React, {ReactElement} from \"react\";\r\nimport useStyles from \"./style\";\r\nimport {Button, Grid, Typography} from \"@material-ui/core\";\r\nimport InfoCard from \"../../components/InfoCard\";\r\nimport useLayoutModel from \"../../model/layout\";\r\nimport ChangePasswordDialog from \"../../components/ChangePasswordDialog\";\r\nimport {changePassword} from \"../../api/account\";\r\nimport {useSnackbar} from \"notistack\";\r\nimport {usePageHeadController} from \"../../components/PageHead/hook\";\r\nimport PageHead from \"../../components/PageHead\";\r\n\r\nexport interface AccountPagePropsType {\r\n\r\n}\r\n\r\nconst AccountPage = ({}: AccountPagePropsType): ReactElement => {\r\n    const classes = useStyles()\r\n    const layoutModel = useLayoutModel()\r\n    const {enqueueSnackbar} = useSnackbar()\r\n    const pageHeadController = usePageHeadController({})\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <ChangePasswordDialog\r\n                open={layoutModel.getDialogOpen(\"changePassword\")}\r\n                onCancel={() => layoutModel.switchDialog(\"changePassword\")}\r\n                onOk={async (password) => {\r\n                    await changePassword(password)\r\n                    enqueueSnackbar(\"password changed\", {variant: 'success'})\r\n                    layoutModel.switchDialog(\"changePassword\")\r\n                }}\r\n            />\r\n            <PageHead\r\n                title={localStorage.getItem(\"user\") ?? \"Account\"}\r\n                controller={pageHeadController}\r\n            />\r\n            <div className={classes.content}>\r\n                <Grid container spacing={4} >\r\n                    <Grid item>\r\n                        <InfoCard\r\n                            className={classes.card}\r\n                            label={\"Password\"}\r\n                            value={\"******\"}\r\n                            bottom={\r\n                                <>\r\n                                    <Button onClick={() => layoutModel.switchDialog(\"changePassword\")}>\r\n                                        Change\r\n                                    </Button>\r\n                                </>\r\n                            }\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AccountPage\r\n","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\Login\\index.tsx",["854","855"],"import useStyles from \"./style\";\r\nimport {Button, Paper, TextField} from \"@material-ui/core\";\r\nimport useUserModel from \"../../model/user\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {useSnackbar} from \"notistack\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {useLocalStorageState} from \"ahooks\";\r\n\r\nexport interface LoginPagePropsType {\r\n\r\n}\r\n\r\nconst LoginPage = ({}: LoginPagePropsType) => {\r\n    const history = useHistory()\r\n    const {enqueueSnackbar} = useSnackbar();\r\n    const [username, setUsername] = useState<string | undefined>()\r\n    const [password, setPassword] = useState<string | undefined>()\r\n    const [serviceUrl,setServiceUrl] = useState<string | undefined>()\r\n    const classes = useStyles()\r\n    const model = useUserModel()\r\n    useEffect(() => {\r\n        setServiceUrl(window.location.protocol +\"//\" + window.location.host.replace( window.location.port,\"8999\"))\r\n    },[])\r\n    const onLoginClick = async () => {\r\n        if (username && password && serviceUrl) {\r\n            localStorage.setItem(\"apiUrl\",serviceUrl)\r\n            const result = await model.login(username, password)\r\n            if (result.success) {\r\n                enqueueSnackbar(\"Login success\", {variant: 'success'})\r\n                history.replace(\"/home\")\r\n            } else {\r\n                enqueueSnackbar(`Login failed:${result.message}`, {variant: 'error'})\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n            <Paper className={classes.loginContainer}>\r\n                <div className={classes.loginHeader}>\r\n                    <div className={classes.title}>\r\n                        YouPlus\r\n                    </div>\r\n                    <div className={classes.sub}>\r\n                        ProjectXPolaris\r\n                    </div>\r\n                </div>\r\n                <div className={classes.loginForm}>\r\n                    <TextField\r\n                        label={\"ServiceUrl\"}\r\n                        fullWidth\r\n                        variant={\"outlined\"}\r\n                        value={serviceUrl}\r\n                        className={classes.input}\r\n                        onChange={(e) => setServiceUrl(e.target.value)}\r\n                    />\r\n                    <TextField\r\n                        label={\"Username\"}\r\n                        fullWidth\r\n                        variant={\"outlined\"}\r\n                        value={username}\r\n                        className={classes.input}\r\n                        onChange={(e) => setUsername(e.target.value)}\r\n                    />\r\n                    <TextField\r\n                        label={\"Password\"}\r\n                        fullWidth\r\n                        variant={\"outlined\"}\r\n                        className={classes.input}\r\n                        type={\"password\"}\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    />\r\n                    <Button variant={'contained'} fullWidth className={classes.loginBtn} onClick={onLoginClick}>Login\r\n                        in </Button>\r\n                </div>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginPage;\r\n","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\PoolDetail\\model.ts",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\api\\os.ts",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\GroupDetail\\style.ts",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\Groups\\style.ts",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\GroupDetail\\model.ts",["856","857"],"import {createModel} from \"hox\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {\r\n    addUserToUserGroup,\r\n    fetchGroupDetail,\r\n    removeGroup,\r\n    removeUserFromUserGroup,\r\n    UserGroupDetail\r\n} from \"../../api/users\";\r\nimport {strict} from \"assert\";\r\nimport {hexToRgb} from \"@material-ui/core\";\r\n\r\nconst GroupDetailModel = () => {\r\n    const [groupDetail,setGroupDetail]  = useState<UserGroupDetail | undefined>()\r\n    const [groupName,setGroupName] = useState<string | undefined>()\r\n\r\n    const fetchData = async (name:string) => {\r\n        const detail = await fetchGroupDetail(name)\r\n        setGroupDetail(detail)\r\n    }\r\n    const removeUser = async (users:string[]) => {\r\n        if (groupName) {\r\n            await removeUserFromUserGroup(groupName,users)\r\n            await fetchData(groupName)\r\n        }\r\n    }\r\n    const addUser = async (users:string[]) => {\r\n        if (groupName) {\r\n            await addUserToUserGroup(groupName,users)\r\n            await fetchData(groupName)\r\n        }\r\n    }\r\n    const remove = async () => {\r\n        if (groupName) {\r\n            await removeGroup(groupName)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (groupName) {\r\n            fetchData(groupName)\r\n        }\r\n    },[groupName])\r\n    return {\r\n        groupDetail,setGroupName,addUser,removeUser,remove\r\n    }\r\n}\r\nconst useGroupDetailModel = createModel(GroupDetailModel)\r\nexport default useGroupDetailModel\r\n","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\Groups\\model.ts",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\ShareFolderDetail\\model.ts",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\ShareFolderDetail\\style.ts",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\DashBoard\\style.ts",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\DashBoard\\model.ts",["858","859","860","861","862"],"import {createModel} from \"hox\";\r\nimport {useInterval} from \"ahooks\";\r\nimport {useState} from \"react\";\r\nimport {\r\n    DeviceInfo,\r\n    fetchDeviceInfo,\r\n    fetchSystemInfo,\r\n    fetchSystemMonitor,\r\n    SystemInfo,\r\n    SystemMonitor\r\n} from \"../../api/system\";\r\nimport {fetchDisks} from \"../../api/disks\";\r\nimport {fetchStorageList} from \"../../api/storage\";\r\nimport {getShareList} from \"../../api/share\";\r\nimport {getUserList} from \"../../api/users\";\r\n\r\nconst DashboardModel = () => {\r\n    const [systemInfo,setSystemInfo] = useState<SystemInfo | undefined>()\r\n    const [systemMonitor,setSystemMonitor] = useState<SystemMonitor | undefined>()\r\n    const [deviceInfo,setDeviceInfo] = useState<DeviceInfo | undefined>()\r\n\r\n    const initData = async () => {\r\n        const info = await fetchDeviceInfo()\r\n        setDeviceInfo(info)\r\n    }\r\n    const refreshSystemInfo = async () => {\r\n        const response = await fetchSystemInfo()\r\n        setSystemInfo(response)\r\n    }\r\n    const refreshMonitorData = async () => {\r\n        const info = await fetchSystemMonitor()\r\n        setSystemMonitor(info)\r\n    }\r\n    return {\r\n        systemInfo,initData,refreshSystemInfo,systemMonitor,refreshMonitorData,deviceInfo\r\n    }\r\n}\r\nconst useDashboardModel = createModel(DashboardModel)\r\nexport default useDashboardModel\r\n","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\Account\\style.ts",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\api\\account.ts",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\model\\user.ts",["863"],"import {createModel} from \"hox\";\r\nimport {fetchAuthToken} from \"../api/auth\";\r\nimport {ResponseError} from 'umi-request'\r\nimport {useLocalStorageState} from \"ahooks\";\r\n\r\nconst UserModel = () => {\r\n    const login = async (username: string, password: string) => {\r\n        try {\r\n            const response = await fetchAuthToken(username, password)\r\n            if (response.success) {\r\n                localStorage.setItem(\"token\", response.token)\r\n                localStorage.setItem(\"username\", username)\r\n                return {success: true}\r\n            }\r\n            return {success: false, message: response.reason}\r\n        }catch (e) {\r\n            const responseError : ResponseError = e\r\n            return {success: false, message: responseError.data.reason}\r\n        }\r\n    }\r\n    const logout = () => {\r\n        localStorage.removeItem(\"token\")\r\n        localStorage.removeItem(\"username\")\r\n        localStorage.removeItem(\"apiUrl\")\r\n    }\r\n    return {\r\n        login,logout\r\n    }\r\n}\r\nconst useUserModel = createModel(UserModel)\r\nexport default useUserModel\r\n","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\Login\\style.ts",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\PoolDetail\\style.tsx",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\System\\style.tsx",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\api\\auth.ts",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\api\\system.ts",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\InfoCard\\index.tsx",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\UserListCard\\index.tsx",["864","865"],"import React, {ReactElement} from \"react\";\r\nimport {\r\n    Avatar,\r\n    Button, IconButton,\r\n    List,\r\n    ListItem,\r\n    ListItemAvatar,\r\n    ListItemSecondaryAction,\r\n    ListItemText,\r\n    Paper\r\n} from \"@material-ui/core\";\r\nimport {Delete, Person, Remove} from \"@material-ui/icons\";\r\nimport useStyles from \"./style\";\r\n\r\nexport interface UserListCardPropsType {\r\n    users?: { uid: string, name: string }[]\r\n    title?: string\r\n    actions?: ReactElement\r\n    onRemove: (name: string) => void\r\n    className?: any\r\n}\r\n\r\nconst UserListCard = ({\r\n                          className,\r\n                          onRemove,\r\n                          actions,\r\n                          users = [],\r\n                          title = \"users\"\r\n                      }: UserListCardPropsType): ReactElement => {\r\n    const classes = useStyles()\r\n    return (\r\n        <Paper className={className}>\r\n            <div className={classes.userListHeader}>\r\n                <div className={classes.usersListTitle}>\r\n                    {title}\r\n                </div>\r\n                {actions}\r\n            </div>\r\n            <List className={classes.userList} dense>\r\n                {\r\n                    users.map(it => {\r\n                        return (\r\n                            <ListItem key={it.uid} className={classes.userListItem}>\r\n                                <ListItemAvatar>\r\n                                    <Avatar className={classes.userListIcon}>\r\n                                        <Person/>\r\n                                    </Avatar>\r\n                                </ListItemAvatar>\r\n                                <ListItemText primary={it.name} secondary={it.uid}/>\r\n                                <ListItemSecondaryAction>\r\n                                    <IconButton onClick={() => onRemove(it.name)} size={\"small\"}>\r\n                                        <Delete/>\r\n                                    </IconButton>\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                        )\r\n                    })\r\n                }\r\n            </List>\r\n\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default UserListCard\r\n","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\UserSelectDialog\\index.tsx",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\layout\\Auth\\index.tsx",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\NewGroupDialog\\index.tsx",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\layout\\Notification\\index.tsx",["866","867"],"import {useEffect} from \"react\";\r\nimport {DefaultNotificationManager} from \"../../ws\";\r\nimport {useSnackbar} from \"notistack\";\r\n\r\nexport interface NotificationPropsType {\r\n\r\n}\r\n\r\nconst Notification = ({}: NotificationPropsType) => {\r\n    const { enqueueSnackbar } = useSnackbar()\r\n    useEffect(() => {\r\n        DefaultNotificationManager.addListener(\"InstallError\", (event) => {\r\n            enqueueSnackbar(`${event.data.extra.appName} install error: ${event.data.errorMessage}`,{ variant:\"error\"  })\r\n        })\r\n        DefaultNotificationManager.addListener(\"InstallDone\", (event) => {\r\n            enqueueSnackbar(`${event.data.extra.appName} install success`,{ variant:\"success\"  })\r\n        })\r\n        DefaultNotificationManager.addListener(\"UninstallDone\", (event) => {\r\n            enqueueSnackbar(`${event.data.extra.appName} uninstall success`,{ variant:\"success\"  })\r\n        })\r\n        DefaultNotificationManager.addListener(\"UninstallError\", (event) => {\r\n            enqueueSnackbar(`${event.data.extra.appName} uninstall error: ${event.data.errorMessage}`,{ variant:\"success\"  })\r\n        })\r\n    },[])\r\n    return (<></>)\r\n}\r\n\r\nexport default Notification;\r\n","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\SwitchSelectDialog\\index.tsx",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\IconStatCard\\index.tsx",["868"],"import useStyles from \"./style\";\r\nimport {Avatar, ButtonBase, Paper} from \"@material-ui/core\";\r\nimport DiskIcon from \"../Icons/DiskIcon\";\r\nimport clsx from \"clsx\";\r\nimport {ReactElement} from \"react\";\r\n\r\nexport interface IconStatCardPropsType {\r\n    className?:string\r\n    label:string\r\n    value:string\r\n    icon:ReactElement\r\n}\r\n\r\nconst IconStatCard = ({className,label,value,icon}: IconStatCardPropsType) => {\r\n    const classes = useStyles()\r\n    return (\r\n\r\n        <Paper className={clsx(className)}>\r\n            <ButtonBase className={classes.root}>\r\n                <div className={classes.info}>\r\n                    <div className={classes.label}>\r\n                        {label}\r\n                    </div>\r\n                    <div className={classes.value}>\r\n                        {value}\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <Avatar className={classes.avatar}>\r\n                        { icon }\r\n                    </Avatar>\r\n                </div>\r\n            </ButtonBase>\r\n\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default IconStatCard;\r\n","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\ChangePasswordDialog\\index.tsx",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\layout\\Base\\parts\\Tool\\index.tsx",["869","870","871","872","873","874"],"import Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport * as React from \"react\";\r\nimport useStyles from \"./style\";\r\nimport {Avatar, ButtonBase, IconButton, Menu, MenuItem, useMediaQuery} from \"@material-ui/core\";\r\nimport {MenuOutlined, Person} from \"@material-ui/icons\";\r\nimport useUserModel from \"../../../../model/user\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport TaskPopup from \"../Task\";\r\nimport UserPopup from \"../../../../components/UserPopup\";\r\nimport theme from \"../../../../theme\";\r\nimport useLayoutModel from \"../../../../model/layout\";\r\n\r\nexport interface AppToolbarPropsType {\r\n\r\n}\r\n\r\nconst AppToolbar = ({}: AppToolbarPropsType) => {\r\n    const classes = useStyles()\r\n    const [userMenuEl, setUserMenuEl] = React.useState(null);\r\n    const userModel = useUserModel()\r\n    const layoutModel = useLayoutModel()\r\n    const collapse = useMediaQuery(theme.breakpoints.down('md'));\r\n    const history = useHistory()\r\n    const handleUserMenuClick = (event:any) => {\r\n        setUserMenuEl(event.currentTarget);\r\n    };\r\n\r\n    const handleUserMenuClose = () => {\r\n        setUserMenuEl(null);\r\n    };\r\n    const getUsername = () => {\r\n        const username = localStorage.getItem(\"username\")\r\n        if (username) {\r\n            return username\r\n        }\r\n        return \"Unknown\"\r\n    }\r\n    const onLogout = () => {\r\n        userModel.logout()\r\n        history.push(\"/\")\r\n    }\r\n    return (\r\n        <Toolbar>\r\n            <UserPopup\r\n                username={getUsername()}\r\n                open={Boolean(userMenuEl)}\r\n                anchorEl={userMenuEl}\r\n                onClose={handleUserMenuClose}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                onLogout={onLogout}\r\n            />\r\n            {\r\n                collapse &&\r\n                <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" onClick={() => layoutModel.setShowNav(true)}>\r\n                    <MenuOutlined />\r\n                </IconButton>\r\n            }\r\n\r\n            <Typography variant=\"h6\" noWrap component=\"div\" className={classes.title}>\r\n                YouPlus\r\n            </Typography>\r\n            <TaskPopup className={classes.actionIcon} />\r\n            <Avatar className={classes.avatar} onClick={handleUserMenuClick}>\r\n                { getUsername()[0] }\r\n            </Avatar>\r\n        </Toolbar>\r\n    )\r\n}\r\n\r\nexport default AppToolbar;\r\n",["875","876"],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\DashBoard\\part\\CpuMonitorCard\\index.tsx",["877"],"import React from 'react'\r\nimport useStyles from \"./style\";\r\nimport {Divider, Grid, Paper, Typography} from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport {Pie, RingProgress} from '@ant-design/charts';\r\nimport {CpuStat} from \"../../../../api/system\";\r\n\r\nexport interface CpuMonitorCardPropsType {\r\n    className?: string\r\n    cpu: CpuStat\r\n}\r\n\r\nconst CpuMonitorCard = ({className, cpu}: CpuMonitorCardPropsType) => {\r\n    const classes = useStyles()\r\n    const getUsage = () => {\r\n        if (cpu.total == 0) {\r\n            return 0\r\n        }\r\n        return (cpu.user + cpu.system + cpu.iowait) / cpu.total\r\n    }\r\n    var config = {\r\n        height: 160,\r\n        width: 160,\r\n        autoFit: false,\r\n        percent: getUsage(),\r\n        color: ['#00701a', '#E8EDF3'],\r\n    };\r\n    return (\r\n        <Paper className={clsx(classes.root, className)}>\r\n            <div className={classes.header}>\r\n                <Typography variant={\"subtitle1\"}>\r\n                    CPU\r\n                </Typography>\r\n            </div>\r\n            <Divider/>\r\n            <Grid container className={classes.content}>\r\n                <Grid item className={classes.chart} xs={12} sm={12} md={12} lg={4} xl={4}>\r\n                    <RingProgress {...config} />\r\n                </Grid>\r\n                <Grid item className={classes.chart} xs={12} sm={12} md={12} lg={4} xl={4}>\r\n                    <Pie\r\n                        innerRadius={0.8}\r\n                        width={160}\r\n                        height={160}\r\n                        angleField={'value'}\r\n                        colorField={'label'}\r\n                        data={[\r\n                            {\r\n                                label: \"system\",\r\n                                value: cpu.system\r\n                            },\r\n                            {\r\n                                label: \"user\",\r\n                                value: cpu.user\r\n                            },\r\n                            {\r\n                                label: \"iowait\",\r\n                                value: cpu.iowait\r\n                            }\r\n                        ]}\r\n                    />\r\n                </Grid>\r\n                <Grid className={classes.info} xs={12} sm={12} md={12} lg={4} xl={4}>\r\n                    <div className={classes.item}>\r\n                        <div className={classes.label}>\r\n                            Idle\r\n                        </div>\r\n                        <div className={classes.value}>\r\n                            {cpu.idle}\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.item}>\r\n                        <div className={classes.label}>\r\n                            Total\r\n                        </div>\r\n                        <div className={classes.value}>\r\n                            {cpu.total}\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.item}>\r\n                        <div className={classes.label}>\r\n                            User\r\n                        </div>\r\n                        <div className={classes.value}>\r\n                            {cpu.user}\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.item}>\r\n                        <div className={classes.label}>\r\n                            System\r\n                        </div>\r\n                        <div className={classes.value}>\r\n                            {cpu.system}\r\n                        </div>\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default CpuMonitorCard;\r\n","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\DashBoard\\part\\MemoryMonitorCard\\index.tsx",["878"],"import useStyles from \"./style\";\r\nimport {Divider, Grid, Paper, Typography} from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport {RingProgress} from \"@ant-design/charts\";\r\nimport React from \"react\";\r\nimport {Memory, MemoryStat} from \"../../../../api/system\";\r\nimport filesize from \"filesize\";\r\n\r\nexport interface MemoryMonitorCardPropsType {\r\n    className?:string\r\n    memory:MemoryStat\r\n}\r\n\r\nconst MemoryMonitorCard = ({ className,memory }: MemoryMonitorCardPropsType) => {\r\n    const classes = useStyles()\r\n    var config = {\r\n        height: 160,\r\n        width: 160,\r\n        autoFit: false,\r\n        percent: (memory.used) / memory.total,\r\n        color: ['#00701a', '#E8EDF3'],\r\n    };\r\n    return (\r\n        <Paper className={clsx(classes.root,className)}>\r\n            <div className={classes.header}>\r\n                <Typography variant={\"subtitle1\"}>\r\n                    Memory\r\n                </Typography>\r\n            </div>\r\n            <Divider />\r\n            <Grid container className={classes.content}>\r\n                <Grid item className={classes.chart} xs={12} sm={12} md={12} lg={6} xl={6}>\r\n                    <RingProgress {...config} />\r\n                </Grid>\r\n                <Grid item className={classes.info} xs={12} sm={12} md={12} lg={6} xl={6}>\r\n                    <div className={classes.item}>\r\n                        <div className={classes.label}>\r\n                            Total\r\n                        </div>\r\n                        <div className={classes.value}>\r\n                            { filesize(memory.total) }\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.item}>\r\n                        <div className={classes.label}>\r\n                            Free\r\n                        </div>\r\n                        <div className={classes.value}>\r\n                            { filesize(memory.free) }\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.item}>\r\n                        <div className={classes.label}>\r\n                            Used\r\n                        </div>\r\n                        <div className={classes.value}>\r\n                            { filesize(memory.used) }\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.item}>\r\n                        <div className={classes.label}>\r\n                            System\r\n                        </div>\r\n                        <div className={classes.value}>\r\n                            { filesize(memory.cache) }\r\n                        </div>\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default MemoryMonitorCard;\r\n","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\DashBoard\\part\\SystemInfoCard\\index.tsx",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\layout\\Base\\parts\\Nav\\index.tsx",["879","880"],"import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport {\r\n    Apps,\r\n    Archive,\r\n    Assignment,\r\n    Dashboard,\r\n    Dns,\r\n    Folder,\r\n    Group, Link,\r\n    NetworkCell,\r\n    Person,\r\n    Settings,\r\n    Storage\r\n} from \"@material-ui/icons\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {useUpdate} from \"ahooks\";\r\nimport {ListSubheader, Typography, useMediaQuery} from \"@material-ui/core\";\r\nimport theme from \"../../../../theme\";\r\nimport useLayoutModel from \"../../../../model/layout\";\r\n\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles({\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n        boxSizing: 'border-box',\r\n    },\r\n    drawerContainer: {\r\n        overflow: 'auto',\r\n    },\r\n});\r\n\r\ninterface AppNavigationPropsType {\r\n\r\n}\r\n\r\n\r\nexport default function AppNavigation({}: AppNavigationPropsType) {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const update = useUpdate();\r\n    const layoutModel = useLayoutModel()\r\n    const collapse = useMediaQuery(theme.breakpoints.down('md'));\r\n    const changeUrl = (urlPath: string) => {\r\n        layoutModel.setShowNav(false)\r\n        if (history.location.pathname !== urlPath) {\r\n            history.replace(urlPath)\r\n            update()\r\n        }\r\n    }\r\n    return (\r\n        <Drawer\r\n            className={classes.drawer}\r\n            variant={collapse?'temporary' :\"permanent\"}\r\n            classes={{\r\n                paper: classes.drawerPaper,\r\n            }}\r\n            open={layoutModel.showNav}\r\n            onClose={() => layoutModel.setShowNav(false)}\r\n        >\r\n            <Toolbar title={\"YouPlus\"}>\r\n                <Typography variant={\"h6\"}>\r\n                    YouPlus\r\n                </Typography>\r\n            </Toolbar>\r\n            <div className={classes.drawerContainer}>\r\n                <List\r\n                    subheader={\r\n                        <ListSubheader component=\"div\">\r\n                            General\r\n                        </ListSubheader>\r\n                    }\r\n                >\r\n                    <ListItem\r\n                        button\r\n                        key={\"dashboard\"}\r\n                        selected={history.location.pathname === \"/home\"}\r\n                        onClick={() => changeUrl(\"/home\")}\r\n                    >\r\n                        <ListItemIcon>\r\n                            <Dashboard/>\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={\"Dashboard\"}/>\r\n                    </ListItem>\r\n                    <ListItem\r\n                        button\r\n                        key={\"apps\"}\r\n                        selected={history.location.pathname === \"/apps\"}\r\n                        onClick={() => changeUrl(\"/apps\")}\r\n                    >\r\n                        <ListItemIcon>\r\n                            <Apps/>\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={\"Apps\"}/>\r\n                    </ListItem>\r\n                    <ListItem\r\n                        button\r\n                        key={\"network\"}\r\n                        selected={history.location.pathname === \"/network\"}\r\n                        onClick={() => changeUrl(\"/network\")}\r\n                    >\r\n                        <ListItemIcon>\r\n                            <Link/>\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={\"Network\"}/>\r\n                    </ListItem>\r\n                </List>\r\n                <List\r\n                    subheader={\r\n                        <ListSubheader component=\"div\">\r\n                            Data\r\n                        </ListSubheader>\r\n                    }\r\n                >\r\n\r\n                    <ListItem\r\n                        button\r\n                        key={\"disks\"}\r\n                        selected={history.location.pathname === \"/disks\"}\r\n                        onClick={() => changeUrl(\"/disks\")}\r\n                    >\r\n                        <ListItemIcon>\r\n                            <Storage/>\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={\"Disks\"}/>\r\n                    </ListItem>\r\n                    {/*<ListItem*/}\r\n                    {/*    button*/}\r\n                    {/*    key={\"parts\"}*/}\r\n                    {/*    selected={history.location.pathname === \"/parts\"}*/}\r\n                    {/*    onClick={() => changeUrl(\"/parts\")}*/}\r\n                    {/*>*/}\r\n                    {/*    <ListItemIcon>*/}\r\n                    {/*        <Inbox/>*/}\r\n                    {/*    </ListItemIcon>*/}\r\n                    {/*    <ListItemText primary={\"Parts\"}/>*/}\r\n                    {/*</ListItem>*/}\r\n                    <ListItem\r\n                        button\r\n                        key={\"zfs\"}\r\n                        selected={history.location.pathname === \"/zfs\"}\r\n                        onClick={() => changeUrl(\"/zfs\")}\r\n                    >\r\n                        <ListItemIcon>\r\n                            <Dns/>\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={\"ZFS\"}/>\r\n                    </ListItem>\r\n                    <ListItem\r\n                        button\r\n                        key={\"storage\"}\r\n                        selected={history.location.pathname === \"/storage\"}\r\n                        onClick={() => changeUrl(\"/storage\")}\r\n                    >\r\n                        <ListItemIcon>\r\n                            <Archive/>\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={\"Storage\"}/>\r\n                    </ListItem>\r\n                    <ListItem\r\n                        button\r\n                        key={\"shareFolder\"}\r\n                        selected={history.location.pathname === \"/folders\"}\r\n                        onClick={() => changeUrl(\"/folders\")}\r\n                    >\r\n                        <ListItemIcon>\r\n                            <Folder/>\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={\"Share Folders\"}/>\r\n                    </ListItem>\r\n                </List>\r\n                <List\r\n                    subheader={\r\n                        <ListSubheader component=\"div\">\r\n                            System\r\n                        </ListSubheader>\r\n                    }\r\n                >\r\n                    <ListItem\r\n                        button\r\n                        key={\"users\"}\r\n                        selected={history.location.pathname === \"/users\"}\r\n                        onClick={() => changeUrl(\"/users\")}\r\n                    >\r\n                        <ListItemIcon>\r\n                            <Person/>\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={\"Users\"}/>\r\n                    </ListItem>\r\n                    <ListItem\r\n                        button\r\n                        key={\"groups\"}\r\n                        selected={history.location.pathname === \"/groups\"}\r\n                        onClick={() => changeUrl(\"/groups\")}\r\n                    >\r\n                        <ListItemIcon>\r\n                            <Group/>\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={\"Groups\"}/>\r\n                    </ListItem>\r\n                </List>\r\n                <List\r\n                    subheader={\r\n                        <ListSubheader component=\"div\">\r\n                            My\r\n                        </ListSubheader>\r\n                    }\r\n                >\r\n                    <ListItem\r\n                        button\r\n                        key={\"account\"}\r\n                        selected={history.location.pathname === \"/my/account\"}\r\n                        onClick={() => changeUrl(\"/my/account\")}\r\n                    >\r\n                        <ListItemIcon>\r\n                            <Assignment/>\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={\"Account\"}/>\r\n                    </ListItem>\r\n                </List>\r\n\r\n                <List\r\n                    subheader={\r\n                        <ListSubheader component=\"div\">\r\n                            System\r\n                        </ListSubheader>\r\n                    }\r\n                >\r\n                    <ListItem\r\n                        button\r\n                        key={\"system\"}\r\n                        selected={history.location.pathname === \"/system\"}\r\n                        onClick={() => changeUrl(\"/system\")}\r\n                    >\r\n                        <ListItemIcon>\r\n                            <Settings />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={\"System\"}/>\r\n                    </ListItem>\r\n                </List>\r\n\r\n            </div>\r\n        </Drawer>\r\n    );\r\n}\r\n","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\InfoCard\\style.ts",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\UserSelectDialog\\style.ts",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\UserListCard\\style.ts",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\ws.ts",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\NewGroupDialog\\style.ts",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\SwitchSelectDialog\\style.ts",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\ChangePasswordDialog\\style.ts",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\layout\\Base\\parts\\Tool\\style.ts",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\IconStatCard\\style.tsx",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\DashBoard\\part\\CpuMonitorCard\\style.tsx",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\DashBoard\\part\\SystemInfoCard\\style.tsx",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\pages\\DashBoard\\part\\MemoryMonitorCard\\style.tsx",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\layout\\Base\\parts\\Task\\index.tsx",["881"],"import useStyles from \"./style\";\r\nimport {IconButton, Paper, Popover, Typography} from \"@material-ui/core\";\r\nimport {Report, ViewDay} from \"@material-ui/icons\";\r\nimport {SyntheticEvent, useState} from \"react\";\r\nimport clsx from \"clsx\";\r\nimport InstallAppTaskCard from \"../../../../components/InstallAppTaskCard\";\r\nimport useTaskModel from \"../../../../model/task\";\r\nimport {useInterval} from \"ahooks\";\r\nimport task from \"../../../../model/task\";\r\n\r\nexport interface TaskPopupPropsType {\r\n    className?:any\r\n}\r\n\r\nconst TaskPopup = ({className}: TaskPopupPropsType) => {\r\n    const classes = useStyles()\r\n    const taskModel = useTaskModel()\r\n    useInterval(() => {\r\n       taskModel.refresh()\r\n    },2000)\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    const handleClick = (event:SyntheticEvent<any>) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const open = Boolean(anchorEl);\r\n    const id = open ? 'simple-popover' : undefined;\r\n    return (\r\n        <>\r\n            <IconButton onClick={handleClick} className={clsx(className,classes.root)}>\r\n                <ViewDay />\r\n            </IconButton>\r\n            <Popover\r\n                id={id}\r\n                open={open}\r\n                anchorEl={anchorEl}\r\n                onClose={handleClose}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n            >\r\n               <Paper className={classes.content}>\r\n                   {\r\n                       taskModel.tasks.length > 0 && taskModel.tasks.map(it => {\r\n                           return (\r\n                               <InstallAppTaskCard className={classes.item} task={it}/>\r\n                           )\r\n                       })\r\n                   }\r\n                   {\r\n                       taskModel.tasks.length === 0 &&\r\n                           <div className={classes.empty}>\r\n                               <Report className={classes.icon}/>\r\n                               <Typography variant={\"subtitle1\"}>\r\n                                   No task\r\n                               </Typography>\r\n                           </div>\r\n                   }\r\n               </Paper>\r\n            </Popover>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TaskPopup;\r\n","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\UserPopup\\index.tsx",["882"],"import useStyles from \"./style\";\r\nimport {Avatar, Button, ButtonBase, Card, Divider, Popover, PopoverProps, Typography} from \"@material-ui/core\";\r\nimport {Person} from \"@material-ui/icons\";\r\n\r\nexport interface UserPopupPropsType  {\r\n    username: string\r\n    onLogout: () => void\r\n}\r\n\r\nconst UserPopup = ({onLogout,username,...other}: UserPopupPropsType & PopoverProps) => {\r\n    const classes = useStyles()\r\n    return (\r\n        <Popover {...other}>\r\n            <Card className={classes.root}>\r\n                <Avatar className={classes.avatar} >\r\n                    <Person />\r\n                </Avatar>\r\n                <Typography variant={\"h5\"}>\r\n                    {username}\r\n                </Typography>\r\n                <Divider/>\r\n                <Button variant={\"outlined\"} onClick={onLogout}>\r\n                    Sign out\r\n                </Button>\r\n            </Card>\r\n        </Popover>\r\n    )\r\n}\r\n\r\nexport default UserPopup;\r\n","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\model\\task.ts",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\layout\\Base\\parts\\Task\\style.tsx",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\UserPopup\\style.tsx",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\api\\task.ts",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\InstallAppTaskCard\\index.tsx",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\InstallAppTaskCard\\style.tsx",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\UserGroupSelectDialog\\index.tsx",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\UserGroupSelectDialog\\style.ts",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\UserAndGroupListCard\\index.tsx",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\UserAndGroupListCard\\style.ts",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\PageHead\\index.tsx",["883"],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\PageHead\\style.ts",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\PageHead\\hook.ts",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\PathPickDialog\\index.tsx",["884","885","886"],"import useStyles from './style'\r\nimport clsx from 'clsx'\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogTitle,\r\n    IconButton,\r\n    List,\r\n    ListItem,\r\n    ListItemAvatar, ListItemText,\r\n    TextField\r\n} from \"@material-ui/core\";\r\nimport {ArrowBack, Folder} from \"@material-ui/icons\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {fetchDirContent, PathItem} from \"../../api/path\";\r\n\r\nexport interface PathPickDialogPropsType {\r\n    className?: string,\r\n    open?: boolean\r\n    onClose: () => void\r\n    onOk: (selectPath:string) => void\r\n}\r\n\r\nconst PathPickDialog = ({className,open = false,onClose,onOk}: PathPickDialogPropsType): React.ReactElement => {\r\n    const classes = useStyles()\r\n    const [content,setContent] = useState<PathItem[]>([])\r\n    const [inputPath,setInputPath] = useState<string>(\"/\")\r\n    const [currentPath,setCurrentPath] = useState<string>(inputPath)\r\n    const refreshContent = async (target = currentPath) => {\r\n        const response = await fetchDirContent(target)\r\n        setContent(response.filter(it => it.type === \"Directory\"))\r\n        setInputPath(target)\r\n        setCurrentPath(target)\r\n    }\r\n    const onDialogOk = () => {\r\n        if (currentPath !== \"/\") {\r\n            onOk(currentPath)\r\n        }\r\n    }\r\n    const onGoBack = () => {\r\n        let backPath = currentPath;\r\n        if (!backPath || backPath === \"/\") {\r\n            return\r\n        }\r\n        if (backPath.startsWith(\"/\")) {\r\n            backPath = backPath.slice(1)\r\n        }\r\n        const parts = backPath.split(\"/\")\r\n        parts.pop()\r\n        if (parts.length == 0) {\r\n            setCurrentPath(\"/\")\r\n            return\r\n        }\r\n        setCurrentPath(parts.join(\"/\"))\r\n    }\r\n    useEffect(() => {\r\n        refreshContent()\r\n    },[currentPath])\r\n    return (\r\n        <Dialog onClose={onClose} open={open} className={clsx(className,classes.root)}>\r\n            <div className={classes.header}>\r\n                <IconButton className={classes.backButton} size={\"small\"} onClick={() => onGoBack()}>\r\n                    <ArrowBack />\r\n                </IconButton>\r\n                <TextField\r\n                    className={classes.pathInput}\r\n                    size={\"small\"}\r\n                    value={inputPath}\r\n                    onChange={(e) => {\r\n                        setInputPath(e.target.value)\r\n                    }}\r\n                />\r\n                <Button\r\n                    className={classes.goButton}\r\n                    size={\"small\"}\r\n                    onClick={() => refreshContent(inputPath)}\r\n                >\r\n                    Go\r\n                </Button>\r\n            </div>\r\n            <List className={classes.list}>\r\n                {\r\n                    content.map(it => (\r\n                        <ListItem\r\n                            button key={it.path}\r\n                                  onClick={() => {\r\n                                      setInputPath(it.path)\r\n                                      setCurrentPath(it.path)\r\n                                  }}>\r\n                            <ListItemAvatar>\r\n                                <Folder />\r\n                            </ListItemAvatar>\r\n                            <ListItemText primary={it.name}/>\r\n                        </ListItem>\r\n                    ))\r\n                }\r\n            </List>\r\n            <DialogActions>\r\n                <Button onClick={onDialogOk}>\r\n                    Select\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default PathPickDialog","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\PathPickDialog\\style.ts",[],"C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\api\\path.ts",["887"],"import apiRequest from \"../utils/request\";\r\nimport {ApplicationConfig} from \"../config\";\r\nimport {BaseResponse} from \"./base\";\r\n\r\nexport interface PathItem {\r\n    name:string\r\n    type:string\r\n    path:string\r\n}\r\nexport const fetchDirContent = async (target:string):Promise<PathItem[]> => {\r\n    // @ts-ignore\r\n    return apiRequest.get(ApplicationConfig.apiPaths.readDir,{\r\n        params: {target}\r\n    })\r\n}","C:\\Users\\aren\\Desktop\\YouPlus-Project\\YouPlus-Web\\src\\components\\InstallAppDialog\\hook.ts",[],{"ruleId":"888","replacedBy":"889"},{"ruleId":"890","replacedBy":"891"},{"ruleId":"892","severity":1,"message":"893","line":2,"column":9,"nodeType":"894","messageId":"895","endLine":2,"endColumn":13},{"ruleId":"892","severity":1,"message":"896","line":2,"column":22,"nodeType":"894","messageId":"895","endLine":2,"endColumn":28},{"ruleId":"897","severity":1,"message":"898","line":32,"column":22,"nodeType":"899","messageId":"900","endLine":32,"endColumn":46},{"ruleId":"901","severity":1,"message":"902","line":41,"column":8,"nodeType":"903","endLine":41,"endColumn":10,"suggestions":"904"},{"ruleId":"892","severity":1,"message":"905","line":21,"column":8,"nodeType":"894","messageId":"895","endLine":21,"endColumn":16},{"ruleId":"897","severity":1,"message":"898","line":37,"column":18,"nodeType":"899","messageId":"900","endLine":37,"endColumn":38},{"ruleId":"901","severity":1,"message":"906","line":45,"column":7,"nodeType":"903","endLine":45,"endColumn":9,"suggestions":"907"},{"ruleId":"892","severity":1,"message":"905","line":2,"column":8,"nodeType":"894","messageId":"895","endLine":2,"endColumn":16},{"ruleId":"892","severity":1,"message":"908","line":5,"column":13,"nodeType":"894","messageId":"895","endLine":5,"endColumn":19},{"ruleId":"892","severity":1,"message":"909","line":13,"column":9,"nodeType":"894","messageId":"895","endLine":13,"endColumn":12},{"ruleId":"897","severity":1,"message":"898","line":26,"column":22,"nodeType":"899","messageId":"900","endLine":26,"endColumn":46},{"ruleId":"901","severity":1,"message":"910","line":32,"column":8,"nodeType":"903","endLine":32,"endColumn":10,"suggestions":"911"},{"ruleId":"892","severity":1,"message":"912","line":3,"column":15,"nodeType":"894","messageId":"895","endLine":3,"endColumn":25},{"ruleId":"897","severity":1,"message":"898","line":14,"column":20,"nodeType":"899","messageId":"900","endLine":14,"endColumn":42},{"ruleId":"901","severity":1,"message":"913","line":21,"column":8,"nodeType":"903","endLine":21,"endColumn":10,"suggestions":"914"},{"ruleId":"892","severity":1,"message":"915","line":10,"column":5,"nodeType":"894","messageId":"895","endLine":10,"endColumn":18},{"ruleId":"892","severity":1,"message":"916","line":18,"column":14,"nodeType":"894","messageId":"895","endLine":18,"endColumn":20},{"ruleId":"892","severity":1,"message":"917","line":23,"column":31,"nodeType":"894","messageId":"895","endLine":23,"endColumn":51},{"ruleId":"897","severity":1,"message":"898","line":31,"column":34,"nodeType":"899","messageId":"900","endLine":31,"endColumn":55},{"ruleId":"892","severity":1,"message":"912","line":12,"column":5,"nodeType":"894","messageId":"895","endLine":12,"endColumn":15},{"ruleId":"897","severity":1,"message":"898","line":26,"column":20,"nodeType":"899","messageId":"900","endLine":26,"endColumn":42},{"ruleId":"901","severity":1,"message":"918","line":39,"column":8,"nodeType":"903","endLine":39,"endColumn":10,"suggestions":"919"},{"ruleId":"892","severity":1,"message":"912","line":4,"column":71,"nodeType":"894","messageId":"895","endLine":4,"endColumn":81},{"ruleId":"892","severity":1,"message":"920","line":5,"column":22,"nodeType":"894","messageId":"895","endLine":5,"endColumn":28},{"ruleId":"892","severity":1,"message":"921","line":8,"column":8,"nodeType":"894","messageId":"895","endLine":8,"endColumn":14},{"ruleId":"897","severity":1,"message":"898","line":17,"column":22,"nodeType":"899","messageId":"900","endLine":17,"endColumn":46},{"ruleId":"901","severity":1,"message":"913","line":23,"column":8,"nodeType":"903","endLine":23,"endColumn":10,"suggestions":"922"},{"ruleId":"923","severity":1,"message":"924","line":1,"column":1,"nodeType":"925","messageId":"900","fix":"926"},{"ruleId":"897","severity":1,"message":"898","line":11,"column":20,"nodeType":"899","messageId":"900","endLine":11,"endColumn":42},{"ruleId":"901","severity":1,"message":"913","line":16,"column":7,"nodeType":"903","endLine":16,"endColumn":9,"suggestions":"927"},{"ruleId":"897","severity":1,"message":"898","line":13,"column":25,"nodeType":"899","messageId":"900","endLine":13,"endColumn":52},{"ruleId":"901","severity":1,"message":"928","line":21,"column":8,"nodeType":"903","endLine":21,"endColumn":10,"suggestions":"929"},{"ruleId":"892","severity":1,"message":"908","line":3,"column":5,"nodeType":"894","messageId":"895","endLine":3,"endColumn":11},{"ruleId":"892","severity":1,"message":"916","line":19,"column":9,"nodeType":"894","messageId":"895","endLine":19,"endColumn":15},{"ruleId":"901","severity":1,"message":"928","line":33,"column":7,"nodeType":"903","endLine":33,"endColumn":9,"suggestions":"930"},{"ruleId":"892","severity":1,"message":"912","line":2,"column":15,"nodeType":"894","messageId":"895","endLine":2,"endColumn":25},{"ruleId":"897","severity":1,"message":"898","line":14,"column":22,"nodeType":"899","messageId":"900","endLine":14,"endColumn":46},{"ruleId":"901","severity":1,"message":"931","line":21,"column":7,"nodeType":"903","endLine":21,"endColumn":9,"suggestions":"932"},{"ruleId":"892","severity":1,"message":"912","line":2,"column":81,"nodeType":"894","messageId":"895","endLine":2,"endColumn":91},{"ruleId":"897","severity":1,"message":"898","line":14,"column":24,"nodeType":"899","messageId":"900","endLine":14,"endColumn":50},{"ruleId":"901","severity":1,"message":"928","line":22,"column":8,"nodeType":"903","endLine":22,"endColumn":10,"suggestions":"933"},{"ruleId":"892","severity":1,"message":"934","line":2,"column":9,"nodeType":"894","messageId":"895","endLine":2,"endColumn":18},{"ruleId":"892","severity":1,"message":"935","line":2,"column":9,"nodeType":"894","messageId":"895","endLine":2,"endColumn":19},{"ruleId":"892","severity":1,"message":"934","line":3,"column":9,"nodeType":"894","messageId":"895","endLine":3,"endColumn":18},{"ruleId":"892","severity":1,"message":"936","line":1,"column":9,"nodeType":"894","messageId":"895","endLine":1,"endColumn":20},{"ruleId":"892","severity":1,"message":"934","line":2,"column":9,"nodeType":"894","messageId":"895","endLine":2,"endColumn":18},{"ruleId":"892","severity":1,"message":"934","line":2,"column":9,"nodeType":"894","messageId":"895","endLine":2,"endColumn":18},{"ruleId":"892","severity":1,"message":"934","line":2,"column":9,"nodeType":"894","messageId":"895","endLine":2,"endColumn":18},{"ruleId":"892","severity":1,"message":"934","line":2,"column":9,"nodeType":"894","messageId":"895","endLine":2,"endColumn":18},{"ruleId":"892","severity":1,"message":"937","line":23,"column":11,"nodeType":"894","messageId":"895","endLine":23,"endColumn":30},{"ruleId":"892","severity":1,"message":"938","line":4,"column":9,"nodeType":"894","messageId":"895","endLine":4,"endColumn":21},{"ruleId":"892","severity":1,"message":"939","line":3,"column":20,"nodeType":"894","messageId":"895","endLine":3,"endColumn":36},{"ruleId":"892","severity":1,"message":"940","line":2,"column":9,"nodeType":"894","messageId":"895","endLine":2,"endColumn":22},{"ruleId":"892","severity":1,"message":"934","line":1,"column":9,"nodeType":"894","messageId":"895","endLine":1,"endColumn":18},{"ruleId":"892","severity":1,"message":"941","line":3,"column":9,"nodeType":"894","messageId":"895","endLine":3,"endColumn":17},{"ruleId":"892","severity":1,"message":"942","line":2,"column":9,"nodeType":"894","messageId":"895","endLine":2,"endColumn":19},{"ruleId":"892","severity":1,"message":"912","line":12,"column":5,"nodeType":"894","messageId":"895","endLine":12,"endColumn":15},{"ruleId":"892","severity":1,"message":"943","line":14,"column":9,"nodeType":"894","messageId":"895","endLine":14,"endColumn":13},{"ruleId":"944","severity":1,"message":"945","line":96,"column":25,"nodeType":"946","endLine":96,"endColumn":89},{"ruleId":"901","severity":1,"message":"947","line":67,"column":7,"nodeType":"903","endLine":67,"endColumn":13,"suggestions":"948"},{"ruleId":"949","severity":1,"message":"950","line":69,"column":23,"nodeType":"951","messageId":"900","endLine":69,"endColumn":25},{"ruleId":"949","severity":1,"message":"950","line":80,"column":23,"nodeType":"951","messageId":"900","endLine":80,"endColumn":25},{"ruleId":"949","severity":1,"message":"950","line":96,"column":23,"nodeType":"951","messageId":"900","endLine":96,"endColumn":25},{"ruleId":"949","severity":1,"message":"950","line":114,"column":41,"nodeType":"951","messageId":"900","endLine":114,"endColumn":43},{"ruleId":"949","severity":1,"message":"950","line":124,"column":39,"nodeType":"951","messageId":"900","endLine":124,"endColumn":41},{"ruleId":"949","severity":1,"message":"950","line":131,"column":32,"nodeType":"951","messageId":"900","endLine":131,"endColumn":34},{"ruleId":"949","severity":1,"message":"950","line":61,"column":27,"nodeType":"951","messageId":"900","endLine":61,"endColumn":29},{"ruleId":"892","severity":1,"message":"952","line":1,"column":29,"nodeType":"894","messageId":"895","endLine":1,"endColumn":33},{"ruleId":"892","severity":1,"message":"953","line":11,"column":9,"nodeType":"894","messageId":"895","endLine":11,"endColumn":12},{"ruleId":"888","replacedBy":"954"},{"ruleId":"890","replacedBy":"955"},{"ruleId":"892","severity":1,"message":"956","line":5,"column":9,"nodeType":"894","messageId":"895","endLine":5,"endColumn":24},{"ruleId":"892","severity":1,"message":"957","line":40,"column":11,"nodeType":"894","messageId":"895","endLine":40,"endColumn":21},{"ruleId":"892","severity":1,"message":"958","line":47,"column":15,"nodeType":"894","messageId":"895","endLine":47,"endColumn":23},{"ruleId":"949","severity":1,"message":"950","line":61,"column":23,"nodeType":"951","messageId":"900","endLine":61,"endColumn":25},{"ruleId":"949","severity":1,"message":"950","line":77,"column":23,"nodeType":"951","messageId":"900","endLine":77,"endColumn":25},{"ruleId":"892","severity":1,"message":"959","line":2,"column":10,"nodeType":"894","messageId":"895","endLine":2,"endColumn":27},{"ruleId":"892","severity":1,"message":"960","line":3,"column":9,"nodeType":"894","messageId":"895","endLine":3,"endColumn":13},{"ruleId":"892","severity":1,"message":"961","line":1,"column":27,"nodeType":"894","messageId":"895","endLine":1,"endColumn":35},{"ruleId":"892","severity":1,"message":"962","line":2,"column":9,"nodeType":"894","messageId":"895","endLine":2,"endColumn":19},{"ruleId":"892","severity":1,"message":"963","line":2,"column":21,"nodeType":"894","messageId":"895","endLine":2,"endColumn":25},{"ruleId":"892","severity":1,"message":"964","line":16,"column":11,"nodeType":"894","messageId":"895","endLine":16,"endColumn":21},{"ruleId":"901","severity":1,"message":"910","line":20,"column":7,"nodeType":"903","endLine":20,"endColumn":9,"suggestions":"965"},{"ruleId":"892","severity":1,"message":"966","line":2,"column":8,"nodeType":"894","messageId":"895","endLine":2,"endColumn":12},{"ruleId":"892","severity":1,"message":"966","line":2,"column":8,"nodeType":"894","messageId":"895","endLine":2,"endColumn":12},{"ruleId":"892","severity":1,"message":"912","line":2,"column":15,"nodeType":"894","messageId":"895","endLine":2,"endColumn":25},{"ruleId":"897","severity":1,"message":"898","line":15,"column":25,"nodeType":"899","messageId":"900","endLine":15,"endColumn":52},{"ruleId":"901","severity":1,"message":"928","line":22,"column":7,"nodeType":"903","endLine":22,"endColumn":9,"suggestions":"967"},{"ruleId":"892","severity":1,"message":"968","line":1,"column":74,"nodeType":"894","messageId":"895","endLine":1,"endColumn":79},{"ruleId":"892","severity":1,"message":"912","line":1,"column":81,"nodeType":"894","messageId":"895","endLine":1,"endColumn":91},{"ruleId":"897","severity":1,"message":"898","line":14,"column":21,"nodeType":"899","messageId":"900","endLine":14,"endColumn":44},{"ruleId":"892","severity":1,"message":"968","line":5,"column":17,"nodeType":"894","messageId":"895","endLine":5,"endColumn":22},{"ruleId":"892","severity":1,"message":"912","line":5,"column":24,"nodeType":"894","messageId":"895","endLine":5,"endColumn":34},{"ruleId":"897","severity":1,"message":"898","line":17,"column":26,"nodeType":"899","messageId":"900","endLine":17,"endColumn":54},{"ruleId":"901","severity":1,"message":"928","line":27,"column":8,"nodeType":"903","endLine":27,"endColumn":10,"suggestions":"969"},{"ruleId":"892","severity":1,"message":"905","line":2,"column":8,"nodeType":"894","messageId":"895","endLine":2,"endColumn":16},{"ruleId":"897","severity":1,"message":"898","line":17,"column":21,"nodeType":"899","messageId":"900","endLine":17,"endColumn":44},{"ruleId":"901","severity":1,"message":"913","line":24,"column":8,"nodeType":"903","endLine":24,"endColumn":10,"suggestions":"970"},{"ruleId":"892","severity":1,"message":"971","line":3,"column":8,"nodeType":"894","messageId":"895","endLine":3,"endColumn":14},{"ruleId":"892","severity":1,"message":"972","line":5,"column":8,"nodeType":"894","messageId":"895","endLine":5,"endColumn":15},{"ruleId":"892","severity":1,"message":"973","line":8,"column":8,"nodeType":"894","messageId":"895","endLine":8,"endColumn":18},{"ruleId":"892","severity":1,"message":"974","line":11,"column":7,"nodeType":"894","messageId":"895","endLine":11,"endColumn":18},{"ruleId":"892","severity":1,"message":"975","line":7,"column":8,"nodeType":"894","messageId":"895","endLine":7,"endColumn":20},{"ruleId":"897","severity":1,"message":"898","line":23,"column":28,"nodeType":"899","messageId":"900","endLine":23,"endColumn":58},{"ruleId":"901","severity":1,"message":"928","line":31,"column":8,"nodeType":"903","endLine":31,"endColumn":10,"suggestions":"976"},{"ruleId":"897","severity":1,"message":"898","line":19,"column":24,"nodeType":"899","messageId":"900","endLine":19,"endColumn":50},{"ruleId":"901","severity":1,"message":"913","line":29,"column":7,"nodeType":"903","endLine":29,"endColumn":9,"suggestions":"977"},{"ruleId":"892","severity":1,"message":"912","line":3,"column":23,"nodeType":"894","messageId":"895","endLine":3,"endColumn":33},{"ruleId":"897","severity":1,"message":"898","line":16,"column":22,"nodeType":"899","messageId":"900","endLine":16,"endColumn":46},{"ruleId":"892","severity":1,"message":"978","line":7,"column":9,"nodeType":"894","messageId":"895","endLine":7,"endColumn":29},{"ruleId":"897","severity":1,"message":"898","line":13,"column":20,"nodeType":"899","messageId":"900","endLine":13,"endColumn":42},{"ruleId":"892","severity":1,"message":"979","line":10,"column":9,"nodeType":"894","messageId":"895","endLine":10,"endColumn":15},{"ruleId":"892","severity":1,"message":"980","line":11,"column":9,"nodeType":"894","messageId":"895","endLine":11,"endColumn":17},{"ruleId":"892","severity":1,"message":"981","line":2,"column":9,"nodeType":"894","messageId":"895","endLine":2,"endColumn":20},{"ruleId":"892","severity":1,"message":"935","line":12,"column":9,"nodeType":"894","messageId":"895","endLine":12,"endColumn":19},{"ruleId":"892","severity":1,"message":"982","line":13,"column":9,"nodeType":"894","messageId":"895","endLine":13,"endColumn":25},{"ruleId":"892","severity":1,"message":"983","line":14,"column":9,"nodeType":"894","messageId":"895","endLine":14,"endColumn":21},{"ruleId":"892","severity":1,"message":"936","line":15,"column":9,"nodeType":"894","messageId":"895","endLine":15,"endColumn":20},{"ruleId":"892","severity":1,"message":"978","line":4,"column":9,"nodeType":"894","messageId":"895","endLine":4,"endColumn":29},{"ruleId":"892","severity":1,"message":"908","line":4,"column":5,"nodeType":"894","messageId":"895","endLine":4,"endColumn":11},{"ruleId":"892","severity":1,"message":"984","line":12,"column":25,"nodeType":"894","messageId":"895","endLine":12,"endColumn":31},{"ruleId":"897","severity":1,"message":"898","line":9,"column":23,"nodeType":"899","messageId":"900","endLine":9,"endColumn":48},{"ruleId":"901","severity":1,"message":"985","line":24,"column":7,"nodeType":"903","endLine":24,"endColumn":9,"suggestions":"986"},{"ruleId":"892","severity":1,"message":"987","line":3,"column":8,"nodeType":"894","messageId":"895","endLine":3,"endColumn":16},{"ruleId":"892","severity":1,"message":"971","line":3,"column":8,"nodeType":"894","messageId":"895","endLine":3,"endColumn":14},{"ruleId":"892","severity":1,"message":"988","line":6,"column":17,"nodeType":"894","messageId":"895","endLine":6,"endColumn":27},{"ruleId":"892","severity":1,"message":"989","line":6,"column":41,"nodeType":"894","messageId":"895","endLine":6,"endColumn":45},{"ruleId":"892","severity":1,"message":"990","line":6,"column":47,"nodeType":"894","messageId":"895","endLine":6,"endColumn":55},{"ruleId":"892","severity":1,"message":"920","line":7,"column":23,"nodeType":"894","messageId":"895","endLine":7,"endColumn":29},{"ruleId":"897","severity":1,"message":"898","line":19,"column":21,"nodeType":"899","messageId":"900","endLine":19,"endColumn":44},{"ruleId":"888","replacedBy":"991"},{"ruleId":"890","replacedBy":"992"},{"ruleId":"949","severity":1,"message":"950","line":16,"column":23,"nodeType":"951","messageId":"900","endLine":16,"endColumn":25},{"ruleId":"892","severity":1,"message":"993","line":6,"column":9,"nodeType":"894","messageId":"895","endLine":6,"endColumn":15},{"ruleId":"892","severity":1,"message":"994","line":17,"column":5,"nodeType":"894","messageId":"895","endLine":17,"endColumn":16},{"ruleId":"897","severity":1,"message":"898","line":48,"column":39,"nodeType":"899","messageId":"900","endLine":48,"endColumn":65},{"ruleId":"892","severity":1,"message":"995","line":9,"column":8,"nodeType":"894","messageId":"895","endLine":9,"endColumn":12},{"ruleId":"892","severity":1,"message":"988","line":2,"column":25,"nodeType":"894","messageId":"895","endLine":2,"endColumn":35},{"ruleId":"892","severity":1,"message":"961","line":3,"column":30,"nodeType":"894","messageId":"895","endLine":3,"endColumn":38},{"ruleId":"892","severity":1,"message":"996","line":7,"column":5,"nodeType":"894","messageId":"895","endLine":7,"endColumn":16},{"ruleId":"949","severity":1,"message":"950","line":51,"column":26,"nodeType":"951","messageId":"900","endLine":51,"endColumn":28},{"ruleId":"901","severity":1,"message":"997","line":59,"column":7,"nodeType":"903","endLine":59,"endColumn":20,"suggestions":"998"},{"ruleId":"892","severity":1,"message":"999","line":3,"column":9,"nodeType":"894","messageId":"895","endLine":3,"endColumn":21},"no-native-reassign",["1000"],"no-negated-in-lhs",["1001"],"@typescript-eslint/no-unused-vars","'blue' is defined but never used.","Identifier","unusedVar","'indigo' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'onGlobalSnackMessage'. Either include it or remove the dependency array.","ArrayExpression",["1002"],"'ListPage' is defined but never used.","React Hook useEffect has a missing dependency: 'zfsModel'. Either include it or remove the dependency array.",["1003"],"'Button' is defined but never used.","'Add' is defined but never used.","React Hook useEffect has a missing dependency: 'storageModel'. Either include it or remove the dependency array.",["1004"],"'Typography' is defined but never used.","React Hook useEffect has a missing dependency: 'model'. Either include it or remove the dependency array.",["1005"],"'OutlinedInput' is defined but never used.","'Delete' is defined but never used.","'GridRenderCellParams' is defined but never used.","React Hook useEffect has a missing dependency: 'usersModel'. Either include it or remove the dependency array.",["1006"],"'Person' is defined but never used.","'layout' is defined but never used.",["1007"],"unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program",{"range":"1008","text":"1009"},["1010"],"React Hook useEffect has missing dependencies: 'model' and 'name'. Either include them or remove the dependency array.",["1011"],["1012"],"React Hook useEffect has a missing dependency: 'networkModel'. Either include it or remove the dependency array.",["1013"],["1014"],"'useEffect' is defined but never used.","'fetchDisks' is defined but never used.","'getUserList' is defined but never used.","'removeFromAutoStart' is assigned a value but never used.","'useClickAway' is defined but never used.","'UserListResponse' is defined but never used.","'ResponseError' is defined but never used.","'DiskInfo' is defined but never used.","'makeStyles' is defined but never used.","'Apps' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'uploadFile'. Either include it or remove the dependency array.",["1015"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'Card' is defined but never used.","'Dns' is defined but never used.",["1000"],["1001"],"'CreateZPoolForm' is defined but never used.","'onDialogOk' is assigned a value but never used.","'response' is assigned a value but never used.","'ApplicationConfig' is defined but never used.","'Vdev' is defined but never used.","'useState' is defined but never used.","'fetchParts' is defined but never used.","'Part' is defined but never used.","'partsModel' is assigned a value but never used.",["1016"],"'clsx' is defined but never used.",["1017"],"'Paper' is defined but never used.",["1018"],["1019"],"'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'AppToolbar' is defined but never used.","'drawerWidth' is assigned a value but never used.","'UserListCard' is defined but never used.",["1020"],["1021"],"'useLocalStorageState' is defined but never used.","'strict' is defined but never used.","'hexToRgb' is defined but never used.","'useInterval' is defined but never used.","'fetchStorageList' is defined but never used.","'getShareList' is defined but never used.","'Remove' is defined but never used.","React Hook useEffect has a missing dependency: 'enqueueSnackbar'. Either include it or remove the dependency array.",["1022"],"'DiskIcon' is defined but never used.","'ButtonBase' is defined but never used.","'Menu' is defined but never used.","'MenuItem' is defined but never used.",["1000"],["1001"],"'Memory' is defined but never used.","'NetworkCell' is defined but never used.","'task' is defined but never used.","'DialogTitle' is defined but never used.","React Hook useEffect has a missing dependency: 'refreshContent'. Either include it or remove the dependency array.",["1023"],"'BaseResponse' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"1024","fix":"1025"},{"desc":"1026","fix":"1027"},{"desc":"1028","fix":"1029"},{"desc":"1030","fix":"1031"},{"desc":"1032","fix":"1033"},{"desc":"1030","fix":"1034"},[-1,0],"",{"desc":"1030","fix":"1035"},{"desc":"1036","fix":"1037"},{"desc":"1036","fix":"1038"},{"desc":"1039","fix":"1040"},{"desc":"1036","fix":"1041"},{"desc":"1042","fix":"1043"},{"desc":"1028","fix":"1044"},{"desc":"1036","fix":"1045"},{"desc":"1036","fix":"1046"},{"desc":"1030","fix":"1047"},{"desc":"1036","fix":"1048"},{"desc":"1030","fix":"1049"},{"desc":"1050","fix":"1051"},{"desc":"1052","fix":"1053"},"Update the dependencies array to be: [onGlobalSnackMessage]",{"range":"1054","text":"1055"},"Update the dependencies array to be: [zfsModel]",{"range":"1056","text":"1057"},"Update the dependencies array to be: [storageModel]",{"range":"1058","text":"1059"},"Update the dependencies array to be: [model]",{"range":"1060","text":"1061"},"Update the dependencies array to be: [usersModel]",{"range":"1062","text":"1063"},{"range":"1064","text":"1061"},{"range":"1065","text":"1061"},"Update the dependencies array to be: [model, name]",{"range":"1066","text":"1067"},{"range":"1068","text":"1067"},"Update the dependencies array to be: [networkModel]",{"range":"1069","text":"1070"},{"range":"1071","text":"1067"},"Update the dependencies array to be: [file, uploadFile]",{"range":"1072","text":"1073"},{"range":"1074","text":"1059"},{"range":"1075","text":"1067"},{"range":"1076","text":"1067"},{"range":"1077","text":"1061"},{"range":"1078","text":"1067"},{"range":"1079","text":"1061"},"Update the dependencies array to be: [enqueueSnackbar]",{"range":"1080","text":"1081"},"Update the dependencies array to be: [currentPath, refreshContent]",{"range":"1082","text":"1083"},[1832,1834],"[onGlobalSnackMessage]",[1354,1356],"[zfsModel]",[1006,1008],"[storageModel]",[698,700],"[model]",[1326,1328],"[usersModel]",[877,879],[485,487],[768,770],"[model, name]",[941,943],[726,728],"[networkModel]",[803,805],[2326,2332],"[file, uploadFile]",[824,826],[762,764],[1034,1036],[929,931],[1490,1492],[1111,1113],[1118,1120],"[enqueueSnackbar]",[1783,1796],"[currentPath, refreshContent]"]