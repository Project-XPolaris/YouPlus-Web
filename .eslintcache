[{"/home/aren/Desktop/YouPlus/ypw/src/index.tsx":"1","/home/aren/Desktop/YouPlus/ypw/src/reportWebVitals.ts":"2","/home/aren/Desktop/YouPlus/ypw/src/App.tsx":"3","/home/aren/Desktop/YouPlus/ypw/src/theme.ts":"4","/home/aren/Desktop/YouPlus/ypw/src/layout/Blank/index.tsx":"5","/home/aren/Desktop/YouPlus/ypw/src/model/layout.ts":"6","/home/aren/Desktop/YouPlus/ypw/src/hooks/ConfirmDialog.ts":"7","/home/aren/Desktop/YouPlus/ypw/src/layout/Base/index.tsx":"8","/home/aren/Desktop/YouPlus/ypw/src/pages/Disks/index.tsx":"9","/home/aren/Desktop/YouPlus/ypw/src/pages/Storage/index.tsx":"10","/home/aren/Desktop/YouPlus/ypw/src/pages/ZFS/index.tsx":"11","/home/aren/Desktop/YouPlus/ypw/src/pages/Parts/index.tsx":"12","/home/aren/Desktop/YouPlus/ypw/src/pages/DashBoard/index.tsx":"13","/home/aren/Desktop/YouPlus/ypw/src/pages/ShareFolder/index.tsx":"14","/home/aren/Desktop/YouPlus/ypw/src/pages/GroupDetail/index.tsx":"15","/home/aren/Desktop/YouPlus/ypw/src/pages/Login/index.tsx":"16","/home/aren/Desktop/YouPlus/ypw/src/pages/Account/index.tsx":"17","/home/aren/Desktop/YouPlus/ypw/src/pages/Groups/index.tsx":"18","/home/aren/Desktop/YouPlus/ypw/src/pages/System/index.tsx":"19","/home/aren/Desktop/YouPlus/ypw/src/pages/PoolDetail/index.tsx":"20","/home/aren/Desktop/YouPlus/ypw/src/pages/Users/index.tsx":"21","/home/aren/Desktop/YouPlus/ypw/src/pages/Apps/index.tsx":"22","/home/aren/Desktop/YouPlus/ypw/src/pages/UserDetail/index.tsx":"23","/home/aren/Desktop/YouPlus/ypw/src/pages/ShareFolderDetail/index.tsx":"24","/home/aren/Desktop/YouPlus/ypw/src/pages/PoolDetail/model.ts":"25","/home/aren/Desktop/YouPlus/ypw/src/pages/Groups/model.ts":"26","/home/aren/Desktop/YouPlus/ypw/src/pages/Groups/style.ts":"27","/home/aren/Desktop/YouPlus/ypw/src/utils/message.ts":"28","/home/aren/Desktop/YouPlus/ypw/src/api/os.ts":"29","/home/aren/Desktop/YouPlus/ypw/src/pages/PoolDetail/style.tsx":"30","/home/aren/Desktop/YouPlus/ypw/src/pages/System/style.tsx":"31","/home/aren/Desktop/YouPlus/ypw/src/api/zfs.ts":"32","/home/aren/Desktop/YouPlus/ypw/src/api/users.ts":"33","/home/aren/Desktop/YouPlus/ypw/src/config.ts":"34","/home/aren/Desktop/YouPlus/ypw/src/layout/Notification/index.tsx":"35","/home/aren/Desktop/YouPlus/ypw/src/utils/request.ts":"36","/home/aren/Desktop/YouPlus/ypw/src/components/NewGroupDialog/index.tsx":"37","/home/aren/Desktop/YouPlus/ypw/src/components/InfoCard/index.tsx":"38","/home/aren/Desktop/YouPlus/ypw/src/components/SwitchSelectDialog/index.tsx":"39","/home/aren/Desktop/YouPlus/ypw/src/components/UserListCard/index.tsx":"40","/home/aren/Desktop/YouPlus/ypw/src/components/UserSelectDialog/index.tsx":"41","/home/aren/Desktop/YouPlus/ypw/src/ws.ts":"42","/home/aren/Desktop/YouPlus/ypw/src/components/UserSelectDialog/style.ts":"43","/home/aren/Desktop/YouPlus/ypw/src/components/UserListCard/style.ts":"44","/home/aren/Desktop/YouPlus/ypw/src/components/SwitchSelectDialog/style.ts":"45","/home/aren/Desktop/YouPlus/ypw/src/components/NewGroupDialog/style.ts":"46","/home/aren/Desktop/YouPlus/ypw/src/components/InfoCard/style.ts":"47","/home/aren/Desktop/YouPlus/ypw/src/pages/ShareFolderDetail/style.ts":"48","/home/aren/Desktop/YouPlus/ypw/src/pages/ShareFolderDetail/model.ts":"49","/home/aren/Desktop/YouPlus/ypw/src/pages/Apps/style.ts":"50","/home/aren/Desktop/YouPlus/ypw/src/hooks/ContextMenu.ts":"51","/home/aren/Desktop/YouPlus/ypw/src/pages/Users/model.ts":"52","/home/aren/Desktop/YouPlus/ypw/src/pages/Users/style.ts":"53","/home/aren/Desktop/YouPlus/ypw/src/api/account.ts":"54","/home/aren/Desktop/YouPlus/ypw/src/model/user.ts":"55","/home/aren/Desktop/YouPlus/ypw/src/pages/Account/style.ts":"56","/home/aren/Desktop/YouPlus/ypw/src/pages/Login/style.ts":"57","/home/aren/Desktop/YouPlus/ypw/src/pages/GroupDetail/model.ts":"58","/home/aren/Desktop/YouPlus/ypw/src/pages/GroupDetail/style.ts":"59","/home/aren/Desktop/YouPlus/ypw/src/pages/UserDetail/model.ts":"60","/home/aren/Desktop/YouPlus/ypw/src/pages/UserDetail/style.ts":"61","/home/aren/Desktop/YouPlus/ypw/src/pages/ShareFolder/model.ts":"62","/home/aren/Desktop/YouPlus/ypw/src/pages/ShareFolder/style.ts":"63","/home/aren/Desktop/YouPlus/ypw/src/pages/Apps/model.ts":"64","/home/aren/Desktop/YouPlus/ypw/src/pages/DashBoard/model.ts":"65","/home/aren/Desktop/YouPlus/ypw/src/pages/DashBoard/style.ts":"66","/home/aren/Desktop/YouPlus/ypw/src/pages/Parts/style.ts":"67","/home/aren/Desktop/YouPlus/ypw/src/pages/Parts/model.ts":"68","/home/aren/Desktop/YouPlus/ypw/src/pages/Storage/model.ts":"69","/home/aren/Desktop/YouPlus/ypw/src/pages/ZFS/style.ts":"70","/home/aren/Desktop/YouPlus/ypw/src/pages/ZFS/model.ts":"71","/home/aren/Desktop/YouPlus/ypw/src/pages/Storage/style.ts":"72","/home/aren/Desktop/YouPlus/ypw/src/pages/Disks/model.ts":"73","/home/aren/Desktop/YouPlus/ypw/src/pages/Disks/style.ts":"74","/home/aren/Desktop/YouPlus/ypw/src/components/Icons/UserIcon.tsx":"75","/home/aren/Desktop/YouPlus/ypw/src/components/Icons/DiskIcon.tsx":"76","/home/aren/Desktop/YouPlus/ypw/src/components/Icons/ShareFolderIcon.tsx":"77","/home/aren/Desktop/YouPlus/ypw/src/components/Icons/StorageIcon.tsx":"78","/home/aren/Desktop/YouPlus/ypw/src/api/share.ts":"79","/home/aren/Desktop/YouPlus/ypw/src/api/auth.ts":"80","/home/aren/Desktop/YouPlus/ypw/src/api/storage.ts":"81","/home/aren/Desktop/YouPlus/ypw/src/api/disks.ts":"82","/home/aren/Desktop/YouPlus/ypw/src/api/apps.ts":"83","/home/aren/Desktop/YouPlus/ypw/src/components/AppCard/index.tsx":"84","/home/aren/Desktop/YouPlus/ypw/src/components/NewUserDialog/index.tsx":"85","/home/aren/Desktop/YouPlus/ypw/src/components/ListPage/index.tsx":"86","/home/aren/Desktop/YouPlus/ypw/src/components/ChangePasswordDialog/index.tsx":"87","/home/aren/Desktop/YouPlus/ypw/src/components/InstallAppDialog/index.tsx":"88","/home/aren/Desktop/YouPlus/ypw/src/components/ImageInfoCard/index.tsx":"89","/home/aren/Desktop/YouPlus/ypw/src/components/ListItemDialog/index.tsx":"90","/home/aren/Desktop/YouPlus/ypw/src/components/CreateZFSPoolDialog/index.tsx":"91","/home/aren/Desktop/YouPlus/ypw/src/layout/Auth/index.tsx":"92","/home/aren/Desktop/YouPlus/ypw/src/components/NewShareDialog/index.tsx":"93","/home/aren/Desktop/YouPlus/ypw/src/components/DiskCard/index.tsx":"94","/home/aren/Desktop/YouPlus/ypw/src/layout/Base/parts/Tool/index.tsx":"95","/home/aren/Desktop/YouPlus/ypw/src/layout/Base/parts/Nav/index.tsx":"96","/home/aren/Desktop/YouPlus/ypw/src/components/ListPage/style.ts":"97","/home/aren/Desktop/YouPlus/ypw/src/components/NewUserDialog/style.ts":"98","/home/aren/Desktop/YouPlus/ypw/src/components/AppCard/style.ts":"99","/home/aren/Desktop/YouPlus/ypw/src/components/ImageInfoCard/style.ts":"100","/home/aren/Desktop/YouPlus/ypw/src/components/NewShareDialog/hook.ts":"101","/home/aren/Desktop/YouPlus/ypw/src/layout/Base/parts/Tool/style.ts":"102","/home/aren/Desktop/YouPlus/ypw/src/components/NewShareDialog/style.ts":"103","/home/aren/Desktop/YouPlus/ypw/src/components/CreateZFSPoolDialog/style.ts":"104","/home/aren/Desktop/YouPlus/ypw/src/components/DiskCard/style.ts":"105","/home/aren/Desktop/YouPlus/ypw/src/components/ListItemDialog/style.ts":"106","/home/aren/Desktop/YouPlus/ypw/src/components/ChangePasswordDialog/style.ts":"107","/home/aren/Desktop/YouPlus/ypw/src/utils/app.ts":"108","/home/aren/Desktop/YouPlus/ypw/src/components/InstallAppDialog/style.ts":"109","/home/aren/Desktop/YouPlus/ypw/src/components/NewShareDialog/step/info/index.tsx":"110","/home/aren/Desktop/YouPlus/ypw/src/components/UserPopup/index.tsx":"111","/home/aren/Desktop/YouPlus/ypw/src/components/NewShareDialog/step/storage/index.tsx":"112","/home/aren/Desktop/YouPlus/ypw/src/components/InstallAppDialog/setp/upload/index.tsx":"113","/home/aren/Desktop/YouPlus/ypw/src/components/InstallAppDialog/setp/confirm/index.tsx":"114","/home/aren/Desktop/YouPlus/ypw/src/layout/Base/parts/Task/index.tsx":"115","/home/aren/Desktop/YouPlus/ypw/src/components/NewShareDialog/step/complete/index.tsx":"116","/home/aren/Desktop/YouPlus/ypw/src/components/DiskSelectField/index.tsx":"117","/home/aren/Desktop/YouPlus/ypw/src/components/NewShareDialog/step/info/style.ts":"118","/home/aren/Desktop/YouPlus/ypw/src/components/NewShareDialog/step/storage/style.ts":"119","/home/aren/Desktop/YouPlus/ypw/src/model/task.ts":"120","/home/aren/Desktop/YouPlus/ypw/src/components/NewShareDialog/step/complete/style.ts":"121","/home/aren/Desktop/YouPlus/ypw/src/components/InstallAppDialog/setp/confirm/style.ts":"122","/home/aren/Desktop/YouPlus/ypw/src/components/InstallAppDialog/setp/upload/style.ts":"123","/home/aren/Desktop/YouPlus/ypw/src/components/UserPopup/style.tsx":"124","/home/aren/Desktop/YouPlus/ypw/src/components/DiskSelectField/style.ts":"125","/home/aren/Desktop/YouPlus/ypw/src/layout/Base/parts/Task/style.tsx":"126","/home/aren/Desktop/YouPlus/ypw/src/api/task.ts":"127","/home/aren/Desktop/YouPlus/ypw/src/components/InstallAppTaskCard/index.tsx":"128","/home/aren/Desktop/YouPlus/ypw/src/components/ValueField/index.tsx":"129","/home/aren/Desktop/YouPlus/ypw/src/components/ValueField/style.ts":"130","/home/aren/Desktop/YouPlus/ypw/src/components/InstallAppTaskCard/style.tsx":"131","/home/aren/Desktop/YouPlus/ypw/src/pages/DiskDetail/index.tsx":"132","/home/aren/Desktop/YouPlus/ypw/src/pages/DiskDetail/model.ts":"133","/home/aren/Desktop/YouPlus/ypw/src/pages/DiskDetail/style.tsx":"134","/home/aren/Desktop/YouPlus/ypw/src/components/IconStatCard/index.tsx":"135","/home/aren/Desktop/YouPlus/ypw/src/components/IconStatCard/style.tsx":"136","/home/aren/Desktop/YouPlus/ypw/src/pages/DashBoard/part/SystemInfoCard/index.tsx":"137","/home/aren/Desktop/YouPlus/ypw/src/pages/DashBoard/part/SystemInfoCard/style.tsx":"138","/home/aren/Desktop/YouPlus/ypw/src/api/system.ts":"139","/home/aren/Desktop/YouPlus/ypw/src/pages/DashBoard/part/CpuMonitorCard/index.tsx":"140","/home/aren/Desktop/YouPlus/ypw/src/pages/DashBoard/part/CpuMonitorCard/style.tsx":"141","/home/aren/Desktop/YouPlus/ypw/src/pages/DashBoard/part/MemoryMonitorCard/index.tsx":"142","/home/aren/Desktop/YouPlus/ypw/src/pages/DashBoard/part/MemoryMonitorCard/style.tsx":"143"},{"size":610,"mtime":1620123804126,"results":"144","hashOfConfig":"145"},{"size":425,"mtime":1614998296846,"results":"146","hashOfConfig":"145"},{"size":544,"mtime":1620123804118,"results":"147","hashOfConfig":"145"},{"size":329,"mtime":1614998296849,"results":"148","hashOfConfig":"145"},{"size":6326,"mtime":1627135440823,"results":"149","hashOfConfig":"145"},{"size":1249,"mtime":1623425950770,"results":"150","hashOfConfig":"145"},{"size":872,"mtime":1618406056539,"results":"151","hashOfConfig":"145"},{"size":1422,"mtime":1620135467271,"results":"152","hashOfConfig":"145"},{"size":2135,"mtime":1627135440827,"results":"153","hashOfConfig":"145"},{"size":3458,"mtime":1618406318905,"results":"154","hashOfConfig":"145"},{"size":7434,"mtime":1620228660268,"results":"155","hashOfConfig":"145"},{"size":1277,"mtime":1615994728785,"results":"156","hashOfConfig":"145"},{"size":3683,"mtime":1627208090333,"results":"157","hashOfConfig":"145"},{"size":2489,"mtime":1618127409825,"results":"158","hashOfConfig":"145"},{"size":2596,"mtime":1618666309661,"results":"159","hashOfConfig":"145"},{"size":3159,"mtime":1623242528955,"results":"160","hashOfConfig":"145"},{"size":1917,"mtime":1617455734543,"results":"161","hashOfConfig":"145"},{"size":2387,"mtime":1618637319805,"results":"162","hashOfConfig":"145"},{"size":3641,"mtime":1623429823560,"results":"163","hashOfConfig":"145"},{"size":1367,"mtime":1620229117424,"results":"164","hashOfConfig":"145"},{"size":3502,"mtime":1626965322087,"results":"165","hashOfConfig":"145"},{"size":2310,"mtime":1627129748137,"results":"166","hashOfConfig":"145"},{"size":3570,"mtime":1627136245262,"results":"167","hashOfConfig":"145"},{"size":11689,"mtime":1626965322087,"results":"168","hashOfConfig":"145"},{"size":562,"mtime":1620228550584,"results":"169","hashOfConfig":"145"},{"size":603,"mtime":1618635476844,"results":"170","hashOfConfig":"145"},{"size":203,"mtime":1618635356861,"results":"171","hashOfConfig":"145"},{"size":725,"mtime":1620536970322,"results":"172","hashOfConfig":"145"},{"size":386,"mtime":1623429680033,"results":"173","hashOfConfig":"145"},{"size":459,"mtime":1620228927926,"results":"174","hashOfConfig":"145"},{"size":360,"mtime":1623428921088,"results":"175","hashOfConfig":"145"},{"size":909,"mtime":1620226953365,"results":"176","hashOfConfig":"145"},{"size":2572,"mtime":1626965322087,"results":"177","hashOfConfig":"145"},{"size":779,"mtime":1627207265274,"results":"178","hashOfConfig":"145"},{"size":1150,"mtime":1620135951492,"results":"179","hashOfConfig":"145"},{"size":1240,"mtime":1627129748137,"results":"180","hashOfConfig":"145"},{"size":1394,"mtime":1618634847936,"results":"181","hashOfConfig":"145"},{"size":971,"mtime":1618153852451,"results":"182","hashOfConfig":"145"},{"size":985,"mtime":1626190707728,"results":"183","hashOfConfig":"145"},{"size":2152,"mtime":1618638719359,"results":"184","hashOfConfig":"145"},{"size":1855,"mtime":1618146892937,"results":"185","hashOfConfig":"145"},{"size":1139,"mtime":1620135626594,"results":"186","hashOfConfig":"145"},{"size":260,"mtime":1618134786875,"results":"187","hashOfConfig":"145"},{"size":731,"mtime":1618148273380,"results":"188","hashOfConfig":"145"},{"size":194,"mtime":1618154120289,"results":"189","hashOfConfig":"145"},{"size":192,"mtime":1618628941576,"results":"190","hashOfConfig":"145"},{"size":465,"mtime":1618134529596,"results":"191","hashOfConfig":"145"},{"size":1205,"mtime":1623426935075,"results":"192","hashOfConfig":"145"},{"size":1240,"mtime":1620544556000,"results":"193","hashOfConfig":"145"},{"size":428,"mtime":1619876493443,"results":"194","hashOfConfig":"145"},{"size":811,"mtime":1617439977423,"results":"195","hashOfConfig":"145"},{"size":1253,"mtime":1623430176401,"results":"196","hashOfConfig":"145"},{"size":534,"mtime":1614998296840,"results":"197","hashOfConfig":"145"},{"size":304,"mtime":1617455718575,"results":"198","hashOfConfig":"145"},{"size":1048,"mtime":1623431166004,"results":"199","hashOfConfig":"145"},{"size":328,"mtime":1617450625164,"results":"200","hashOfConfig":"145"},{"size":1215,"mtime":1614998296846,"results":"201","hashOfConfig":"145"},{"size":1388,"mtime":1618666014991,"results":"202","hashOfConfig":"145"},{"size":317,"mtime":1618666015007,"results":"203","hashOfConfig":"145"},{"size":720,"mtime":1626965322087,"results":"204","hashOfConfig":"145"},{"size":381,"mtime":1626965322087,"results":"205","hashOfConfig":"145"},{"size":990,"mtime":1620544555996,"results":"206","hashOfConfig":"145"},{"size":524,"mtime":1614998296839,"results":"207","hashOfConfig":"145"},{"size":1113,"mtime":1627129748137,"results":"208","hashOfConfig":"145"},{"size":1277,"mtime":1627207265270,"results":"209","hashOfConfig":"145"},{"size":306,"mtime":1619705990764,"results":"210","hashOfConfig":"145"},{"size":342,"mtime":1614998296842,"results":"211","hashOfConfig":"145"},{"size":676,"mtime":1615994728781,"results":"212","hashOfConfig":"145"},{"size":801,"mtime":1623430176409,"results":"213","hashOfConfig":"145"},{"size":632,"mtime":1623427227770,"results":"214","hashOfConfig":"145"},{"size":1046,"mtime":1623415509866,"results":"215","hashOfConfig":"145"},{"size":345,"mtime":1614998296844,"results":"216","hashOfConfig":"145"},{"size":526,"mtime":1623430135373,"results":"217","hashOfConfig":"145"},{"size":479,"mtime":1623423254976,"results":"218","hashOfConfig":"145"},{"size":433,"mtime":1619707818336,"results":"219","hashOfConfig":"145"},{"size":783,"mtime":1619707137346,"results":"220","hashOfConfig":"145"},{"size":502,"mtime":1619707643227,"results":"221","hashOfConfig":"145"},{"size":626,"mtime":1619707213041,"results":"222","hashOfConfig":"145"},{"size":1593,"mtime":1626965322087,"results":"223","hashOfConfig":"145"},{"size":345,"mtime":1614998296817,"results":"224","hashOfConfig":"145"},{"size":690,"mtime":1614998296817,"results":"225","hashOfConfig":"145"},{"size":1282,"mtime":1627135088488,"results":"226","hashOfConfig":"145"},{"size":1711,"mtime":1627129748133,"results":"227","hashOfConfig":"145"},{"size":3710,"mtime":1619872666033,"results":"228","hashOfConfig":"145"},{"size":1956,"mtime":1614998296820,"results":"229","hashOfConfig":"145"},{"size":641,"mtime":1614998296829,"results":"230","hashOfConfig":"145"},{"size":1952,"mtime":1617455487598,"results":"231","hashOfConfig":"145"},{"size":3369,"mtime":1627129748137,"results":"232","hashOfConfig":"145"},{"size":552,"mtime":1619707141762,"results":"233","hashOfConfig":"145"},{"size":2006,"mtime":1614998296832,"results":"234","hashOfConfig":"145"},{"size":2259,"mtime":1623420474286,"results":"235","hashOfConfig":"145"},{"size":648,"mtime":1623242500067,"results":"236","hashOfConfig":"145"},{"size":3834,"mtime":1626965322087,"results":"237","hashOfConfig":"145"},{"size":1049,"mtime":1627135440815,"results":"238","hashOfConfig":"145"},{"size":2499,"mtime":1623433066640,"results":"239","hashOfConfig":"145"},{"size":8425,"mtime":1623428549276,"results":"240","hashOfConfig":"145"},{"size":440,"mtime":1614998296830,"results":"241","hashOfConfig":"145"},{"size":488,"mtime":1623426680460,"results":"242","hashOfConfig":"145"},{"size":562,"mtime":1614998296819,"results":"243","hashOfConfig":"145"},{"size":340,"mtime":1619706600536,"results":"244","hashOfConfig":"145"},{"size":426,"mtime":1626362696073,"results":"245","hashOfConfig":"145"},{"size":498,"mtime":1620092795699,"results":"246","hashOfConfig":"145"},{"size":518,"mtime":1626361327246,"results":"247","hashOfConfig":"145"},{"size":666,"mtime":1623426513800,"results":"248","hashOfConfig":"145"},{"size":503,"mtime":1626965322087,"results":"249","hashOfConfig":"145"},{"size":390,"mtime":1614998296832,"results":"250","hashOfConfig":"145"},{"size":197,"mtime":1617451780712,"results":"251","hashOfConfig":"145"},{"size":195,"mtime":1614998296847,"results":"252","hashOfConfig":"145"},{"size":388,"mtime":1627129748137,"results":"253","hashOfConfig":"145"},{"size":818,"mtime":1614998296821,"results":"254","hashOfConfig":"145"},{"size":920,"mtime":1623431166000,"results":"255","hashOfConfig":"145"},{"size":1831,"mtime":1620537047270,"results":"256","hashOfConfig":"145"},{"size":1484,"mtime":1627129748137,"results":"257","hashOfConfig":"145"},{"size":1299,"mtime":1627129748137,"results":"258","hashOfConfig":"145"},{"size":2453,"mtime":1620560458339,"results":"259","hashOfConfig":"145"},{"size":1051,"mtime":1626965322087,"results":"260","hashOfConfig":"145"},{"size":2949,"mtime":1623420917608,"results":"261","hashOfConfig":"145"},{"size":243,"mtime":1614998296821,"results":"262","hashOfConfig":"145"},{"size":317,"mtime":1614998296822,"results":"263","hashOfConfig":"145"},{"size":453,"mtime":1623430109849,"results":"264","hashOfConfig":"145"},{"size":271,"mtime":1614998296824,"results":"265","hashOfConfig":"145"},{"size":193,"mtime":1627129748137,"results":"266","hashOfConfig":"145"},{"size":519,"mtime":1627129748137,"results":"267","hashOfConfig":"145"},{"size":507,"mtime":1620558967519,"results":"268","hashOfConfig":"145"},{"size":310,"mtime":1623420883788,"results":"269","hashOfConfig":"145"},{"size":763,"mtime":1620560554173,"results":"270","hashOfConfig":"145"},{"size":679,"mtime":1620123314608,"results":"271","hashOfConfig":"145"},{"size":1324,"mtime":1620124220861,"results":"272","hashOfConfig":"145"},{"size":657,"mtime":1614998296827,"results":"273","hashOfConfig":"145"},{"size":361,"mtime":1614998296827,"results":"274","hashOfConfig":"145"},{"size":288,"mtime":1620120030721,"results":"275","hashOfConfig":"145"},{"size":4607,"mtime":1627137048843,"results":"276","hashOfConfig":"145"},{"size":582,"mtime":1627136081780,"results":"277","hashOfConfig":"145"},{"size":455,"mtime":1627136367701,"results":"278","hashOfConfig":"145"},{"size":1078,"mtime":1627222813951,"results":"279","hashOfConfig":"145"},{"size":719,"mtime":1627222890420,"results":"280","hashOfConfig":"145"},{"size":2380,"mtime":1627201710652,"results":"281","hashOfConfig":"145"},{"size":270,"mtime":1627201085015,"results":"282","hashOfConfig":"145"},{"size":2733,"mtime":1627207265278,"results":"283","hashOfConfig":"145"},{"size":3787,"mtime":1627210286290,"results":"284","hashOfConfig":"145"},{"size":791,"mtime":1627208601633,"results":"285","hashOfConfig":"145"},{"size":2724,"mtime":1627207946821,"results":"286","hashOfConfig":"145"},{"size":838,"mtime":1627223146106,"results":"287","hashOfConfig":"145"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},"7mskyw",{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"290"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"290"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"290"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"290"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"290"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"290"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"290"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"290"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"321","usedDeprecatedRules":"290"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"290"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"290"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"290"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"290"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336","usedDeprecatedRules":"290"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"290"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"290"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345","usedDeprecatedRules":"290"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"290"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351","usedDeprecatedRules":"290"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354","usedDeprecatedRules":"290"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357","usedDeprecatedRules":"290"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366","usedDeprecatedRules":"290"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"377","usedDeprecatedRules":"290"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"382","usedDeprecatedRules":"290"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"385","usedDeprecatedRules":"290"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"394","usedDeprecatedRules":"290"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"425","usedDeprecatedRules":"290"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"432","usedDeprecatedRules":"290"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"437","usedDeprecatedRules":"290"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"442","usedDeprecatedRules":"290"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"447","usedDeprecatedRules":"290"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"450","usedDeprecatedRules":"290"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"457","usedDeprecatedRules":"290"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"460","usedDeprecatedRules":"290"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"465","usedDeprecatedRules":"290"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"470","usedDeprecatedRules":"290"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"475"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"475"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"475"},{"filePath":"482","messages":"483","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"484","usedDeprecatedRules":"290"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"491","messages":"492","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"493","messages":"494","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"495","usedDeprecatedRules":"290"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"502","messages":"503","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"504","usedDeprecatedRules":"290"},{"filePath":"505","messages":"506","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"507","usedDeprecatedRules":"475"},{"filePath":"508","messages":"509","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"510","usedDeprecatedRules":"290"},{"filePath":"511","messages":"512","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"513","usedDeprecatedRules":"290"},{"filePath":"514","messages":"515","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"516","messages":"517","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"518","usedDeprecatedRules":"290"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"521","usedDeprecatedRules":"290"},{"filePath":"522","messages":"523","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"524","usedDeprecatedRules":"290"},{"filePath":"525","messages":"526","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"527","usedDeprecatedRules":"290"},{"filePath":"528","messages":"529","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"530","messages":"531","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"532","messages":"533","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"534","messages":"535","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"475"},{"filePath":"536","messages":"537","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"538","messages":"539","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"540","messages":"541","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"542","messages":"543","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"544","messages":"545","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"546","messages":"547","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"548","messages":"549","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"550","messages":"551","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"552","messages":"553","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"554","messages":"555","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"556","messages":"557","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"558","usedDeprecatedRules":"290"},{"filePath":"559","messages":"560","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"561","usedDeprecatedRules":"290"},{"filePath":"562","messages":"563","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"564","messages":"565","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"566","usedDeprecatedRules":"290"},{"filePath":"567","messages":"568","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"569","usedDeprecatedRules":"290"},{"filePath":"570","messages":"571","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"572","messages":"573","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"574","usedDeprecatedRules":"290"},{"filePath":"575","messages":"576","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"577","messages":"578","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"579","messages":"580","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"581","messages":"582","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"583","messages":"584","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"585","messages":"586","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"587","messages":"588","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"589","messages":"590","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"591","messages":"592","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"593","messages":"594","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"595","messages":"596","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"597","messages":"598","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"599","messages":"600","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"601","messages":"602","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"603","messages":"604","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"605","usedDeprecatedRules":"290"},{"filePath":"606","messages":"607","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"608","messages":"609","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"610","messages":"611","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"612","messages":"613","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"614","messages":"615","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"616","messages":"617","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"618","messages":"619","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"620","messages":"621","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"622","usedDeprecatedRules":"290"},{"filePath":"623","messages":"624","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"625","messages":"626","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"627","usedDeprecatedRules":"290"},{"filePath":"628","messages":"629","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/aren/Desktop/YouPlus/ypw/src/index.tsx",[],["630","631"],"/home/aren/Desktop/YouPlus/ypw/src/reportWebVitals.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/App.tsx",["632"],"import React from 'react';\nimport './App.css';\nimport {SnackbarProvider} from \"notistack\";\nimport BlankLayout from \"./layout/Blank\";\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport theme from \"./theme\";\nimport dayjs from \"dayjs\";\n\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <ThemeProvider theme={theme}>\n                <SnackbarProvider maxSnack={3}>\n                    <BlankLayout/>\n                </SnackbarProvider>\n            </ThemeProvider>\n        </div>\n    );\n}\n\nexport default App;\n","/home/aren/Desktop/YouPlus/ypw/src/theme.ts",["633","634"],"import {createMuiTheme} from '@material-ui/core/styles';\nimport {blue, green, indigo, yellow} from \"@material-ui/core/colors\";\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: green[700],\n        },\n        secondary: {\n            main: yellow[800],\n        },\n\n    },\n});\nexport default theme","/home/aren/Desktop/YouPlus/ypw/src/layout/Blank/index.tsx",["635","636"],"import {HashRouter as Router, Route, Switch} from \"react-router-dom\";\nimport ZFSPage from \"../../pages/ZFS\";\nimport StoragePage from \"../../pages/Storage\";\nimport PartsPage from \"../../pages/Parts\";\nimport DisksPage from \"../../pages/Disks\";\nimport UsersPage from \"../../pages/Users\";\nimport ShareFolder from \"../../pages/ShareFolder\";\nimport AppsPage from \"../../pages/Apps\";\nimport * as React from \"react\";\nimport BaseLayout from \"../Base\";\nimport LoginPage from \"../../pages/Login\";\nimport AccountPage from \"../../pages/Account\";\nimport DashboardPage from \"../../pages/DashBoard\";\nimport ShareFolderDetail from \"../../pages/ShareFolderDetail\";\nimport useLayoutModel from \"../../model/layout\";\nimport {Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle} from \"@material-ui/core\";\nimport GroupsPage from \"../../pages/Groups\";\nimport GroupDetailPage from \"../../pages/GroupDetail\";\nimport PoolDetailPage from \"../../pages/PoolDetail\";\nimport {OptionsObject, SnackbarMessage, useSnackbar} from \"notistack\";\nimport {useEffect} from \"react\";\nimport SystemPage from \"../../pages/System\";\nimport UserDetail from \"../../pages/UserDetail\";\nimport DiskDetailPage from \"../../pages/DiskDetail\";\n\nexport interface BlankLayoutPropsType {\n\n}\n\nconst BlankLayout = ({}: BlankLayoutPropsType) => {\n    const layoutModel = useLayoutModel()\n    const {enqueueSnackbar} = useSnackbar()\n    const onGlobalSnackMessage = (e: any) => {\n        const {message, options}: { message: SnackbarMessage, options?: OptionsObject } = e.detail\n        enqueueSnackbar(message, options)\n    }\n    useEffect(() => {\n        document.addEventListener(\"globalMessage\", onGlobalSnackMessage)\n    }, [])\n    return (\n        <div>\n            <Dialog open={layoutModel.confirmDialogController.open}\n                    onClose={layoutModel.confirmDialogController.onClose}>\n                <DialogTitle>\n                    {layoutModel.confirmDialogController.title}\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {layoutModel.confirmDialogController.message}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    {\n                        layoutModel.confirmDialogController.onOk &&\n                        <Button onClick={() => {\n                            if (layoutModel.confirmDialogController.onOk) {\n                                layoutModel.confirmDialogController.onOk()\n                            }\n                            layoutModel.confirmDialogController.onClose()\n                        }}>\n                            OK\n                        </Button>\n                    }\n                    {\n                        <Button onClick={layoutModel.confirmDialogController.onClose}>\n                            Cancel\n                        </Button>\n                    }\n                </DialogActions>\n            </Dialog>\n            <Router>\n                <Switch>\n                    <Route path=\"/zfs\">\n                        <BaseLayout>\n                            <ZFSPage/>\n                        </BaseLayout>\n                    </Route>\n                    <Route path=\"/pool/:name/info\">\n                        <BaseLayout>\n                            <PoolDetailPage/>\n                        </BaseLayout>\n                    </Route>\n                    <Route path=\"/storage\">\n                        <BaseLayout>\n                            <StoragePage/>\n                        </BaseLayout>\n                    </Route>\n                    <Route path=\"/parts\">\n                        <BaseLayout>\n                            <PartsPage/>\n                        </BaseLayout>\n                    </Route>\n                    <Route path=\"/disks\">\n                        <BaseLayout>\n                            <DisksPage/>\n                        </BaseLayout>\n                    </Route>\n                    <Route path=\"/disk/:name\">\n                        <BaseLayout>\n                            <DiskDetailPage/>\n                        </BaseLayout>\n                    </Route>\n                    <Route path=\"/users\">\n                        <BaseLayout>\n                            <UsersPage/>\n                        </BaseLayout>\n                    </Route>\n                    <Route path=\"/user/:name\">\n                        <BaseLayout>\n                            <UserDetail/>\n                        </BaseLayout>\n                    </Route>\n                    <Route path=\"/folders\">\n                        <BaseLayout>\n                            <ShareFolder/>\n                        </BaseLayout>\n                    </Route>\n                    <Route path=\"/folder/:name/info\">\n                        <BaseLayout>\n                            <ShareFolderDetail/>\n                        </BaseLayout>\n                    </Route>\n                    <Route path=\"/my/account\">\n                        <BaseLayout>\n                            <AccountPage/>\n                        </BaseLayout>\n                    </Route>\n                    <Route path=\"/apps\">\n                        <BaseLayout>\n                            <AppsPage/>\n                        </BaseLayout>\n                    </Route>\n                    <Route path=\"/groups\">\n                        <BaseLayout>\n                            <GroupsPage/>\n                        </BaseLayout>\n                    </Route>\n                    <Route path=\"/group/:name/info\">\n                        <BaseLayout>\n                            <GroupDetailPage/>\n                        </BaseLayout>\n                    </Route>\n                    <Route path=\"/home\">\n                        <BaseLayout>\n                            <DashboardPage/>\n                        </BaseLayout>\n                    </Route>\n                    <Route path=\"/system\">\n                        <BaseLayout>\n                            <SystemPage/>\n                        </BaseLayout>\n                    </Route>\n                    <Route path=\"/\">\n                        <LoginPage/>\n                    </Route>\n                </Switch>\n            </Router>\n        </div>\n    )\n}\n\nexport default BlankLayout;\n","/home/aren/Desktop/YouPlus/ypw/src/model/layout.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/hooks/ConfirmDialog.ts",["637"],"import {useEffect, useState} from \"react\";\n\nexport interface ConfirmDialogController {\n    message?: string\n    open: boolean\n    openDialog: (option: ConfirmOption) => void\n    onClose: () => void\n    onOk?: () => void\n    title: string\n}\n\nexport interface ConfirmOption {\n    message: string\n    onOk?: () => void\n    title?: string\n}\n\nexport const useConfirmDialog = (): ConfirmDialogController => {\n    const [open, setOpen] = useState<boolean>(false)\n    const [option, setOption] = useState<ConfirmOption | undefined>()\n    const openDialog = (option: ConfirmOption) => {\n        setOption(option)\n        setOpen(true)\n    }\n    const onClose = () => {\n        setOpen(false)\n    }\n\n    return {\n        message: option?.message,\n        open: open,\n        openDialog,\n        onClose,\n        onOk: option?.onOk,\n        title: option?.title ?? \"Confirm\"\n    }\n}\n","/home/aren/Desktop/YouPlus/ypw/src/layout/Base/index.tsx",["638"],"import * as React from 'react';\nimport {createStyles, makeStyles, Theme} from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport AppNavigation from \"./parts/Nav\";\nimport AuthLayout from \"../Auth\";\nimport AppToolbar from \"./parts/Tool\";\nimport Notification from \"../Notification\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            display: 'flex',\n        },\n        appBar: {\n            zIndex: theme.zIndex.drawer + 1,\n        },\n        content: {\n            flexGrow: 1,\n            minHeight: \"100vh\",\n            paddingTop: theme.spacing(3),\n            backgroundColor: \"#EEEEEE\"\n        },\n    }),\n);\n\nconst BaseLayout = ({children}: { children: any }) => {\n    const classes = useStyles();\n    return (\n        <AuthLayout>\n            <Notification />\n            <div className={classes.root}>\n                <CssBaseline/>\n                <AppBar position=\"fixed\" className={classes.appBar}>\n                  <AppToolbar />\n                </AppBar>\n\n                <AppNavigation/>\n                <main className={classes.content}>\n                    <Toolbar/>\n                    {children}\n                </main>\n            </div>\n        </AuthLayout>\n    );\n};\nexport default BaseLayout\n","/home/aren/Desktop/YouPlus/ypw/src/pages/Disks/index.tsx",["639","640","641","642","643","644","645","646","647"],"import React, {useEffect} from \"react\";\nimport useDisksModel from \"./model\";\nimport {Grid, Typography} from \"@material-ui/core\";\nimport useStyles from \"./style\";\nimport DiskCard from \"../../components/DiskCard\";\nimport {useHistory} from \"react-router-dom\";\n\nexport interface DisksPagePropsType {\n\n}\n\nconst DisksPage = ({}: DisksPagePropsType) => {\n    const classes = useStyles()\n    const model = useDisksModel()\n    const history = useHistory()\n    useEffect(() => {\n        model.initData()\n    },[])\n    return (\n        <div className={classes.root}>\n            <Typography variant={\"h4\"} className={classes.title}>\n                Disks\n            </Typography>\n            <Grid container className={classes.grid}>\n                {\n                    model.disks.map(it => {\n                        return (\n                            <Grid item xl={2} lg={3} md={3} sm={6} xs={12} className={classes.item}>\n                                <DiskCard\n                                    disk={it}\n                                    onClick={() => {\n                                        history.push(`/disk/${it.name}`)\n                                    }}\n                                />\n                            </Grid>\n                        )\n                    })\n                }\n            </Grid>\n\n            {/*<List>*/}\n            {/*    {*/}\n            {/*        model.disks.map(it => {*/}\n            {/*            return (*/}\n            {/*                <ListItem key={it.name} button>*/}\n            {/*                    <ListItemAvatar>*/}\n            {/*                        <Avatar className={classes.avatar}>*/}\n            {/*                            <Storage />*/}\n            {/*                        </Avatar>*/}\n            {/*                    </ListItemAvatar>*/}\n            {/*                    <ListItemText primary={it.name} secondary={it.model}/>*/}\n            {/*                </ListItem>*/}\n            {/*            )*/}\n            {/*        })*/}\n            {/*    }*/}\n            {/*</List>*/}\n        </div>\n    )\n}\n\nexport default DisksPage;\n","/home/aren/Desktop/YouPlus/ypw/src/pages/Storage/index.tsx",["648","649"],"import React, {useEffect, useState} from \"react\";\nimport ListPage from \"../../components/ListPage\";\nimport useStorageModel from \"./model\";\nimport {\n    Avatar,\n    IconButton,\n    List,\n    ListItem,\n    ListItemAvatar,\n    ListItemSecondaryAction,\n    ListItemText\n} from \"@material-ui/core\";\nimport {Archive, Delete} from \"@material-ui/icons\";\nimport useStyles from \"./style\";\nimport ListItemDialog from \"../../components/ListItemDialog\";\nimport {Storage} from \"../../api/storage\";\nimport useLayoutModel from \"../../model/layout\";\nimport {useSnackbar} from \"notistack\";\n\nexport interface StoragePagePropsType {\n\n}\n\nconst StoragePage = ({}: StoragePagePropsType) => {\n    const storageModel = useStorageModel()\n    const layoutModel = useLayoutModel()\n    const classes = useStyles()\n    useEffect(() => {\n        storageModel.init()\n    }, [])\n    const { enqueueSnackbar } = useSnackbar();\n    const [contextStorage, setContextStorage] = useState<Storage>()\n    const switchDeleteConfirmDialog = layoutModel.getDialogSwitchHandler('deleteStorageConfirm')\n    const openDeleteDialog = (storage: Storage) => {\n        setContextStorage(storage)\n        switchDeleteConfirmDialog()\n    }\n    return (\n        <div>\n\n            <ListPage\n                title={\"Storages\"}\n                actions={<></>}\n            >\n                <>\n                <ListItemDialog\n                    primary={contextStorage?.id ?? \"unknown\"}\n                    icon={<Archive/>}\n                    onClose={switchDeleteConfirmDialog}\n                    title={\"Delete\"}\n                    onOk={async () => {\n                        if (contextStorage) {\n                            await storageModel.remove(contextStorage?.id)\n                            enqueueSnackbar(`storage ${contextStorage?.id} removed`,{variant:\"success\"})\n                        }\n                        switchDeleteConfirmDialog()\n                    }}\n                    open={layoutModel.getDialogOpen('deleteStorageConfirm')}\n                    secondary={contextStorage?.type ?? \"unknown\"}\n                    text={\"Remove action will remove all SHARE FOLDER in this storage!\"}\n                />\n                    <List className={classes.list}>\n                        {\n                            storageModel.storages.map(storage => {\n                                return (\n                                    <ListItem key={storage.id} button>\n                                        <ListItemAvatar>\n                                            <Avatar className={classes.avatar}>\n                                                <Archive/>\n                                            </Avatar>\n                                        </ListItemAvatar>\n                                        <ListItemText primary={storage.id} secondary={storage.type}/>\n                                        <ListItemSecondaryAction>\n                                            <IconButton onClick={() => openDeleteDialog(storage)}>\n                                                <Delete/>\n                                            </IconButton>\n                                        </ListItemSecondaryAction>\n                                    </ListItem>\n                                )\n                            })\n                        }\n                    </List>\n                </>\n            </ListPage>\n        </div>\n    )\n}\n\nexport default StoragePage;\n","/home/aren/Desktop/YouPlus/ypw/src/pages/ZFS/index.tsx",["650","651"],"import React, {useEffect, useState} from \"react\";\nimport {\n    Avatar,\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    IconButton,\n    List,\n    ListItem,\n    ListItemAvatar,\n    ListItemSecondaryAction,\n    ListItemText,\n    Menu,\n    MenuItem\n} from \"@material-ui/core\";\nimport useZFSModel from \"./model\";\nimport {Add, Delete, Dns, MoreVert} from \"@material-ui/icons\";\nimport ListPage from \"../../components/ListPage\";\nimport CreateZFSPoolDialog from \"../../components/CreateZFSPoolDialog\";\nimport useStyles from \"./style\";\nimport useLayoutModel from \"../../model/layout\";\nimport ListItemDialog from \"../../components/ListItemDialog\";\nimport {ZFSPool} from \"../../api/zfs\";\nimport useStorageModel from \"../Storage/model\";\nimport {useSnackbar} from \"notistack\";\nimport {useHistory} from \"react-router-dom\";\n\nexport interface ZFSPagePropsType {\n\n}\n\nconst ZFSPage = ({}: ZFSPagePropsType) => {\n    const zfsModel = useZFSModel()\n    const layoutModel = useLayoutModel()\n    const storageModel = useStorageModel()\n    const history = useHistory()\n    const classes = useStyles()\n    useEffect(() => {\n        zfsModel.refresh()\n    },[])\n    const [moreMenuEl, setMoreMenuEl] = React.useState(null);\n    const createPoolDialogSwitchHandler = layoutModel.getDialogSwitchHandler(\"newZFSPool\")\n    const [contextPool, setContextPool] = useState<ZFSPool>()\n    const [deleteConfirmDialog, setDeleteConfirmDialog] = useState<{\n        name: string,\n        open: boolean\n    }>({name: \"\", open: false})\n    const {enqueueSnackbar} = useSnackbar();\n\n    const openDeleteConfirm = (name: string) => {\n        setDeleteConfirmDialog({\n            name,\n            open: true\n        })\n    }\n    const closeDeleteConfirm = () => {\n        setDeleteConfirmDialog({\n            ...deleteConfirmDialog,\n            open: false\n        })\n    }\n    const onRemoveHandler = async () => {\n        if (deleteConfirmDialog?.name) {\n            await zfsModel.removePool(deleteConfirmDialog.name)\n            enqueueSnackbar(\"delete success\", {variant: 'success'})\n            closeDeleteConfirm()\n        }\n    }\n    const handleMoreMenuClick = (event: any) => {\n        setMoreMenuEl(event.currentTarget);\n    };\n    const handleMoreMenuClose = () => {\n        setMoreMenuEl(null);\n    };\n    const asStorageSwitchHandler = layoutModel.getDialogSwitchHandler('poolAsStorageDialog')\n    return (\n        <ListPage\n            title={\"Pools\"}\n            actions={\n                <>\n                    <Button\n                        variant={\"contained\"}\n                        color={'secondary'}\n                        startIcon={<Add/>}\n                        onClick={createPoolDialogSwitchHandler}\n                    >New pool</Button>\n                </>\n            }\n        >\n            <>\n                <Menu\n                    anchorEl={moreMenuEl}\n                    keepMounted\n                    open={Boolean(moreMenuEl)}\n                    onClose={handleMoreMenuClose}\n                >\n                    <MenuItem onClick={() => {\n                        asStorageSwitchHandler()\n                        handleMoreMenuClose()\n                    }}>Use as storage</MenuItem>\n\n                </Menu>\n                <ListItemDialog\n                    primary={contextPool?.name ?? \"unknown\"}\n                    icon={<Dns/>}\n                    onClose={asStorageSwitchHandler}\n                    title={\"As storage\"}\n                    onOk={async () => {\n                        await storageModel.addStorage(`/${contextPool?.name}`, \"ZFSPool\")\n                        asStorageSwitchHandler()\n                        enqueueSnackbar(\"storage created\", {\n                            variant: 'success'\n                        })\n                    }}\n                    text={\"Use this pool to create new storage\"}\n                    open={layoutModel.getDialogOpen('poolAsStorageDialog')}\n                />\n                <CreateZFSPoolDialog\n                    open={layoutModel.getDialogOpen(\"newZFSPool\")}\n                    onClose={createPoolDialogSwitchHandler}\n                    onOk={async (form) => {\n                        await zfsModel.createPool({\n                            name: form.name,\n                            disks: form.disks.map(it => `/dev/${it}`)\n                        })\n                        enqueueSnackbar(\"create pool success\", {\n                            variant: 'success'\n                        })\n                        createPoolDialogSwitchHandler()\n                    }}\n                />\n                <Dialog open={Boolean(deleteConfirmDialog.open)} maxWidth={\"xl\"}>\n                    <DialogTitle>\n                        Remove\n                    </DialogTitle>\n                    <DialogContent className={classes.deleteDialogContent}>\n                        <DialogContentText>\n                            ALL DATA in pool will deleted,please confirm!\n                        </DialogContentText>\n                        <ListItem className={classes.deleteDialogItem}>\n                            <ListItemAvatar>\n                                <Avatar>\n                                    <Dns/>\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText primary={deleteConfirmDialog.name}/>\n                        </ListItem>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color={\"secondary\"} onClick={closeDeleteConfirm}>\n                            Cancel\n                        </Button>\n                        <Button color={\"secondary\"} onClick={onRemoveHandler}>\n                            Delete\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <List className={classes.list}>\n                    {\n                        zfsModel.pools.map(pool => {\n                            return (\n                                <ListItem key={pool.name} button onClick={() => history.push(`/pool/${pool.name}/info`)}>\n                                    <ListItemAvatar>\n                                        <Avatar className={classes.avatar}>\n                                            <Dns/>\n                                        </Avatar>\n                                    </ListItemAvatar>\n                                    <ListItemText primary={pool.name}/>\n                                    <ListItemSecondaryAction>\n\n                                        <IconButton>\n                                            <Delete onClick={() => openDeleteConfirm(pool.name)}/>\n                                        </IconButton>\n                                        <IconButton onClick={(e) => {\n                                            setContextPool(pool)\n                                            handleMoreMenuClick(e)\n                                        }}>\n                                            <MoreVert/>\n                                        </IconButton>\n                                    </ListItemSecondaryAction>\n                                </ListItem>\n                            )\n                        })\n                    }\n\n                </List>\n            </>\n        </ListPage>\n    )\n}\n\nexport default ZFSPage;\n","/home/aren/Desktop/YouPlus/ypw/src/pages/Parts/index.tsx",["652","653","654"],"﻿import React, {useEffect} from \"react\";\nimport usePartsPageModel from \"./model\";\nimport {Avatar, List, ListItem, ListItemAvatar, ListItemText, Typography} from \"@material-ui/core\";\nimport {Inbox} from \"@material-ui/icons\";\nimport useStyles from \"./style\";\n\nexport interface PartsPagePropsType {\n\n}\n\nconst PartsPage = ({}: PartsPagePropsType) => {\n    const model = usePartsPageModel()\n    const classes = useStyles()\n    useEffect(() => {\n        model.initData()\n    },[])\n    return (\n        <div>\n            <Typography variant={\"h4\"} className={classes.title}>\n                Parts\n            </Typography>\n            <List>\n            {\n                model.parts.map(part => {\n                    return (\n                        <ListItem key={part.name} button>\n                            <ListItemAvatar>\n                                <Avatar className={classes.avatar}>\n                                    <Inbox />\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText primary={part.name} secondary={part.fs_type}/>\n                        </ListItem>\n                    )\n                })\n            }\n            </List>\n        </div>\n    )\n}\n\nexport default PartsPage;\n","/home/aren/Desktop/YouPlus/ypw/src/pages/DashBoard/index.tsx",["655","656"],"import {ReactElement, useEffect} from \"react\";\nimport useStyles from \"./style\";\nimport {Grid} from \"@material-ui/core\";\nimport useDashboardModel from \"./model\";\nimport DiskIcon from \"../../components/Icons/DiskIcon\";\nimport {useInterval} from \"ahooks\";\nimport IconStatCard from \"../../components/IconStatCard\";\nimport {Apps, Archive, Dns, Folder, Person} from \"@material-ui/icons\";\nimport SystemInfoCard from \"./part/SystemInfoCard\";\nimport CpuMonitorCard from \"./part/CpuMonitorCard\";\nimport MemoryMonitorCard from \"./part/MemoryMonitorCard\";\n\nexport interface DashboardPagePropsType {\n\n}\n\nconst DashboardPage = ({}: DashboardPagePropsType): ReactElement => {\n    const classes = useStyles()\n    const model = useDashboardModel()\n    useInterval(() => {\n        model.initData()\n        model.refreshMonitorData()\n    },4000,{immediate:true})\n    useEffect(() => {\n        model.refreshSystemInfo()\n    },[])\n    return (\n        <div className={classes.root}>\n            <Grid container spacing={2}>\n                <Grid item xs={6} sm={3} md={4} lg={2} xl={2}>\n                    <IconStatCard\n                        label={\"Disks\"}\n                        value={`${model.deviceInfo?.diskCount ?? 0} Disks`}\n                        icon={<DiskIcon />}\n                    />\n                </Grid>\n                <Grid item xs={6} sm={3} md={4} lg={2} xl={2}>\n                    <IconStatCard\n                        label={\"Storage\"}\n                        value={`${model.deviceInfo?.storageCount ?? 0} Storage`}\n                        icon={<Archive />}\n                    />\n                </Grid>\n                <Grid item xs={6} sm={3} md={4} lg={2} xl={2}>\n                    <IconStatCard\n                        label={\"Share Folder\"}\n                        value={`${model.deviceInfo?.shareFolderCount ?? 0} Share folders`}\n                        icon={<Folder />}\n                    />\n                </Grid>\n                <Grid item xs={6} sm={3} md={4} lg={2} xl={2}>\n                    <IconStatCard\n                        label={\"Users\"}\n                        value={`${model.deviceInfo?.userCount ?? 0} Users`}\n                        icon={<Person />}\n                    />\n                </Grid>\n                <Grid item xs={6} sm={3} md={4} lg={2} xl={2}>\n                    <IconStatCard\n                        label={\"ZFS pool\"}\n                        value={`${model.deviceInfo?.zfsCount ?? 0} Pool`}\n                        icon={<Dns />}\n                    />\n                </Grid>\n                <Grid item xs={6} sm={3} md={4} lg={2} xl={2}>\n                    <IconStatCard\n                        label={\"Apps\"}\n                        value={`${model.deviceInfo?.appCount ?? 0} apps`}\n                        icon={<Apps />}\n                    />\n                </Grid>\n                {\n                    model.systemInfo &&\n                    <Grid item xs={12} sm={12} md={12} lg={4} xl={3}>\n                        <SystemInfoCard systemInfo={model.systemInfo} />\n                    </Grid>\n                }\n                {\n                    model.systemMonitor &&\n                    <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\n                        <CpuMonitorCard cpu={model.systemMonitor.monitor.cpu} />\n                    </Grid>\n                }\n                {\n                    model.systemMonitor &&\n                    <Grid item xs={12} sm={12} md={6} lg={4} xl={3}>\n                        <MemoryMonitorCard memory={model.systemMonitor.monitor.memory} />\n                    </Grid>\n                }\n            </Grid>\n        </div>\n    )\n}\n\nexport default DashboardPage\n","/home/aren/Desktop/YouPlus/ypw/src/pages/ShareFolder/index.tsx",["657","658","659","660"],"import React, {useEffect} from \"react\";\nimport useStyles from \"./style\";\nimport useShareFoldersModel from \"./model\";\nimport {Avatar, Button, List, ListItem, ListItemAvatar, ListItemText, Typography} from \"@material-ui/core\";\nimport {Add, Folder, Person} from \"@material-ui/icons\";\nimport NewShareDialog from \"../../components/NewShareDialog\";\nimport useLayoutModel from \"../../model/layout\";\nimport layout from \"../../model/layout\";\nimport {useHistory} from \"react-router-dom\";\n\nexport interface ShareFolderPropsType {\n\n}\n\nconst ShareFolder = ({}: ShareFolderPropsType) => {\n    const classes = useStyles()\n    const model = useShareFoldersModel()\n    const history = useHistory()\n    useEffect(() => {\n        model.initData()\n    }, [])\n    const layoutModel = useLayoutModel()\n    const newShareSwitchHandler = layoutModel.getDialogSwitchHandler(\"newShare\")\n    return (\n        <div>\n            <Typography variant={\"h4\"} className={classes.title}>\n                Folders\n            </Typography>\n            {\n                layoutModel.getDialogOpen(\"newShare\") &&\n                <NewShareDialog\n                    open={true}\n                    onClose={newShareSwitchHandler}\n                    onCreateShare={async (data) => {\n                        await model.createShare(data)\n                        newShareSwitchHandler()\n                    }}\n                />\n            }\n\n            <div className={classes.actions}>\n                <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    startIcon={<Add />}\n                    onClick={newShareSwitchHandler}\n                >\n                    New share folder\n                </Button>\n            </div>\n            <List>\n                {\n                    model.folders.map(it => {\n                        return (\n                            <ListItem key={it.name} button onClick={() => history.push(`/folder/${it.name}/info`)}>\n                                <ListItemAvatar>\n                                    <Avatar className={classes.avatar}>\n                                        <Folder />\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText primary={it.name}/>\n                            </ListItem>\n                        )\n                    })\n                }\n\n            </List>\n        </div>\n    )\n}\n\nexport default ShareFolder;\n","/home/aren/Desktop/YouPlus/ypw/src/pages/GroupDetail/index.tsx",["661","662","663"],"import {ReactElement, useEffect} from \"react\";\nimport useStyles from \"./style\";\nimport useGroupDetailModel from \"./model\";\nimport {useHistory, useParams} from \"react-router-dom\";\nimport {Button, Paper, Typography} from \"@material-ui/core\";\nimport UserListCard from \"../../components/UserListCard\";\nimport UserSelectDialog from \"../../components/UserSelectDialog\";\nimport useLayoutModel from \"../../model/layout\";\nimport {Delete} from \"@material-ui/icons\";\n\nexport interface GroupDetailPagePropsType {\n\n}\n\nconst GroupDetailPage = ({}: GroupDetailPagePropsType): ReactElement => {\n    const {name}: any = useParams()\n    const classes = useStyles()\n    const model = useGroupDetailModel()\n    const layoutModel = useLayoutModel()\n    const history = useHistory()\n    useEffect(() => {\n        model.setGroupName(name)\n    }, [])\n    return (\n        <div className={classes.root}>\n            <div className={classes.header}>\n                <Typography variant={\"h4\"} className={classes.title}>\n                    {model.groupDetail?.name ?? \"\"}\n                </Typography>\n                <Button\n                    variant={\"contained\"}\n                    startIcon={<Delete/>}\n                    onClick={() => {\n                        layoutModel.showConfirmDialog({\n                            title: \"Remove confirm\",\n                            message:\"confirm remove\",\n                            onOk:async () => {\n                                await model.remove()\n                                history.replace(\"/groups\")\n                            }\n                        })\n                    }}\n                >\n                    Remove\n                </Button>\n            </div>\n\n            <UserSelectDialog\n                onCancel={() => layoutModel.switchDialog(\"group/addUser\")}\n                onOk={(username) => {\n                    layoutModel.switchDialog(\"group/addUser\")\n                    model.addUser([username])\n                }}\n                except={(model.groupDetail?.users ?? []).map(it => it.name)}\n                open={layoutModel.getDialogOpen(\"group/addUser\")}\n            />\n            <UserListCard\n                onRemove={(username) => {\n                    model.removeUser([username])\n                }}\n                className={classes.userList}\n                users={\n                    model.groupDetail?.users ?? []\n                }\n                actions={<Button onClick={() => layoutModel.switchDialog(\"group/addUser\")}>Add user</Button>}\n            />\n        </div>\n    )\n}\n\nexport default GroupDetailPage\n","/home/aren/Desktop/YouPlus/ypw/src/pages/Login/index.tsx",["664","665"],"import useStyles from \"./style\";\nimport {Button, Paper, TextField} from \"@material-ui/core\";\nimport useUserModel from \"../../model/user\";\nimport {useEffect, useState} from \"react\";\nimport {useSnackbar} from \"notistack\";\nimport {useHistory} from \"react-router-dom\";\nimport {useLocalStorageState} from \"ahooks\";\n\nexport interface LoginPagePropsType {\n\n}\n\nconst LoginPage = ({}: LoginPagePropsType) => {\n    const history = useHistory()\n    const {enqueueSnackbar} = useSnackbar();\n    const [username, setUsername] = useState<string | undefined>()\n    const [password, setPassword] = useState<string | undefined>()\n    const [serviceUrl,setServiceUrl] = useState<string | undefined>()\n    const classes = useStyles()\n    const model = useUserModel()\n    useEffect(() => {\n        setServiceUrl(window.location.protocol +\"//\" + window.location.host.replace( window.location.port,\"8999\"))\n    },[])\n    const onLoginClick = async () => {\n        if (username && password && serviceUrl) {\n            localStorage.setItem(\"apiUrl\",serviceUrl)\n            const result = await model.login(username, password)\n            if (result.success) {\n                enqueueSnackbar(\"Login success\", {variant: 'success'})\n                history.replace(\"/home\")\n            } else {\n                enqueueSnackbar(`Login failed:${result.message}`, {variant: 'error'})\n            }\n        }\n    }\n    return (\n        <div className={classes.root}>\n\n            <Paper className={classes.loginContainer}>\n                <div className={classes.loginHeader}>\n                    <div className={classes.title}>\n                        YouPlus\n                    </div>\n                    <div className={classes.sub}>\n                        ProjectXPolaris\n                    </div>\n                </div>\n                <div className={classes.loginForm}>\n                    <TextField\n                        label={\"ServiceUrl\"}\n                        fullWidth\n                        variant={\"outlined\"}\n                        value={serviceUrl}\n                        className={classes.input}\n                        onChange={(e) => setServiceUrl(e.target.value)}\n                    />\n                    <TextField\n                        label={\"Username\"}\n                        fullWidth\n                        variant={\"outlined\"}\n                        value={username}\n                        className={classes.input}\n                        onChange={(e) => setUsername(e.target.value)}\n                    />\n                    <TextField\n                        label={\"Password\"}\n                        fullWidth\n                        variant={\"outlined\"}\n                        className={classes.input}\n                        type={\"password\"}\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    />\n                    <Button variant={'contained'} fullWidth className={classes.loginBtn} onClick={onLoginClick}>Login\n                        in </Button>\n                </div>\n            </Paper>\n        </div>\n    )\n}\n\nexport default LoginPage;\n","/home/aren/Desktop/YouPlus/ypw/src/pages/Account/index.tsx",["666"],"import {ReactElement} from \"react\";\nimport useStyles from \"./style\";\nimport {Button, Grid, Typography} from \"@material-ui/core\";\nimport InfoCard from \"../../components/InfoCard\";\nimport useLayoutModel from \"../../model/layout\";\nimport ChangePasswordDialog from \"../../components/ChangePasswordDialog\";\nimport {changePassword} from \"../../api/account\";\nimport {useSnackbar} from \"notistack\";\n\nexport interface AccountPagePropsType {\n\n}\n\nconst AccountPage = ({}: AccountPagePropsType): ReactElement => {\n    const classes = useStyles()\n    const layoutModel = useLayoutModel()\n    const {enqueueSnackbar} = useSnackbar()\n    return (\n        <div className={classes.root}>\n            <ChangePasswordDialog\n                open={layoutModel.getDialogOpen(\"changePassword\")}\n                onCancel={() => layoutModel.switchDialog(\"changePassword\")}\n                onOk={async (password) => {\n                    await changePassword(password)\n                    enqueueSnackbar(\"password changed\", {variant: 'success'})\n                    layoutModel.switchDialog(\"changePassword\")\n                }}\n            />\n            <Typography variant={\"h5\"}>\n                {localStorage.getItem(\"user\")}\n            </Typography>\n            <Grid container spacing={4} className={classes.content}>\n                <Grid item>\n                    <InfoCard\n                        className={classes.card}\n                        label={\"Password\"}\n                        value={\"******\"}\n                        bottom={\n                            <>\n                                <Button onClick={() => layoutModel.switchDialog(\"changePassword\")}>\n                                    Change\n                                </Button>\n                            </>\n                        }\n                    />\n                </Grid>\n            </Grid>\n\n        </div>\n    )\n}\n\nexport default AccountPage\n","/home/aren/Desktop/YouPlus/ypw/src/pages/Groups/index.tsx",["667","668"],"import {ReactElement, useEffect} from \"react\";\nimport ListPage from \"../../components/ListPage\";\nimport {Avatar, Button, List, ListItem, ListItemAvatar, ListItemText} from \"@material-ui/core\";\nimport {Add, Group} from \"@material-ui/icons\";\nimport useUserGroupsModel from \"./model\";\nimport NewGroupDialog from \"../../components/NewGroupDialog\";\nimport useLayoutModel from \"../../model/layout\";\nimport useStyles from \"./style\";\nimport {useHistory} from \"react-router-dom\";\n\nexport interface GroupsPagePropsType {\n\n}\n\nconst GroupsPage = ({}: GroupsPagePropsType): ReactElement => {\n    const classes = useStyles()\n    const model = useUserGroupsModel()\n    const layoutModel = useLayoutModel()\n    const history = useHistory()\n    useEffect(() => {\n        model.fetchData()\n    }, [])\n    return (\n        <ListPage\n            title={\"Groups\"}\n            actions={\n                <>\n                    <Button startIcon={<Add/>} variant={\"contained\"}\n                            onClick={() => layoutModel.switchDialog(\"newgroup\")}>\n                        New user group\n                    </Button>\n                </>\n            }\n        >\n            <div>\n                <NewGroupDialog\n                    onOk={(name) => {\n                        model.create(name)\n                        layoutModel.switchDialog(\"newgroup\")\n                    }}\n                    onCancel={() => layoutModel.switchDialog(\"newgroup\")}\n                    open={layoutModel.getDialogOpen(\"newgroup\")}\n                />\n                <List>\n                    {\n                        model.groups.map(group => {\n                            return (\n                                <ListItem key={group.gid} button onClick={() => {history.push(`/group/${group.name}/info`)}}>\n                                    <ListItemAvatar>\n                                        <Avatar className={classes.avatar}>\n                                            <Group/>\n                                        </Avatar>\n                                    </ListItemAvatar>\n                                    <ListItemText primary={group.name} secondary={group.type}/>\n                                </ListItem>\n                            )\n                        })\n\n                    }\n                </List>\n            </div>\n\n\n        </ListPage>\n    )\n}\n\nexport default GroupsPage\n","/home/aren/Desktop/YouPlus/ypw/src/pages/System/index.tsx",["669","670"],"import {Button, Dialog, DialogActions, DialogContent, DialogTitle, Grid, Paper, Typography} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport useStyles from \"./style\";\nimport InfoCard from \"../../components/InfoCard\";\nimport {rebootDevice, shutdownDevice} from \"../../api/os\";\nimport {showAPIResponseErrorMessage, showGlobalSnackMessage} from \"../../utils/message\";\n\nexport interface SystemPagePropsType {\n\n}\ntype ActionTypes = \"Reboot\" | \"Shutdown\"\nconst SystemPage = ({}: SystemPagePropsType) => {\n    const classes = useStyles()\n    const [isConfirmOpen, setIsConfirmOpen] = useState(false)\n    const [confirmContent, setConfirmContent] = useState<string>()\n    const [confirmAction,setConfirmAction] = useState<ActionTypes>()\n    const openConfirmActionDialog = (content:string,action:ActionTypes) => {\n        setConfirmContent(content)\n        setConfirmAction(action)\n        setIsConfirmOpen(true)\n    }\n    const onConfirmOk = async () => {\n        setIsConfirmOpen(false)\n        if (!confirmAction) {\n            return\n        }\n        let response;\n        switch (confirmAction){\n            case \"Shutdown\":\n                response = await shutdownDevice();\n                break;\n            case \"Reboot\":\n                response = await rebootDevice();\n                return;\n        }\n        if (response) {\n            if (response.success) {\n                showGlobalSnackMessage(`${confirmAction} success`,{variant:\"success\"})\n            }else{\n                showAPIResponseErrorMessage(response)\n            }\n        }\n\n    }\n    return (\n        <div>\n            <Dialog open={isConfirmOpen} onClose={() => setIsConfirmOpen(false)}>\n                <DialogTitle>\n                    Confirm run\n                </DialogTitle>\n                <DialogContent>\n                    { confirmContent }\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => setIsConfirmOpen(false)}>\n                        Cancel\n                    </Button>\n                    <Button onClick={onConfirmOk}>\n                        OK\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            <Typography variant={\"h4\"} className={classes.title}>\n                System\n            </Typography>\n            <Grid container>\n                <Grid item xs={12} sm={3} md={3} lg={2} xl={2} className={classes.item}>\n                    <InfoCard\n                        label={\"Action\"}\n                        value={\"Shutdown\"}\n                        valueSize={20}\n                        bottom={\n                            <>\n                                <Button onClick={() => openConfirmActionDialog(\"Device will shutdown!\",\"Shutdown\")}>\n                                    Run\n                                </Button>\n                            </>\n                        }\n                    />\n                </Grid>\n                <Grid item xs={12} sm={3} md={3} lg={2} xl={2} className={classes.item}>\n                    <InfoCard\n                        label={\"Action\"}\n                        value={\"Reboot\"}\n                        valueSize={20}\n                        bottom={\n                            <>\n                                <Button onClick={() => openConfirmActionDialog(\"Device will reboot!\",\"Reboot\")}>\n                                    Run\n                                </Button>\n                            </>\n                        }\n                    />\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default SystemPage;\n","/home/aren/Desktop/YouPlus/ypw/src/pages/PoolDetail/index.tsx",["671","672"],"import useStyles from \"./style\";\nimport {Grid, Typography} from \"@material-ui/core\";\nimport React, {useEffect} from \"react\";\nimport usePoolDetailModel from \"./model\";\nimport {useParams} from \"react-router-dom\";\nimport InfoCard from \"../../components/InfoCard\";\nimport filesize from \"filesize\";\n\nexport interface PoolDetailPagePropsType {\n\n}\n\nconst PoolDetailPage = ({}: PoolDetailPagePropsType) => {\n    const {name}: any = useParams();\n    const classes = useStyles()\n    const model = usePoolDetailModel()\n    useEffect(() => {\n        model.refresh(name)\n    },[])\n    return (\n        <div className={classes.root}>\n            <Typography variant={\"h4\"} className={classes.title}>\n                { model.pool?.name }\n            </Typography>\n            <Grid container spacing={4}>\n                <Grid xs={2} item>\n                    <InfoCard label={\"Size\"} value={filesize(model.pool?.tree.size ?? 0)} valueSize={18} />\n                </Grid>\n                <Grid xs={2} item>\n                    <InfoCard label={\"Used\"} value={filesize(model.pool?.tree.alloc ?? 0)} valueSize={18} />\n                </Grid>\n                <Grid xs={2} item>\n                    <InfoCard label={\"Free\"} value={filesize(model.pool?.tree.free ?? 0)} valueSize={18} />\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default PoolDetailPage;\n","/home/aren/Desktop/YouPlus/ypw/src/pages/Users/index.tsx",["673","674"],"import React, {useEffect} from \"react\";\nimport useStyles from \"./style\";\nimport {\n    Avatar,\n    Button, IconButton,\n    List,\n    ListItem,\n    ListItemAvatar,\n    ListItemSecondaryAction,\n    ListItemText, Menu,\n    MenuItem,\n    Typography\n} from \"@material-ui/core\";\nimport useUsersModel from \"./model\";\nimport {Add, Delete, MoreVert, Person} from \"@material-ui/icons\";\nimport useLayoutModel from \"../../model/layout\";\nimport NewUserDialog from \"../../components/NewUserDialog\";\nimport {useContextMenu} from \"../../hooks/ContextMenu\";\nimport {useHistory} from \"react-router-dom\";\n\nexport interface UsersPagePropsType {\n\n}\nconst UsersPage = ({}: UsersPagePropsType) => {\n    const classes = useStyles()\n    const usersModel = useUsersModel()\n    const layoutModel = useLayoutModel()\n    const userContextMenu = useContextMenu<string>()\n    const history = useHistory()\n    const onSwitchNewUserDialog = layoutModel.getDialogSwitchHandler(\"newUser\")\n    const onUserClickItem = (username:string) => {\n        history.push(`/user/${username}`)\n    }\n    useEffect(() => {\n        usersModel.initData()\n    }, [])\n    return (\n        <div className={classes.root}>\n            <NewUserDialog\n                open={layoutModel.getDialogOpen(\"newUser\")}\n                onClose={onSwitchNewUserDialog}\n                onOk={(username, password) => {\n                    usersModel.newUser(username,password)\n                    onSwitchNewUserDialog()\n                }}\n            />\n            <Menu\n                open={userContextMenu.isOpen}\n                anchorEl={userContextMenu.anchor}\n                onClose={() => userContextMenu.close()}\n            >\n                <MenuItem onClick={async () => {\n                    if (userContextMenu.data) {\n                        userContextMenu.close()\n                        await usersModel.remove(userContextMenu.data)\n\n                    }\n                }}>\n                    <Delete/> Remove user\n                </MenuItem>\n            </Menu>\n            <Typography variant={\"h4\"} className={classes.title}>\n                Users\n            </Typography>\n            <div className={classes.actions}>\n                <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    startIcon={<Add />}\n                    onClick={onSwitchNewUserDialog}\n                >\n                    New user\n                </Button>\n            </div>\n            <List>\n                {\n                    usersModel.users.map(it => {\n                        return (\n                            <ListItem key={it} button onClick={() => onUserClickItem(it)}>\n                                <ListItemAvatar>\n                                    <Avatar className={classes.avatar}>\n                                        <Person />\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText primary={it} />\n                                <ListItemSecondaryAction>\n                                    <IconButton onClick={(e) => userContextMenu.open(it,e.target)}>\n                                        <MoreVert />\n                                    </IconButton>\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                        )\n                    })\n                }\n\n            </List>\n        </div>\n    )\n}\n\nexport default UsersPage;\n","/home/aren/Desktop/YouPlus/ypw/src/pages/Apps/index.tsx",["675","676","677","678"],"import React, {useEffect} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {Button, Grid, Typography} from \"@material-ui/core\";\nimport AppCard from \"../../components/AppCard\";\nimport useAppsPageModel from \"./model\";\nimport {App} from \"../../api/apps\";\nimport useStyles from \"./style\";\nimport InstallAppDialog from \"../../components/InstallAppDialog\";\nimport useLayoutModel from \"../../model/layout\";\nimport {Add} from \"@material-ui/icons\";\nimport {useInterval} from \"ahooks\";\n\n\ninterface AppsPagePropsType {\n\n}\n\n\nexport default function AppsPage({}: AppsPagePropsType) {\n    const classes = useStyles();\n    const model = useAppsPageModel()\n    const layoutModel = useLayoutModel()\n    useInterval(() => {\n        model.loadApp();\n    },3000)\n    return (\n        <div className={classes.root}>\n            <InstallAppDialog\n                open={layoutModel.getDialogOpen('installApp')}\n                onClose={() => {\n                    layoutModel.switchDialog(\"installApp\")\n                }}\n                onOk={() => {\n                    layoutModel.switchDialog(\"installApp\")\n                }}\n            />\n            <div className={classes.header}>\n                <div className={classes.title}>\n                    Apps\n                </div>\n                <Button\n                    variant=\"contained\"\n                    onClick={() => layoutModel.switchDialog(\"installApp\")}\n                    color=\"secondary\"\n                    startIcon={<Add />}\n                >\n                    Install App\n                </Button>\n            </div>\n\n            <Grid container spacing={2}>\n                {model.appList.map((app: App) => (\n                    <Grid xs={12} sm={6} md={4} lg={3} xl={2} item>\n                        <AppCard\n                            app={app}\n                            onStart={() => model.start(app.id)}\n                            onStop={() => model.stop(app.id)}\n                            enableAutoStart={() => model.addToAutoStart(app.id)}\n                            disableAutoStart={() => model.removeAutoStart(app.id)}\n                            onRemove={() => model.uninstall(app.id)}\n                        />\n                    </Grid>\n                ))}\n            </Grid>\n        </div>\n    );\n}\n","/home/aren/Desktop/YouPlus/ypw/src/pages/UserDetail/index.tsx",["679"],"import useStyles from './style'\nimport {\n    Divider,\n    Paper,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Typography\n} from \"@material-ui/core\";\nimport React, {useEffect} from \"react\";\nimport {useParams} from \"react-router-dom\";\nimport useUserDetailModel from \"./model\";\n\nexport interface UserDetailPropsType {\n    className?: string\n}\n\nconst UserDetail = ({className}: UserDetailPropsType): React.ReactElement => {\n    const classes = useStyles()\n    const {name}: any = useParams();\n    const model = useUserDetailModel()\n    useEffect(() => {\n        model.setUsername(name)\n        model.refreshShareFolders(name)\n    },[])\n    return (\n        <div className={classes.root}>\n            <Typography variant={\"h4\"} className={classes.title}>\n                { model.username }\n            </Typography>\n            <Paper>\n                <div className={classes.tableSectionHeader}>\n                    <Typography variant={\"h5\"}>\n                        Folders\n                    </Typography>\n                </div>\n                <Divider />\n                <TableContainer>\n                    <Table>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>\n                                    Folder\n                                </TableCell>\n                                <TableCell>\n                                    Access\n                                </TableCell>\n                                <TableCell>\n                                    Read\n                                </TableCell>\n                                <TableCell>\n                                    Write\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {\n                                model.userShareFolder.map(folder => {\n                                    return (\n                                        <TableRow key={folder.name}>\n                                            <TableCell>\n                                                {\n                                                    folder.name\n                                                }\n                                            </TableCell>\n                                            <TableCell>\n                                                {\n                                                    folder.access ? \"yes\":\"no\"\n                                                }\n                                            </TableCell>\n                                            <TableCell>\n                                                {\n                                                    folder.read ? \"yes\":\"no\"\n                                                }\n                                            </TableCell>\n                                            <TableCell>\n                                                {\n                                                    folder.write ? \"yes\":\"no\"\n                                                }\n                                            </TableCell>\n                                        </TableRow>\n                                    )\n                                })\n                            }\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </Paper>\n        </div>\n    )\n}\n\nexport default UserDetail\n","/home/aren/Desktop/YouPlus/ypw/src/pages/ShareFolderDetail/index.tsx",["680","681"],"import React, {ReactElement, useEffect, useState} from \"react\";\nimport {useHistory, useParams} from \"react-router-dom\";\nimport useShareFolderDetailModel from \"./model\";\nimport useStyles from \"./style\";\nimport InfoCard from \"../../components/InfoCard\";\nimport {Button, Grid} from \"@material-ui/core\";\nimport UserListCard from \"../../components/UserListCard\";\nimport UserSelectDialog from \"../../components/UserSelectDialog\";\nimport SwitchSelectDialog from \"../../components/SwitchSelectDialog\";\nimport {Delete} from \"@material-ui/icons\";\nimport useLayoutModel from \"../../model/layout\";\n\nexport interface ShareFolderDetailPropsType {\n\n}\n\ntype UserPickModeType = \"readUsers\" | \"writeUsers\" | \"validUsers\" | \"invalidUsers\"\ntype SwitchSelectTargetType = \"public\" | 'readonly' | \"writable\" | 'enable'\nconst ShareFolderDetail = ({}: ShareFolderDetailPropsType): ReactElement => {\n    const {name}: any = useParams();\n    const classes = useStyles()\n    const model = useShareFolderDetailModel()\n    const layoutModel = useLayoutModel()\n    const history = useHistory()\n    useEffect(() => {\n        model.initData(name)\n    }, [])\n    const [pickUpUserMode, setPickUpUserMode] = useState<UserPickModeType | undefined>()\n    const [pickUserExcept, setPickUserExcept] = useState<string[]>([])\n    const [switchSelectTarget, setSwitchSelectTarget] = useState<SwitchSelectTargetType | undefined>()\n    const onOk = async (user: string) => {\n        if (!model.folder) {\n            return\n        }\n        const option = {\n            public: model.folder.public,\n            enable: model.folder.enable,\n            readonly: model.folder.readonly\n        }\n        switch (pickUpUserMode) {\n            case \"readUsers\":\n                model.update({\n                    ...option,\n                    readUsers: [...(model.folder?.readUsers ?? []).map(it => it.name), user]\n                })\n                break;\n            case \"writeUsers\":\n                model.update({\n                    ...option,\n                    writeUsers: [...(model.folder?.writeUsers ?? []).map(it => it.name), user]\n                })\n                break;\n            case \"validUsers\":\n                model.update({\n                    ...option,\n                    validUsers: [...(model.folder?.validUsers ?? []).map(it => it.name), user]\n                })\n                break;\n            case \"invalidUsers\":\n                model.update({\n                    ...option,\n                    invalidUsers: [...(model.folder?.invalidUsers ?? []).map(it => it.name), user]\n                })\n        }\n        setPickUpUserMode(undefined)\n    }\n    const onSwitchSelect = (value: boolean) => {\n        if (!model.folder) {\n            return\n        }\n        const option = {\n            public: model.folder.public,\n            enable: model.folder.enable,\n            readonly: model.folder.readonly\n        }\n        switch (switchSelectTarget) {\n            case \"public\":\n                option.public = value\n                break;\n            case 'readonly':\n                option.readonly = value\n                break;\n            case 'enable':\n                option.enable = value\n        }\n        model.update(option)\n        setSwitchSelectTarget(undefined)\n\n    }\n    return (\n        <div className={classes.root}>\n            <UserSelectDialog\n                onCancel={() => setPickUpUserMode(undefined)}\n                onOk={onOk}\n                open={Boolean(pickUpUserMode)}\n                except={pickUserExcept}\n            />\n            <SwitchSelectDialog\n                onOk={onSwitchSelect}\n                onClose={() => setSwitchSelectTarget(undefined)}\n                open={Boolean(switchSelectTarget)}\n            />\n\n            <div className={classes.header}>\n                <div className={classes.title}>\n                    {model.folder?.name}\n                </div>\n                <Button\n                    variant={'contained'}\n                    size={\"small\"}\n                    startIcon={<Delete/>}\n                    onClick={() => {\n                        layoutModel.showConfirmDialog({\n                            title: 'Remove Confirm',\n                            message: 'Remove folder will lost ALL DATA in folder',\n                            onOk: async () => {\n                                await model.remove()\n                                history.goBack()\n                            }\n                        })\n                    }}\n                >\n                    Remove folder\n                </Button>\n            </div>\n\n            <Grid container spacing={4} className={classes.grid}>\n                <Grid xs={12} sm={6} md={4} lg={3} xl={3} item>\n                    <InfoCard label={\"folder name\"} value={model.folder?.name} valueSize={18}\n                              className={classes.infoCard}/>\n                </Grid>\n                <Grid xs={12} sm={6} md={4} lg={3} xl={3} item>\n                    <InfoCard label={\"storage\"} value={model.folder?.storage.id} valueSize={18}\n                              className={classes.infoCard}/>\n                </Grid>\n                <Grid xs={12} sm={6} md={4} lg={3} xl={3} item>\n                    <InfoCard\n                        label={\"public\"}\n                        value={model.folder?.public ? \"yes\" : \"no\"}\n                        valueSize={18}\n                        className={classes.infoCard}\n                        onEdit={() => setSwitchSelectTarget(\"public\")}\n                    />\n                </Grid>\n                <Grid xs={12} sm={6} md={4} lg={3} xl={3} item>\n                    <InfoCard\n                        label={\"readonly\"}\n                        value={model.folder?.readonly ? \"yes\" : \"no\"}\n                        valueSize={18}\n                        className={classes.infoCard}\n                        onEdit={() => setSwitchSelectTarget(\"readonly\")}\n                    />\n                </Grid>\n                <Grid xs={12} sm={6} md={4} lg={3} xl={3} item>\n                    <InfoCard\n                        label={\"enable\"}\n                        value={model.folder?.enable ? \"yes\" : \"no\"}\n                        valueSize={18}\n                        className={classes.infoCard}\n                        onEdit={() => setSwitchSelectTarget(\"enable\")}\n                    />\n                </Grid>\n            </Grid>\n            <Grid className={classes.grid} container spacing={4}>\n                <Grid xs={12} sm={6} xl={4} item>\n                    <UserListCard\n                        users={model.folder?.validUsers}\n                        title={\"valid users\"}\n                        actions={\n                            <>\n                                <Button onClick={() => {\n                                    setPickUserExcept((model.folder?.validUsers ?? []).map(it => it.name))\n                                    setPickUpUserMode(\"validUsers\")\n                                }}>\n                                    add user\n                                </Button>\n                            </>\n                        }\n                        onRemove={(name) => {\n                            if (!model.folder) {\n                                return\n                            }\n                            model.update({\n                                public: model.folder.public,\n                                enable: model.folder.enable,\n                                readonly: model.folder.readonly,\n                                validUsers: model.folder?.validUsers.map(it => it.name).filter(it => it !== name)\n                            })\n                        }}\n                    />\n                </Grid>\n                <Grid xs={12} sm={6} xl={4} item>\n                    <UserListCard\n                        users={model.folder?.invalidUsers}\n                        title={\"invalid users\"}\n                        actions={\n                            <>\n                                <Button onClick={() => {\n                                    setPickUserExcept((model.folder?.invalidUsers ?? []).map(it => it.name))\n                                    setPickUpUserMode(\"invalidUsers\")\n                                }}>\n                                    add user\n                                </Button>\n                            </>\n                        }\n                        onRemove={(name) => {\n                            if (!model.folder) {\n                                return\n                            }\n                            model.update({\n                                public: model.folder.public,\n                                enable: model.folder.enable,\n                                readonly: model.folder.readonly,\n                                invalidUsers: model.folder?.invalidUsers.map(it => it.name).filter(it => it !== name)\n                            })\n                        }}\n                    />\n                </Grid>\n                <Grid xs={12} sm={6} xl={4} item>\n                    <UserListCard\n                        users={model.folder?.readUsers}\n                        title={\"read users\"}\n                        actions={\n                            <>\n                                <Button onClick={() => {\n                                    setPickUserExcept((model.folder?.readUsers ?? []).map(it => it.name))\n                                    setPickUpUserMode(\"readUsers\")\n                                }}>\n                                    add user\n                                </Button>\n                            </>\n                        }\n                        onRemove={(name) => {\n                            if (!model.folder) {\n                                return\n                            }\n                            model.update({\n                                public: model.folder.public,\n                                enable: model.folder.enable,\n                                readonly: model.folder.readonly,\n                                readUsers: model.folder?.readUsers.map(it => it.name).filter(it => it !== name)\n                            })\n                        }}\n                    />\n                </Grid>\n                <Grid xs={12} sm={6} xl={4} item>\n                    <UserListCard\n                        users={model.folder?.writeUsers}\n                        title={\"write list\"}\n                        onRemove={(name) => {\n                            if (!model.folder) {\n                                return\n                            }\n                            model.update({\n                                public: model.folder.public,\n                                enable: model.folder.enable,\n                                readonly: model.folder.readonly,\n                                writeUsers: model.folder?.writeUsers.map(it => it.name).filter(it => it !== name)\n                            })\n                        }}\n                        actions={\n                            <>\n                                <Button onClick={() => {\n                                    setPickUserExcept((model.folder?.writeUsers ?? []).map(it => it.name))\n                                    setPickUpUserMode(\"writeUsers\")\n                                }}>\n                                    add user\n                                </Button>\n                            </>\n                        }\n                    />\n                </Grid>\n            </Grid>\n\n\n        </div>\n    )\n}\n\nexport default ShareFolderDetail\n","/home/aren/Desktop/YouPlus/ypw/src/pages/PoolDetail/model.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/pages/Groups/model.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/pages/Groups/style.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/utils/message.ts",["682"],"import {OptionsObject, SnackbarMessage} from \"notistack\";\nimport {ResponseError} from \"umi-request\";\n\nexport const showGlobalSnackMessage = (message: SnackbarMessage, options?: OptionsObject) => {\n    document.dispatchEvent(new CustomEvent<{ message: SnackbarMessage, options?: OptionsObject }>(\"globalMessage\", {\n        detail: {\n            message,\n            options\n        }\n    }))\n}\nexport const showAPIResponseErrorMessage = (err:any) => {\n    console.log(err)\n    document.dispatchEvent(new CustomEvent<{ message: SnackbarMessage, options?: OptionsObject }>(\"globalMessage\", {\n        detail: {\n            message:`${err.data.reason} [${err.status}]`,\n            options: {variant: \"error\"}\n        }\n    }))\n}\n","/home/aren/Desktop/YouPlus/ypw/src/api/os.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/pages/PoolDetail/style.tsx",[],"/home/aren/Desktop/YouPlus/ypw/src/pages/System/style.tsx",[],"/home/aren/Desktop/YouPlus/ypw/src/api/zfs.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/api/users.ts",["683"],"import apiRequest from \"../utils/request\";\nimport {ApplicationConfig} from \"../config\";\nimport {BaseResponse} from \"./base\";\nimport {useClickAway} from \"ahooks\";\n\nexport type UserGroupType = \"admin\" | \"normal\"\n\nexport interface UserGroup {\n    name: string\n    type: UserGroupType\n    gid: string\n}\n\nexport interface UserListResponse {\n    users: string[]\n}\n\nexport type UserGroupDetail = UserGroup & {\n    users: {\n        name: string\n        uid: string\n    }[]\n}\n\nexport interface UserShareFolder {\n    name: string\n    access: boolean\n    read: boolean\n    write: boolean\n}\nexport interface fetchUserShareFolderResponse {\n    folders: UserShareFolder[]\n}\n\nexport const getUserList = async (): Promise<UserListResponse> => {\n    return await apiRequest.get(ApplicationConfig.apiPaths.users)\n}\nexport const createUser = async (username: string, password: string): Promise<BaseResponse> => {\n    return await apiRequest.post(ApplicationConfig.apiPaths.users, {\n        data: {\n            username, password\n        }\n    })\n}\n\nexport const removeUser = async (username: string): Promise<BaseResponse> => {\n    return await apiRequest.delete(ApplicationConfig.apiPaths.users, {\n        params: {\n            username\n        }\n    })\n}\nexport const fetchGroupList = async (): Promise<{ groups: UserGroup[] }> => {\n    return await apiRequest.get(ApplicationConfig.apiPaths.groups)\n}\nexport const createGroup = async (name: string): Promise<UserGroup> => {\n    return await apiRequest.post(ApplicationConfig.apiPaths.groups, {data: {name}})\n}\nexport const fetchGroupDetail = async (name: string): Promise<UserGroupDetail> => {\n    return await apiRequest.get(ApplicationConfig.apiPaths.group.replace(\":name\", name))\n}\nexport const removeGroup = async (name: string): Promise<UserGroupDetail> => {\n    return await apiRequest.delete(ApplicationConfig.apiPaths.groups, {params: {name}})\n}\nexport const addUserToUserGroup = async (name: string, users: string[]): Promise<BaseResponse> => {\n    return await apiRequest.post(ApplicationConfig.apiPaths.groupUsers.replace(\":name\", name), {data: {users}})\n}\n\nexport const removeUserFromUserGroup = async (name: string, users: string[]): Promise<BaseResponse> => {\n    return await apiRequest.delete(ApplicationConfig.apiPaths.groupUsers.replace(\":name\", name), {data: {users}})\n}\n\nexport const fetchUserShareFolder = async (username: string):Promise<BaseResponse & fetchUserShareFolderResponse> => {\n    return await apiRequest.get(ApplicationConfig.apiPaths.userShare,{\n        params:{\n            username\n        }\n    })\n}\n","/home/aren/Desktop/YouPlus/ypw/src/config.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/layout/Notification/index.tsx",["684","685"],"import {useEffect} from \"react\";\nimport {DefaultNotificationManager} from \"../../ws\";\nimport {useSnackbar} from \"notistack\";\n\nexport interface NotificationPropsType {\n\n}\n\nconst Notification = ({}: NotificationPropsType) => {\n    const { enqueueSnackbar } = useSnackbar()\n    useEffect(() => {\n        DefaultNotificationManager.addListener(\"InstallError\", (event) => {\n            enqueueSnackbar(`${event.data.extra.appName} install error: ${event.data.errorMessage}`,{ variant:\"error\"  })\n        })\n        DefaultNotificationManager.addListener(\"InstallDone\", (event) => {\n            enqueueSnackbar(`${event.data.extra.appName} install success`,{ variant:\"success\"  })\n        })\n        DefaultNotificationManager.addListener(\"UninstallDone\", (event) => {\n            enqueueSnackbar(`${event.data.extra.appName} uninstall success`,{ variant:\"success\"  })\n        })\n        DefaultNotificationManager.addListener(\"UninstallError\", (event) => {\n            enqueueSnackbar(`${event.data.extra.appName} uninstall error: ${event.data.errorMessage}`,{ variant:\"success\"  })\n        })\n    },[])\n    return (<></>)\n}\n\nexport default Notification;\n","/home/aren/Desktop/YouPlus/ypw/src/utils/request.ts",["686"],"import {extend, ResponseError} from 'umi-request'\nimport { ApplicationConfig } from '../config'\nconst errorHandler = (error:ResponseError) => {\n  console.log(error)\n  if (error.response) {\n    // The request was made and the server responded with a status code\n    // that falls out of the range of 2xx\n    console.log(error.response.status);\n    console.log(error.response.headers);\n    console.log(error.data);\n    console.log(error.request);\n    return { status:error.response.status,data:error.data }\n  } else {\n    console.log(error.message);\n  }\n  // return {some: 'data'}; If return, return the value as a return. If you don't write it is equivalent to return undefined, you can judge whether the response has a value when processing the result.\n  // return {some: 'data'};\n};\nconst apiRequest = extend({\n  timeout: 10000,\n  credentials: 'omit',\n  errorHandler\n})\napiRequest.interceptors.request.use((url,options) => {\n  const token = localStorage.getItem(\"token\")\n  const apiUrl = localStorage.getItem(\"apiUrl\")\n  if (apiUrl) {\n    url  = apiUrl + url\n  }\n  if (token) {\n    options.headers = {\n      ...options.headers,\n      \"Authorization\" :`Bearer ${token}`\n    }\n  }\n  return {\n    url,options\n  }\n})\nexport default apiRequest\n","/home/aren/Desktop/YouPlus/ypw/src/components/NewGroupDialog/index.tsx",[],"/home/aren/Desktop/YouPlus/ypw/src/components/InfoCard/index.tsx",[],"/home/aren/Desktop/YouPlus/ypw/src/components/SwitchSelectDialog/index.tsx",[],"/home/aren/Desktop/YouPlus/ypw/src/components/UserListCard/index.tsx",["687","688"],"import React, {ReactElement} from \"react\";\nimport {\n    Avatar,\n    Button, IconButton,\n    List,\n    ListItem,\n    ListItemAvatar,\n    ListItemSecondaryAction,\n    ListItemText,\n    Paper\n} from \"@material-ui/core\";\nimport {Delete, Person, Remove} from \"@material-ui/icons\";\nimport useStyles from \"./style\";\n\nexport interface UserListCardPropsType {\n    users?: { uid: string, name: string }[]\n    title?: string\n    actions?: ReactElement\n    onRemove: (name: string) => void\n    className?: any\n}\n\nconst UserListCard = ({\n                          className,\n                          onRemove,\n                          actions,\n                          users = [],\n                          title = \"users\"\n                      }: UserListCardPropsType): ReactElement => {\n    const classes = useStyles()\n    return (\n        <Paper className={className}>\n            <div className={classes.userListHeader}>\n                <div className={classes.usersListTitle}>\n                    {title}\n                </div>\n                {actions}\n            </div>\n            <List className={classes.userList} dense>\n                {\n                    users.map(it => {\n                        return (\n                            <ListItem key={it.uid} className={classes.userListItem}>\n                                <ListItemAvatar>\n                                    <Avatar className={classes.userListIcon}>\n                                        <Person/>\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText primary={it.name} secondary={it.uid}/>\n                                <ListItemSecondaryAction>\n                                    <IconButton onClick={() => onRemove(it.name)} size={\"small\"}>\n                                        <Delete/>\n                                    </IconButton>\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                        )\n                    })\n                }\n            </List>\n\n        </Paper>\n    )\n}\n\nexport default UserListCard\n","/home/aren/Desktop/YouPlus/ypw/src/components/UserSelectDialog/index.tsx",[],"/home/aren/Desktop/YouPlus/ypw/src/ws.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/components/UserSelectDialog/style.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/components/UserListCard/style.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/components/SwitchSelectDialog/style.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/components/NewGroupDialog/style.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/components/InfoCard/style.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/pages/ShareFolderDetail/style.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/pages/ShareFolderDetail/model.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/pages/Apps/style.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/hooks/ContextMenu.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/pages/Users/model.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/pages/Users/style.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/api/account.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/model/user.ts",["689"],"import {createModel} from \"hox\";\nimport {fetchAuthToken} from \"../api/auth\";\nimport {ResponseError} from 'umi-request'\nimport {useLocalStorageState} from \"ahooks\";\n\nconst UserModel = () => {\n    const login = async (username: string, password: string) => {\n        try {\n            const response = await fetchAuthToken(username, password)\n            if (response.success) {\n                localStorage.setItem(\"token\", response.token)\n                localStorage.setItem(\"username\", username)\n                return {success: true}\n            }\n            return {success: false, message: response.reason}\n        }catch (e) {\n            const responseError : ResponseError = e\n            return {success: false, message: responseError.data.reason}\n        }\n    }\n    const logout = () => {\n        localStorage.removeItem(\"token\")\n        localStorage.removeItem(\"username\")\n        localStorage.removeItem(\"apiUrl\")\n    }\n    return {\n        login,logout\n    }\n}\nconst useUserModel = createModel(UserModel)\nexport default useUserModel\n","/home/aren/Desktop/YouPlus/ypw/src/pages/Account/style.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/pages/Login/style.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/pages/GroupDetail/model.ts",["690","691"],"import {createModel} from \"hox\";\nimport {useEffect, useState} from \"react\";\nimport {\n    addUserToUserGroup,\n    fetchGroupDetail,\n    removeGroup,\n    removeUserFromUserGroup,\n    UserGroupDetail\n} from \"../../api/users\";\nimport {strict} from \"assert\";\nimport {hexToRgb} from \"@material-ui/core\";\n\nconst GroupDetailModel = () => {\n    const [groupDetail,setGroupDetail]  = useState<UserGroupDetail | undefined>()\n    const [groupName,setGroupName] = useState<string | undefined>()\n\n    const fetchData = async (name:string) => {\n        const detail = await fetchGroupDetail(name)\n        setGroupDetail(detail)\n    }\n    const removeUser = async (users:string[]) => {\n        if (groupName) {\n            await removeUserFromUserGroup(groupName,users)\n            await fetchData(groupName)\n        }\n    }\n    const addUser = async (users:string[]) => {\n        if (groupName) {\n            await addUserToUserGroup(groupName,users)\n            await fetchData(groupName)\n        }\n    }\n    const remove = async () => {\n        if (groupName) {\n            await removeGroup(groupName)\n        }\n    }\n    useEffect(() => {\n        if (groupName) {\n            fetchData(groupName)\n        }\n    },[groupName])\n    return {\n        groupDetail,setGroupName,addUser,removeUser,remove\n    }\n}\nconst useGroupDetailModel = createModel(GroupDetailModel)\nexport default useGroupDetailModel\n","/home/aren/Desktop/YouPlus/ypw/src/pages/GroupDetail/style.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/pages/UserDetail/model.ts",["692"],"import {createModel} from 'hox'\nimport {useEffect, useState} from \"react\";\nimport {fetchUserShareFolder, UserShareFolder} from \"../../api/users\";\n\nconst UserDetailModel = () => {\n    const [username,setUsername] = useState<string>()\n    const [userShareFolder,setUserShareFolder] = useState<UserShareFolder[]>([])\n    const refreshShareFolders = async (username:string) => {\n        if (!username) {\n            return;\n        }\n        const response = await fetchUserShareFolder(username)\n        setUserShareFolder(response.folders)\n    }\n\n    return {\n        username,setUsername,userShareFolder,refreshShareFolders\n    }\n}\nconst useUserDetailModel = createModel(UserDetailModel)\nexport default useUserDetailModel\n","/home/aren/Desktop/YouPlus/ypw/src/pages/UserDetail/style.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/pages/ShareFolder/model.ts",["693","694"],"import {getUserList} from \"../../api/users\";\nimport {useEffect, useState} from \"react\";\nimport {createModel} from \"hox\";\nimport {createNewShare, getShareList, ShareFolder} from \"../../api/share\";\nimport {showAPIResponseErrorMessage, showGlobalSnackMessage} from \"../../utils/message\";\n\nconst ShareFoldersModel = () => {\n    const [folders, setFolders] = useState<ShareFolder[]>([])\n    const initData = async () => {\n        const response = await getShareList()\n        setFolders(response.folders)\n    }\n    const createShare = async (data: any) => {\n        const response:any = await createNewShare(data)\n        if (response.success) {\n            showGlobalSnackMessage(\"create share folder success\",{variant:\"success\"})\n        }else{\n            showAPIResponseErrorMessage(response)\n        }\n        await initData()\n    }\n\n    return {\n        folders, createShare, initData\n    }\n}\nconst useShareFoldersModel = createModel(ShareFoldersModel)\nexport default useShareFoldersModel\n","/home/aren/Desktop/YouPlus/ypw/src/pages/ShareFolder/style.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/pages/Apps/model.ts",["695","696","697"],"import {createModel} from \"hox\";\nimport {useState} from \"react\";\nimport {\n    App,\n    fetchApps,\n    installApp,\n    removeAutoStart,\n    setAutoStart,\n    startApp,\n    stopApp,\n    unInstallAPP\n} from \"../../api/apps\";\nimport {useInterval} from \"ahooks\";\n\nconst AppsPageModel = () => {\n    const [appList,setAppList] = useState<App[]>([])\n    const loadApp = async () => {\n        const response = await fetchApps()\n        if (response) {\n            setAppList(response.apps)\n        }\n    }\n\n    const start = async (appId:string) => {\n        await startApp(appId)\n    }\n    const stop = async (appId:string) => {\n        await stopApp(appId)\n    }\n    const addToAutoStart = async (appId:string) => {\n        await setAutoStart(appId)\n    }\n    const removeFromAutoStart = async (appId:string) => {\n        await removeAutoStart(appId)\n    }\n    const uninstall = async (id:string) => {\n        await unInstallAPP(id)\n    }\n    return {\n        appList,loadApp,start,stop,addToAutoStart,removeAutoStart,uninstall\n    }\n}\nconst useAppsPageModel = createModel(AppsPageModel)\nexport default useAppsPageModel\n","/home/aren/Desktop/YouPlus/ypw/src/pages/DashBoard/model.ts",["698"],"import {createModel} from \"hox\";\nimport {useInterval} from \"ahooks\";\nimport {useState} from \"react\";\nimport {fetchSystemInfo, SystemInfo} from \"../../api/style\";\nimport {fetchDisks} from \"../../api/disks\";\nimport {fetchStorageList} from \"../../api/storage\";\nimport {getShareList} from \"../../api/share\";\nimport {getUserList} from \"../../api/users\";\n\nconst DashboardModel = () => {\n    const [systemInfo,setSystemInfo] = useState<SystemInfo | undefined>()\n    const [diskCount,setDiskCount] = useState<number>(0)\n    const [storageCount,setStorageCount] = useState<number>(0)\n    const [shareFolderCount,setShareFolderCount] = useState<number>(0)\n    const [userCount,setUserCount] = useState<number>(0)\n    const initData = async () => {\n        const diskResponse = await fetchDisks()\n        setDiskCount(diskResponse.disks.length)\n        const storageResponse = await fetchStorageList()\n        setStorageCount(storageResponse.storages.length)\n        const shareFolderResponse = await getShareList()\n        setShareFolderCount(shareFolderResponse.folders.length)\n        const userListResponse = await getUserList()\n        setUserCount(userListResponse.users.length)\n    }\n    const refreshSystemInfo = async () => {\n        const response = await fetchSystemInfo()\n        setSystemInfo(response)\n    }\n    return {\n        systemInfo,initData,diskCount,storageCount,shareFolderCount,userCount,refreshSystemInfo\n    }\n}\nconst useDashboardModel = createModel(DashboardModel)\nexport default useDashboardModel\n","/home/aren/Desktop/YouPlus/ypw/src/pages/DashBoard/style.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/pages/Parts/style.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/pages/Parts/model.ts",["699","700"],"import {createModel} from \"hox\";\nimport {fetchDisks, fetchParts, Part} from \"../../api/disks\";\nimport {useEffect, useState} from \"react\";\nconst targetFS = [\"ext4\",\"ntfs\"]\nconst PartsPageModel = () => {\n    const [parts, setParts] = useState<Part[]>([])\n    const initData = async () => {\n        let result: Part[] = await fetchParts()\n        if (!result) {\n            return\n        }\n        result = result.filter(part => {\n            return targetFS.find(it => it === part.fs_type) !== undefined\n        })\n        setParts(result)\n    }\n    return {\n        parts,initData\n    }\n}\nconst usePartsPageModel = createModel(PartsPageModel)\nexport default usePartsPageModel\n","/home/aren/Desktop/YouPlus/ypw/src/pages/Storage/model.ts",["701"],"import {createModel} from \"hox\";\nimport {useEffect, useState} from \"react\";\nimport {fetchStorageList, Storage, removeStorage, createStorage} from \"../../api/storage\";\n\nconst StorageModel = () => {\n    const [storages, setStorages] = useState<Storage[]>([])\n    const init = async () => {\n        const response = await fetchStorageList()\n        if (response) {\n            setStorages(response.storages)\n\n        }\n    }\n    const remove = async (id: string) => {\n        await removeStorage(id)\n        await init()\n    }\n    const addStorage = async (source:string,type:string) => {\n        await createStorage({source,type})\n        await init()\n    }\n\n    return {\n        storages, remove, addStorage,init\n    }\n}\nconst useStorageModel = createModel(StorageModel)\nexport default useStorageModel\n","/home/aren/Desktop/YouPlus/ypw/src/pages/ZFS/style.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/pages/ZFS/model.ts",["702"],"import {createModel} from \"hox\";\nimport {useEffect, useState} from \"react\";\nimport {createZFSPool, fetchZFSPools, removeZFSPool, ZFSPool} from \"../../api/zfs\";\nimport {showAPIResponseErrorMessage, showGlobalSnackMessage} from \"../../utils/message\";\n\nconst ZFSModel = () => {\n    const [pools,setPools] = useState<ZFSPool[]>([])\n    const refresh = async() => {\n        const response = await fetchZFSPools()\n        if (response) {\n            setPools(response.pools)\n        }\n    }\n    const removePool = async (name:string) => {\n        const response = await removeZFSPool(name)\n        if (response.success) {\n            showGlobalSnackMessage(\"remove zfs pool success\",{variant:\"success\"})\n        }else{\n            showAPIResponseErrorMessage(response)\n        }\n        await refresh()\n    }\n    const createPool = async (data:any) => {\n        await createZFSPool(data)\n        await refresh()\n    }\n    return {\n        pools,removePool,createPool,refresh\n    }\n}\nconst useZFSModel = createModel(ZFSModel)\nexport default useZFSModel\n","/home/aren/Desktop/YouPlus/ypw/src/pages/Storage/style.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/pages/Disks/model.ts",["703"],"import {createModel} from \"hox\";\nimport {useEffect, useState} from \"react\";\nimport {Disk, fetchDisks} from \"../../api/disks\";\n\nconst DisksModel = () => {\n    const [disks,setDisks] = useState<Disk[]>([])\n    const initData = async () => {\n        const response = await fetchDisks()\n        if (response) {\n            setDisks(response.disks.sort((a, b) => a.name.localeCompare(b.name)))\n\n        }\n    }\n\n    return {\n        disks,initData\n    }\n}\nconst useDisksModel = createModel(DisksModel)\nexport default useDisksModel\n","/home/aren/Desktop/YouPlus/ypw/src/pages/Disks/style.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/components/Icons/UserIcon.tsx",[],["704","705"],"/home/aren/Desktop/YouPlus/ypw/src/components/Icons/DiskIcon.tsx",[],"/home/aren/Desktop/YouPlus/ypw/src/components/Icons/ShareFolderIcon.tsx",[],"/home/aren/Desktop/YouPlus/ypw/src/components/Icons/StorageIcon.tsx",[],"/home/aren/Desktop/YouPlus/ypw/src/api/share.ts",["706"],"import apiRequest from \"../utils/request\";\nimport {ApplicationConfig} from \"../config\";\nimport {UserListResponse} from \"./users\";\nimport {BaseResponse} from \"./base\";\n\nexport interface ShareFolderUser {\n    uid: string\n    name: string\n}\n\nexport interface ShareFolder {\n    id: number\n    name: string\n    storage: {\n        id: string\n    },\n    validUsers: ShareFolderUser[],\n    invalidUsers: ShareFolderUser[],\n    readUsers: ShareFolderUser[],\n    writeUsers: ShareFolderUser[],\n    public: boolean,\n    readonly: boolean\n    enable: boolean\n}\n\nexport interface FetchShareFoldersResponse {\n    folders: ShareFolder[]\n}\n\nexport const getShareList = async (): Promise<FetchShareFoldersResponse> => {\n    return await apiRequest.get(ApplicationConfig.apiPaths.share)\n}\n\nexport const createNewShare = async (data: any): Promise<BaseResponse> => {\n    return await apiRequest.post(ApplicationConfig.apiPaths.share, {\n        data\n    })\n}\n\nexport const removeShare = async (id: number): Promise<BaseResponse> => {\n    return await apiRequest.delete(ApplicationConfig.apiPaths.share, {\n        params: {\n            id\n        }\n    })\n}\n\nexport interface ShareUpdateOption {\n    readUsers?: string[]\n    writeUsers?: string[]\n    validUsers?: string[]\n    invalidUsers?: string[]\n    public?: boolean\n    readonly?: boolean\n    enable?: boolean\n}\n\nexport const updateShare = async (name: string, option: ShareUpdateOption): Promise<void> => {\n    return await apiRequest.post(ApplicationConfig.apiPaths.shareUpdate, {\n        data: {\n            name,\n            ...option\n        }\n    })\n}\n","/home/aren/Desktop/YouPlus/ypw/src/api/auth.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/api/storage.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/api/disks.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/api/apps.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/components/AppCard/index.tsx",["707","708","709","710"],"import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {\n    Avatar,\n    Button,\n    Card,\n    CardActions,\n    CardContent,\n    IconButton,\n    Menu,\n    MenuItem,\n    Typography\n} from \"@material-ui/core\";\nimport {Apps, MoreVert} from \"@material-ui/icons\";\nimport {App} from \"../../api/apps\";\nimport {getAppIconUrl} from \"../../utils/app\";\nimport useStyles from \"./style\";\n\n\n\ninterface AppCardPropsType {\n    app: App\n    onStart?: () => void\n    onStop?: () => void\n    enableAutoStart?: () => void\n    disableAutoStart?: () => void\n    onRemove:() => void\n}\n\n\nexport default function AppCard({app, onStart, onStop, enableAutoStart, disableAutoStart,onRemove}: AppCardPropsType) {\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n    const renderMenu = () => {\n        return (\n            <Menu\n                id=\"simple-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n            >\n                {\n                    app.auto_start ?\n                        <MenuItem\n                            onClick={() => {\n                                if (disableAutoStart){\n                                    disableAutoStart()\n                                }\n                                handleClose()\n                            }}\n                        >\n                            Disable autostart\n                        </MenuItem>\n                        :\n                        <MenuItem\n                            onClick={\n                                () => {\n                                    if (enableAutoStart) {\n                                        enableAutoStart()\n                                    }\n                                    handleClose()\n                                }\n                            }\n                        >\n                            Enable autostart\n                        </MenuItem>\n                }\n                <MenuItem\n                    onClick={\n                        () => {\n                            onRemove()\n                            handleClose()\n                        }\n                    }\n                >\n                    Uninstall\n                </MenuItem>\n            </Menu>\n        )\n    }\n    return (\n        <Card className={classes.main}>\n            {renderMenu()}\n            <CardContent>\n                <div className={classes.header}>\n                    <Avatar className={classes.icon}>\n                        <img src={getAppIconUrl(app.id)} className={classes.appicon}  />\n                    </Avatar>\n                    <div className={classes.title}>\n                        {app.name}\n                    </div>\n                    <IconButton onClick={handleClick}>\n                        <MoreVert/>\n                    </IconButton>\n                </div>\n\n                <div className={classes.status}>\n                    {app.status}\n                </div>\n            </CardContent>\n            <CardActions>\n                {\n                    app.status === \"Stop\" &&\n                    <Button size=\"small\" onClick={onStart}>Start</Button>\n                }\n                {\n                    app.status === \"Running\" &&\n                    <Button size=\"small\" onClick={onStop}>Stop</Button>\n                }\n            </CardActions>\n        </Card>\n    );\n}\n","/home/aren/Desktop/YouPlus/ypw/src/components/NewUserDialog/index.tsx",[],"/home/aren/Desktop/YouPlus/ypw/src/components/ListPage/index.tsx",[],"/home/aren/Desktop/YouPlus/ypw/src/components/ChangePasswordDialog/index.tsx",[],"/home/aren/Desktop/YouPlus/ypw/src/components/InstallAppDialog/index.tsx",["711","712","713","714","715","716","717","718","719","720"],"import {Button, Dialog, DialogActions, DialogContent, DialogTitle, Typography} from \"@material-ui/core\";\nimport {ChangeEvent, ReactElement, useEffect, useState} from \"react\";\nimport useStyles from \"./style\";\nimport styled from \"@emotion/styled\";\nimport UploadStep from \"./setp/upload\";\nimport InstallPackInfoStep from \"./setp/confirm\";\nimport {AppPackInfo, installApp, uploadAppPack} from \"../../api/apps\";\n\nexport interface InstallAppDialogPropsType {\n    open?: boolean\n    onClose: () => void\n    onOk: () => void\n}\n\nconst InstallAppDialog = ({onOk, onClose, open = false}: InstallAppDialogPropsType): ReactElement => {\n    const classes = useStyles()\n    const [file, setFile] = useState<File | undefined>()\n    const [stepIndex, setStepIndex] = useState<number>(0)\n    const [isUpload,setIsUpload] = useState(false)\n    const [packInfo,setPackInfo] = useState<AppPackInfo | undefined>()\n    const uploadFile = async () => {\n        if (!file) {\n            return\n        }\n        setIsUpload(true)\n        const result  = await uploadAppPack(file)\n        setIsUpload(false)\n        setPackInfo(result)\n    }\n    const onFinish = async () => {\n        if (!packInfo) {\n            return\n        }\n        await installApp(packInfo.id)\n        onOk()\n    }\n    useEffect(() => {\n        uploadFile()\n    },[file])\n    const renderContent = () => {\n        if (stepIndex == 0) {\n            return (\n                <UploadStep\n                    onFileChange={(file) => {\n                        setFile(file)\n                    }}\n                    filename={file?.name}\n                    isUpload={isUpload}\n                />\n            )\n        }\n        if (stepIndex == 1) {\n            return (\n                <InstallPackInfoStep packInfo={packInfo}/>\n            )\n        }\n    }\n    const getTitleText = () => {\n        switch (stepIndex) {\n            case 0:\n                return \"Install App > Upload\"\n            case 1:\n                return \"Install App > Confirm\"\n        }\n        return \"Install App\"\n    }\n    const isNextDisable = () => {\n        if (stepIndex == 2) {\n            return true\n        }\n        // if (!packInfo && stepIndex == 0) {\n        //     return true\n        // }\n        return false\n    }\n    return (\n        <Dialog open={open} onClose={onClose} maxWidth={\"xl\"}>\n            <DialogTitle>\n                {getTitleText()}\n            </DialogTitle>\n            <DialogContent className={classes.content}>\n                {renderContent()}\n            </DialogContent>\n            <DialogActions className={classes.actions}>\n                <Button\n                    disabled={stepIndex == 0}\n                    onClick={() => {\n                        setStepIndex(stepIndex - 1)\n                    }}\n                >\n                    Previous\n                </Button>\n                <Button\n                    disabled={isNextDisable()}\n                    onClick={() => {\n                        if (stepIndex == 1) {\n                            onFinish()\n                            return\n                        }\n                        setStepIndex(stepIndex + 1)\n                    }}\n                >\n                    {stepIndex == 1 ? \"Install\" : \"Next\" }\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nexport default InstallAppDialog\n","/home/aren/Desktop/YouPlus/ypw/src/components/ImageInfoCard/index.tsx",["721"],"import {ReactElement} from \"react\";\nimport {Paper} from \"@material-ui/core\";\nimport useStyles from \"./style\";\nimport DiskIcon from \"../Icons/DiskIcon\";\n\nexport interface ImageInfoCardPropsType {\n    icon?:any\n    text:string\n}\n\nconst ImageInfoCard = ({icon,text}: ImageInfoCardPropsType): ReactElement => {\n    const classes = useStyles()\n    return (\n        <Paper className={classes.root}>\n            {icon}\n            <div className={classes.text}>\n                {text}\n            </div>\n        </Paper>\n    )\n}\n\nexport default ImageInfoCard\n","/home/aren/Desktop/YouPlus/ypw/src/components/ListItemDialog/index.tsx",["722"],"import React, {ReactElement} from \"react\";\nimport {\n    Avatar, Button, Dialog, DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    ListItem,\n    ListItemAvatar,\n    ListItemText\n} from \"@material-ui/core\";\nimport {Dns} from \"@material-ui/icons\";\nimport useStyles from \"./style\";\n\nexport interface ListItemDialogPropsType {\n    open?: boolean\n    primary: string\n    secondary?: string\n    icon: ReactElement,\n    onClose: () => void\n    title: string\n    onOk: () => void\n    okText?: string,\n    text?:string\n}\n\nconst ListItemDialog = ({\n                            primary,\n                            icon,\n                            secondary,\n                            onOk,\n                            onClose,\n                            title,\n    text,\n                            okText = \"OK\",\n                            open = false\n                        }: ListItemDialogPropsType) => {\n    const classes = useStyles()\n    return (\n        <Dialog open={open} maxWidth={\"xl\"} onClose={onClose}>\n            <DialogTitle>\n                {title}\n            </DialogTitle>\n            <DialogContent className={classes.deleteDialogContent}>\n                <DialogContentText>\n                    {text}\n                </DialogContentText>\n                <ListItem className={classes.deleteDialogItem}>\n                    <ListItemAvatar>\n                        <Avatar>\n                            {icon}\n                        </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText primary={primary} secondary={secondary}/>\n                </ListItem>\n            </DialogContent>\n            <DialogActions>\n                <Button color={\"secondary\"} onClick={onClose}>\n                    Cancel\n                </Button>\n                <Button color={\"secondary\"} onClick={onOk}>\n                    {okText}\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nexport default ListItemDialog;\n","/home/aren/Desktop/YouPlus/ypw/src/components/CreateZFSPoolDialog/index.tsx",["723"],"import {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Divider,\n    TextField,\n    Typography\n} from \"@material-ui/core\";\nimport React, {useEffect, useState} from \"react\";\nimport useStyles from \"./style\";\nimport clsx from \"clsx\";\nimport DiskSelectField from \"../DiskSelectField\";\nimport {Disk, fetchDisks} from \"../../api/disks\";\n\nexport interface CreateZFSPoolDialogPropsType {\n    open?: boolean\n    onOk?:(form : CreateZFSPoolForm) => void\n    onClose?:() => void\n}\nexport interface CreateZFSPoolForm {\n    name :string\n    disks:string[]\n}\nconst CreateZFSPoolDialog = ({onClose,onOk,open = false}: CreateZFSPoolDialogPropsType) => {\n    const classes = useStyles()\n    const [pickUpDisks,setPickUpDisks] = useState<Disk[]>([])\n\n    const [disks,setDisks] = useState<Disk[]>([])\n    const [name,setName] = useState<string | undefined>()\n    const loadDisks = async () => {\n        const response = await fetchDisks()\n        if (response) {\n            setPickUpDisks(response.disks)\n        }\n    }\n    useEffect(() => {\n        loadDisks()\n    },[])\n    const onDialogOk = () => {\n        if (name === undefined || disks.length === 0) {\n            return\n        }\n        if (onOk) {\n            onOk({\n                name,\n                disks:disks.map(it => it.name)\n            })\n        }\n    }\n    return (\n        <Dialog open={open} maxWidth={\"lg\"} onClose={onClose}>\n            <DialogTitle>\n                Create new pool\n            </DialogTitle>\n            <DialogContent className={classes.content}>\n                <TextField variant={\"outlined\"} label={\"Pool name\"} fullWidth onChange={(e) => setName(e.target.value)} size={\"small\"}/>\n                <Divider className={classes.divider}/>\n                <div className={clsx(classes.field,classes.fieldArea)}>\n                    <div className={classes.label}>\n                        disks\n                    </div>\n                    <DiskSelectField disks={pickUpDisks} onChange={(d) => setDisks(d)}/>\n                </div>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={onDialogOk}>Create</Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nexport default CreateZFSPoolDialog;\n","/home/aren/Desktop/YouPlus/ypw/src/layout/Auth/index.tsx",[],"/home/aren/Desktop/YouPlus/ypw/src/components/NewShareDialog/index.tsx",["724"],"import React, {useState} from \"react\";\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogProps,\n    DialogTitle,\n    Step,\n    StepLabel,\n    Stepper\n} from \"@material-ui/core\";\nimport useStyles from \"./style\";\nimport ShareInfoStep, {InfoForm} from \"./step/info\";\nimport StorageStep from \"./step/storage\";\nimport {UsersForm} from \"./step/users\";\nimport CompleteStep from \"./step/complete\";\nimport {useForm} from \"./hook\";\nimport {Storage} from \"../../api/storage\";\n\nexport interface NewShareDialogPropsType {\n    onCreateShare: (data: any) => void\n}\n\nconst steps = [\n    \"info\", \"storage\", \"complete\"\n]\nconst NewShareDialog = ({onCreateShare, ...other}: NewShareDialogPropsType & DialogProps) => {\n    const [index, setIndex] = useState<number>(0)\n    const [selectStorage, setSelectStorage] = useState<Storage | undefined>()\n    const usersFormController = useForm<UsersForm>({\n        folderPublic: true\n    })\n    const infoForm = useForm<InfoForm>({})\n    const classes = useStyles()\n    const renderStepContent = () => {\n        switch (index) {\n            case 0:\n                return <ShareInfoStep controller={infoForm}/>\n            case 1:\n                return <StorageStep selectedStorage={selectStorage} onSelect={(part) => setSelectStorage(part)}/>\n            case 2:\n                return <CompleteStep\n                    name={infoForm.form.name}\n                    access={usersFormController.form.folderPublic ? \"Allow guest\" : \"Not allow guest\"}\n                    storage={selectStorage?.id}\n                    validateUsers={\n                        (usersFormController.form.readUsers ?? []).join(\",\")\n                    }\n                    writeUsers={\n                        (usersFormController.form.writeUsers ?? []).join(\",\")\n                    }\n                />\n            default:\n                return (<></>)\n        }\n    }\n    const validate = () => {\n        if (\n            infoForm.form.name === undefined ||\n            selectStorage == undefined\n        ) {\n            return false\n        }\n        return true\n    }\n    const onCreate = () => {\n        if (!validate()) {\n            return\n        }\n        const data = {\n            name: infoForm.form.name,\n            public: usersFormController.form.folderPublic,\n            storageId: selectStorage?.id\n        }\n        onCreateShare(data)\n\n    }\n    return (\n        <Dialog {...other} maxWidth={\"xl\"}>\n            <DialogTitle>\n                New Share\n                <Stepper activeStep={index} className={classes.stepper}>\n                    {\n                        steps.map((label, index) => {\n                            return (\n                                <Step key={index}>\n                                    <StepLabel>{label}</StepLabel>\n                                </Step>\n                            )\n                        })\n                    }\n                </Stepper>\n            </DialogTitle>\n            <DialogContent className={classes.content}>\n\n                <div className={classes.stepContent}>\n                    {renderStepContent()}\n                </div>\n            </DialogContent>\n            <DialogActions>\n                <Button\n                    disabled={index < 1}\n                    onClick={() => setIndex(index - 1)}\n                >Previous</Button>\n                {\n                    index === steps.length - 1 && <Button onClick={() => onCreate()}>Create</Button>\n                }\n                {\n                    index !== steps.length - 1 && <Button\n                        onClick={() => setIndex(index + 1)}\n                    >\n                        Next\n                    </Button>\n                }\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nexport default NewShareDialog;\n","/home/aren/Desktop/YouPlus/ypw/src/components/DiskCard/index.tsx",["725"],"import {Avatar, ButtonBase, Card, Paper} from \"@material-ui/core\";\nimport {ReactElement} from \"react\";\nimport useStyles from \"./style\";\nimport DiskIcon from \"../Icons/DiskIcon\";\nimport clsx from \"clsx\";\nimport {Disk} from \"../../api/disks\";\n\nexport interface DiskCardPropsType {\n    className?:string\n    disk:Disk\n    onClick:() => void\n}\n\nconst DiskCard = ({className,disk,onClick}: DiskCardPropsType): ReactElement => {\n    const classes = useStyles()\n    return (\n\n        <Paper className={clsx(className,)}>\n            <ButtonBase className={classes.root} onClick={onClick}>\n                <div className={classes.info}>\n                    <div>\n                        { disk.name }\n                    </div>\n                    <div className={classes.model}>\n                        { disk.model }\n                    </div>\n                </div>\n                <Avatar className={classes.avatar}>\n                    <DiskIcon />\n                </Avatar>\n            </ButtonBase>\n\n        </Paper>\n    )\n}\n\nexport default DiskCard\n","/home/aren/Desktop/YouPlus/ypw/src/layout/Base/parts/Tool/index.tsx",["726","727","728","729","730","731"],"import Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport * as React from \"react\";\nimport useStyles from \"./style\";\nimport {Avatar, ButtonBase, IconButton, Menu, MenuItem, useMediaQuery} from \"@material-ui/core\";\nimport {MenuOutlined, Person} from \"@material-ui/icons\";\nimport useUserModel from \"../../../../model/user\";\nimport {useHistory} from \"react-router-dom\";\nimport TaskPopup from \"../Task\";\nimport UserPopup from \"../../../../components/UserPopup\";\nimport theme from \"../../../../theme\";\nimport useLayoutModel from \"../../../../model/layout\";\n\nexport interface AppToolbarPropsType {\n\n}\n\nconst AppToolbar = ({}: AppToolbarPropsType) => {\n    const classes = useStyles()\n    const [userMenuEl, setUserMenuEl] = React.useState(null);\n    const userModel = useUserModel()\n    const layoutModel = useLayoutModel()\n    const collapse = useMediaQuery(theme.breakpoints.down('md'));\n    const history = useHistory()\n    const handleUserMenuClick = (event:any) => {\n        setUserMenuEl(event.currentTarget);\n    };\n\n    const handleUserMenuClose = () => {\n        setUserMenuEl(null);\n    };\n    const getUsername = () => {\n        const username = localStorage.getItem(\"username\")\n        if (username) {\n            return username\n        }\n        return \"Unknown\"\n    }\n    const onLogout = () => {\n        userModel.logout()\n        history.push(\"/\")\n    }\n    return (\n        <Toolbar>\n            <UserPopup\n                username={getUsername()}\n                open={Boolean(userMenuEl)}\n                anchorEl={userMenuEl}\n                onClose={handleUserMenuClose}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n                onLogout={onLogout}\n            />\n            {\n                collapse &&\n                <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" onClick={() => layoutModel.setShowNav(true)}>\n                    <MenuOutlined />\n                </IconButton>\n            }\n\n            <Typography variant=\"h6\" noWrap component=\"div\" className={classes.title}>\n                YouPlus\n            </Typography>\n            <TaskPopup className={classes.actionIcon} />\n            <Avatar className={classes.avatar} onClick={handleUserMenuClick}>\n                { getUsername()[0] }\n            </Avatar>\n        </Toolbar>\n    )\n}\n\nexport default AppToolbar;\n","/home/aren/Desktop/YouPlus/ypw/src/layout/Base/parts/Nav/index.tsx",["732"],"import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport {Apps, Archive, Assignment, Dashboard, Dns, Folder, Group, Person, Settings, Storage} from \"@material-ui/icons\";\nimport {useHistory} from \"react-router-dom\";\nimport {useUpdate} from \"ahooks\";\nimport {ListSubheader, useMediaQuery} from \"@material-ui/core\";\nimport theme from \"../../../../theme\";\nimport useLayoutModel from \"../../../../model/layout\";\n\nconst drawerWidth = 240;\nconst useStyles = makeStyles({\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n        boxSizing: 'border-box',\n    },\n    drawerContainer: {\n        overflow: 'auto',\n    },\n});\n\ninterface AppNavigationPropsType {\n\n}\n\n\nexport default function AppNavigation({}: AppNavigationPropsType) {\n    const classes = useStyles();\n    const history = useHistory();\n    const update = useUpdate();\n    const layoutModel = useLayoutModel()\n    const collapse = useMediaQuery(theme.breakpoints.down('md'));\n    const changeUrl = (urlPath: string) => {\n        layoutModel.setShowNav(false)\n        if (history.location.pathname !== urlPath) {\n            history.replace(urlPath)\n            update()\n        }\n    }\n    return (\n        <Drawer\n            className={classes.drawer}\n            variant={collapse?'temporary' :\"permanent\"}\n            classes={{\n                paper: classes.drawerPaper,\n            }}\n            open={layoutModel.showNav}\n            onClose={() => layoutModel.setShowNav(false)}\n        >\n            <Toolbar/>\n            <div className={classes.drawerContainer}>\n                <List\n                    subheader={\n                        <ListSubheader component=\"div\">\n                            General\n                        </ListSubheader>\n                    }\n                >\n                    <ListItem\n                        button\n                        key={\"dashboard\"}\n                        selected={history.location.pathname === \"/home\"}\n                        onClick={() => changeUrl(\"/home\")}\n                    >\n                        <ListItemIcon>\n                            <Dashboard/>\n                        </ListItemIcon>\n                        <ListItemText primary={\"Dashboard\"}/>\n                    </ListItem>\n                    <ListItem\n                        button\n                        key={\"apps\"}\n                        selected={history.location.pathname === \"/apps\"}\n                        onClick={() => changeUrl(\"/apps\")}\n                    >\n                        <ListItemIcon>\n                            <Apps/>\n                        </ListItemIcon>\n                        <ListItemText primary={\"Apps\"}/>\n                    </ListItem>\n                </List>\n                <List\n                    subheader={\n                        <ListSubheader component=\"div\">\n                            Data\n                        </ListSubheader>\n                    }\n                >\n\n                    <ListItem\n                        button\n                        key={\"disks\"}\n                        selected={history.location.pathname === \"/disks\"}\n                        onClick={() => changeUrl(\"/disks\")}\n                    >\n                        <ListItemIcon>\n                            <Storage/>\n                        </ListItemIcon>\n                        <ListItemText primary={\"Disks\"}/>\n                    </ListItem>\n                    {/*<ListItem*/}\n                    {/*    button*/}\n                    {/*    key={\"parts\"}*/}\n                    {/*    selected={history.location.pathname === \"/parts\"}*/}\n                    {/*    onClick={() => changeUrl(\"/parts\")}*/}\n                    {/*>*/}\n                    {/*    <ListItemIcon>*/}\n                    {/*        <Inbox/>*/}\n                    {/*    </ListItemIcon>*/}\n                    {/*    <ListItemText primary={\"Parts\"}/>*/}\n                    {/*</ListItem>*/}\n                    <ListItem\n                        button\n                        key={\"zfs\"}\n                        selected={history.location.pathname === \"/zfs\"}\n                        onClick={() => changeUrl(\"/zfs\")}\n                    >\n                        <ListItemIcon>\n                            <Dns/>\n                        </ListItemIcon>\n                        <ListItemText primary={\"ZFS\"}/>\n                    </ListItem>\n                    <ListItem\n                        button\n                        key={\"storage\"}\n                        selected={history.location.pathname === \"/storage\"}\n                        onClick={() => changeUrl(\"/storage\")}\n                    >\n                        <ListItemIcon>\n                            <Archive/>\n                        </ListItemIcon>\n                        <ListItemText primary={\"Storage\"}/>\n                    </ListItem>\n                    <ListItem\n                        button\n                        key={\"shareFolder\"}\n                        selected={history.location.pathname === \"/folders\"}\n                        onClick={() => changeUrl(\"/folders\")}\n                    >\n                        <ListItemIcon>\n                            <Folder/>\n                        </ListItemIcon>\n                        <ListItemText primary={\"Share Folders\"}/>\n                    </ListItem>\n                </List>\n                <List\n                    subheader={\n                        <ListSubheader component=\"div\">\n                            System\n                        </ListSubheader>\n                    }\n                >\n                    <ListItem\n                        button\n                        key={\"users\"}\n                        selected={history.location.pathname === \"/users\"}\n                        onClick={() => changeUrl(\"/users\")}\n                    >\n                        <ListItemIcon>\n                            <Person/>\n                        </ListItemIcon>\n                        <ListItemText primary={\"Users\"}/>\n                    </ListItem>\n                    <ListItem\n                        button\n                        key={\"groups\"}\n                        selected={history.location.pathname === \"/groups\"}\n                        onClick={() => changeUrl(\"/groups\")}\n                    >\n                        <ListItemIcon>\n                            <Group/>\n                        </ListItemIcon>\n                        <ListItemText primary={\"Groups\"}/>\n                    </ListItem>\n                </List>\n                <List\n                    subheader={\n                        <ListSubheader component=\"div\">\n                            My\n                        </ListSubheader>\n                    }\n                >\n                    <ListItem\n                        button\n                        key={\"account\"}\n                        selected={history.location.pathname === \"/my/account\"}\n                        onClick={() => changeUrl(\"/my/account\")}\n                    >\n                        <ListItemIcon>\n                            <Assignment/>\n                        </ListItemIcon>\n                        <ListItemText primary={\"Account\"}/>\n                    </ListItem>\n                </List>\n\n                <List\n                    subheader={\n                        <ListSubheader component=\"div\">\n                            System\n                        </ListSubheader>\n                    }\n                >\n                    <ListItem\n                        button\n                        key={\"system\"}\n                        selected={history.location.pathname === \"/system\"}\n                        onClick={() => changeUrl(\"/system\")}\n                    >\n                        <ListItemIcon>\n                            <Settings />\n                        </ListItemIcon>\n                        <ListItemText primary={\"System\"}/>\n                    </ListItem>\n                </List>\n\n            </div>\n        </Drawer>\n    );\n}\n","/home/aren/Desktop/YouPlus/ypw/src/components/ListPage/style.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/components/NewUserDialog/style.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/components/AppCard/style.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/components/ImageInfoCard/style.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/components/NewShareDialog/hook.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/layout/Base/parts/Tool/style.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/components/NewShareDialog/style.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/components/CreateZFSPoolDialog/style.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/components/DiskCard/style.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/components/ListItemDialog/style.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/components/ChangePasswordDialog/style.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/utils/app.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/components/InstallAppDialog/style.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/components/NewShareDialog/step/info/index.tsx",[],"/home/aren/Desktop/YouPlus/ypw/src/components/UserPopup/index.tsx",["733"],"import useStyles from \"./style\";\nimport {Avatar, Button, ButtonBase, Card, Divider, Popover, PopoverProps, Typography} from \"@material-ui/core\";\nimport {Person} from \"@material-ui/icons\";\n\nexport interface UserPopupPropsType  {\n    username: string\n    onLogout: () => void\n}\n\nconst UserPopup = ({onLogout,username,...other}: UserPopupPropsType & PopoverProps) => {\n    const classes = useStyles()\n    return (\n        <Popover {...other}>\n            <Card className={classes.root}>\n                <Avatar className={classes.avatar} >\n                    <Person />\n                </Avatar>\n                <Typography variant={\"h5\"}>\n                    {username}\n                </Typography>\n                <Divider/>\n                <Button variant={\"outlined\"} onClick={onLogout}>\n                    Sign out\n                </Button>\n            </Card>\n        </Popover>\n    )\n}\n\nexport default UserPopup;\n","/home/aren/Desktop/YouPlus/ypw/src/components/NewShareDialog/step/storage/index.tsx",["734","735","736","737","738"],"import React, {useEffect, useState} from \"react\";\nimport {fetchParts, Part} from \"../../../../api/disks\";\nimport {Avatar, List, ListItem, ListItemAvatar, ListItemText} from \"@material-ui/core\";\nimport {Inbox} from \"@material-ui/icons\";\nimport useStyles from \"./style\";\nimport usePartsPageModel from \"../../../../pages/Parts/model\";\nimport useStorageModel from \"../../../../pages/Storage/model\";\nimport {Storage} from \"../../../../api/storage\";\n\nexport interface StorageStepPropsType {\n    selectedStorage?:Storage\n    onSelect:(storage:Storage) => void\n}\nconst StorageStep = ({onSelect,selectedStorage}: StorageStepPropsType) => {\n    const classes = useStyles()\n    const partsModel = usePartsPageModel()\n    const storageModel = useStorageModel()\n    useEffect(() => {\n        storageModel.init()\n    },[])\n    return (\n        <div className={classes.root}>\n\n            <List>\n                {\n                    storageModel.storages.map(storage => {\n                        return (\n                            <ListItem\n                                key={storage.id}\n                                button\n                                selected={selectedStorage?.id === storage.id}\n                                onClick={() => onSelect(storage)}\n                            >\n                                <ListItemAvatar>\n                                    <Avatar className={classes.avatar}>\n                                        <Inbox />\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText primary={storage.id} secondary={storage.type}/>\n                            </ListItem>\n                        )\n                    })\n                }\n            </List>\n        </div>\n    )\n}\n\nexport default StorageStep;\n","/home/aren/Desktop/YouPlus/ypw/src/components/InstallAppDialog/setp/upload/index.tsx",[],"/home/aren/Desktop/YouPlus/ypw/src/components/InstallAppDialog/setp/confirm/index.tsx",["739","740","741","742","743","744","745","746","747"],"import useStyles from './style'\nimport clsx from 'clsx'\nimport React from \"react\";\nimport {Avatar, Divider, List, ListItem, ListItemAvatar, ListItemText, Typography} from \"@material-ui/core\";\nimport {AppPackInfo} from \"../../../../api/apps\";\nimport {AppsRounded, ArchiveRounded, LinkOffRounded, LinkRounded} from \"@material-ui/icons\";\n\nexport interface InstallPackInfoStepPropsType {\n    className?: string\n    packInfo?:AppPackInfo\n}\n\nconst InstallPackInfoStep = ({className,packInfo}: InstallPackInfoStepPropsType): React.ReactElement => {\n    const classes = useStyles()\n    console.log(packInfo)\n    if (!packInfo) {\n        return (\n            <div>\n\n            </div>\n        )\n    }\n    return (\n        <div>\n            <List>\n                <ListItem>\n                    <ListItemText primary={packInfo.appName} secondary={\"app name\"} />\n                </ListItem>\n                <Divider />\n                <ListItem>\n                    <ListItemText primary={packInfo.name} secondary={\"package name\"} />\n                </ListItem>\n                <Divider />\n                <ListItem>\n                    <ListItemText primary={packInfo.type} secondary={\"install as\"} />\n                </ListItem>\n            </List>\n        </div>\n    )\n}\n\nexport default InstallPackInfoStep\n","/home/aren/Desktop/YouPlus/ypw/src/layout/Base/parts/Task/index.tsx",["748"],"import useStyles from \"./style\";\nimport {IconButton, Paper, Popover, Typography} from \"@material-ui/core\";\nimport {Report, ViewDay} from \"@material-ui/icons\";\nimport {SyntheticEvent, useState} from \"react\";\nimport clsx from \"clsx\";\nimport InstallAppTaskCard from \"../../../../components/InstallAppTaskCard\";\nimport useTaskModel from \"../../../../model/task\";\nimport {useInterval} from \"ahooks\";\nimport task from \"../../../../model/task\";\n\nexport interface TaskPopupPropsType {\n    className?:any\n}\n\nconst TaskPopup = ({className}: TaskPopupPropsType) => {\n    const classes = useStyles()\n    const taskModel = useTaskModel()\n    useInterval(() => {\n       taskModel.refresh()\n    },2000)\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const handleClick = (event:SyntheticEvent<any>) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const open = Boolean(anchorEl);\n    const id = open ? 'simple-popover' : undefined;\n    return (\n        <>\n            <IconButton onClick={handleClick} className={clsx(className,classes.root)}>\n                <ViewDay />\n            </IconButton>\n            <Popover\n                id={id}\n                open={open}\n                anchorEl={anchorEl}\n                onClose={handleClose}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'center',\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'center',\n                }}\n            >\n               <Paper className={classes.content}>\n                   {\n                       taskModel.tasks.length > 0 && taskModel.tasks.map(it => {\n                           return (\n                               <InstallAppTaskCard className={classes.item} task={it}/>\n                           )\n                       })\n                   }\n                   {\n                       taskModel.tasks.length === 0 &&\n                           <div className={classes.empty}>\n                               <Report className={classes.icon}/>\n                               <Typography variant={\"subtitle1\"}>\n                                   No task\n                               </Typography>\n                           </div>\n                   }\n               </Paper>\n            </Popover>\n        </>\n    )\n}\n\nexport default TaskPopup;\n","/home/aren/Desktop/YouPlus/ypw/src/components/NewShareDialog/step/complete/index.tsx",[],"/home/aren/Desktop/YouPlus/ypw/src/components/DiskSelectField/index.tsx",["749","750","751","752","753","754","755"],"import React, {useEffect, useState} from \"react\";\nimport {useDynamicList} from \"ahooks\";\nimport {Chip, FormControl, IconButton, InputLabel, MenuItem, Select, Typography} from \"@material-ui/core\";\nimport {Add, Storage} from \"@material-ui/icons\";\nimport useStyles from \"./style\";\nimport {Disk} from \"../../api/disks\";\nimport filesize from \"filesize\";\n\nexport interface DiskSelectFieldPropsType {\n    disks?:Disk[]\n    onChange?: (disks : Disk[]) => void\n    initValue?:Disk[]\n}\n\nconst DiskSelectField = ({onChange,disks = [],initValue = []}: DiskSelectFieldPropsType) => {\n    const disksController = useDynamicList<Disk>(initValue);\n\n    const getSelectOption = ():Disk[] => {\n        return disks.filter(it => disksController.list.find(selected => selected.name === it.name) === undefined)\n    }\n    const classes = useStyles()\n    useEffect(() => {\n        if (onChange) {\n            onChange(disksController.list)\n        }\n    },[disksController.list])\n\n    return (\n        <div>\n            <div>\n                {\n                    disksController.list.map(it => {\n                        return (\n                            <Chip\n                                label={`${it.model} | ${it.name} | ${filesize(Number(it.size))}`}\n                                key={it.name}\n                                className={classes.chip}\n                                color={'primary'}\n                                icon={<Storage />}\n                                onDelete={() => {\n                                    const index = disksController.list.indexOf(it)\n                                    if (index !== -1) {\n                                        disksController.remove(index)\n                                    }\n                                }}\n                            />\n                        )\n                    })\n                }\n            </div>\n            <div>\n                <Select\n                    className={classes.select}\n                    variant=\"outlined\"\n                    size=\"small\"\n                    fullWidth\n                    onChange={(e) => {\n                        if (disksController.list.find(it => it.name ===  e.target.value) === undefined){\n                            const target = disks.find(it => it.name ===  e.target.value)\n                            if (target) {\n                                disksController.push(target)\n                            }\n                        }\n                    }}\n\n                >\n                    {\n                        getSelectOption().map(disk => {\n                            return (\n                                <MenuItem value={disk.name}>{`${disk.model} | ${disk.name} | ${filesize(Number(disk.size))}`}</MenuItem>\n                            )\n                        })\n                    }\n                </Select>\n            </div>\n        </div>\n    )\n}\n\nexport default DiskSelectField;\n","/home/aren/Desktop/YouPlus/ypw/src/components/NewShareDialog/step/info/style.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/components/NewShareDialog/step/storage/style.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/model/task.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/components/NewShareDialog/step/complete/style.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/components/InstallAppDialog/setp/confirm/style.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/components/InstallAppDialog/setp/upload/style.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/components/UserPopup/style.tsx",[],"/home/aren/Desktop/YouPlus/ypw/src/components/DiskSelectField/style.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/layout/Base/parts/Task/style.tsx",[],"/home/aren/Desktop/YouPlus/ypw/src/api/task.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/components/InstallAppTaskCard/index.tsx",[],"/home/aren/Desktop/YouPlus/ypw/src/components/ValueField/index.tsx",[],"/home/aren/Desktop/YouPlus/ypw/src/components/ValueField/style.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/components/InstallAppTaskCard/style.tsx",[],"/home/aren/Desktop/YouPlus/ypw/src/pages/DiskDetail/index.tsx",["756","757","758"],"import useStyles from \"./style\";\nimport {\n    Divider,\n    Paper,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Typography\n} from \"@material-ui/core\";\nimport React, {useEffect} from \"react\";\nimport {useParams} from \"react-router-dom\";\nimport useDiskDetailModel from \"./model\";\n\nexport interface DiskDetailPagePropsType {\n\n}\n\nconst DiskDetailPage = ({}: DiskDetailPagePropsType) => {\n    const classes = useStyles()\n    const {name}: any = useParams();\n    const model = useDiskDetailModel()\n    useEffect(() => {\n        model.setName(name)\n        model.loadInfo(name)\n    }, [])\n    return (\n        <div className={classes.root}>\n            <Typography variant={\"h4\"} className={classes.title}>\n                {model.name}\n            </Typography>\n            <Paper className={classes.section} elevation={1}>\n                <div className={classes.tableSectionHeader}>\n                    <Typography variant={\"subtitle1\"}>\n                        Base info\n                    </Typography>\n                </div>\n                <Divider/>\n                <Table>\n                    <TableBody>\n                        <TableRow>\n                            <TableCell>\n                                ModelFamily\n                            </TableCell>\n                            <TableCell>\n                                {model.info?.modelFamily}\n                            </TableCell>\n                        </TableRow>\n                        <TableRow>\n                            <TableCell>\n                                ModelName\n                            </TableCell>\n                            <TableCell>\n                                {model.info?.modelName}\n                            </TableCell>\n                        </TableRow>\n                        <TableRow>\n                            <TableCell>\n                                SerialNumber\n                            </TableCell>\n                            <TableCell>\n                                {model.info?.serialNumber}\n                            </TableCell>\n                        </TableRow>\n                    </TableBody>\n                </Table>\n            </Paper>\n            <Paper className={classes.section} elevation={1}>\n                <div className={classes.tableSectionHeader}>\n                    <Typography variant={\"subtitle1\"}>\n                        SMART\n                    </Typography>\n                </div>\n                <Divider/>\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>\n                                ID\n                            </TableCell>\n                            <TableCell>\n                                Name\n                            </TableCell>\n                            <TableCell>\n                                Value\n                            </TableCell>\n                            <TableCell>\n                                Worst\n                            </TableCell>\n                            <TableCell>\n                                Threshold\n                            </TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {\n                            (model.info?.attrs ?? []).map(attr => {\n                                return (\n                                    <TableRow key={attr.id}>\n                                        <TableCell>\n                                            { attr.id }\n                                        </TableCell>\n                                        <TableCell>\n                                            { attr.name }\n                                        </TableCell>\n                                        <TableCell>\n                                            { attr.value }\n                                        </TableCell>\n                                        <TableCell>\n                                            { attr.worst }\n                                        </TableCell>\n                                        <TableCell>\n                                            { attr.threshold }\n                                        </TableCell>\n                                    </TableRow>\n                                )\n                            },[])\n                        }\n                    </TableBody>\n                </Table>\n            </Paper>\n        </div>\n    )\n}\n\nexport default DiskDetailPage;\n","/home/aren/Desktop/YouPlus/ypw/src/pages/DiskDetail/model.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/pages/DiskDetail/style.tsx",[],"/home/aren/Desktop/YouPlus/ypw/src/components/IconStatCard/index.tsx",["759"],"/home/aren/Desktop/YouPlus/ypw/src/components/IconStatCard/style.tsx",[],"/home/aren/Desktop/YouPlus/ypw/src/pages/DashBoard/part/SystemInfoCard/index.tsx",[],"/home/aren/Desktop/YouPlus/ypw/src/pages/DashBoard/part/SystemInfoCard/style.tsx",[],"/home/aren/Desktop/YouPlus/ypw/src/api/system.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/pages/DashBoard/part/CpuMonitorCard/index.tsx",["760","761","762","763","764","765","766"],"import React from 'react'\nimport useStyles from \"./style\";\nimport {Divider, Grid, Paper, Table, TableBody, TableCell, TableRow, Typography} from \"@material-ui/core\";\nimport clsx from \"clsx\";\nimport {Bar, Pie, Progress, RingProgress} from '@ant-design/charts';\nimport {CpuStat} from \"../../../../api/system\";\n\nexport interface CpuMonitorCardPropsType {\n    className?: string\n    cpu: CpuStat\n}\n\nconst CpuMonitorCard = ({className, cpu}: CpuMonitorCardPropsType) => {\n    const classes = useStyles()\n    const getUsage = () => {\n        if (cpu.total == 0) {\n            return 0\n        }\n        return (cpu.user + cpu.system + cpu.iowait) / cpu.total\n    }\n    var config = {\n        height: 160,\n        width: 160,\n        autoFit: false,\n        percent: getUsage(),\n        color: ['#00701a', '#E8EDF3'],\n    };\n    return (\n        <Paper className={clsx(classes.root, className)}>\n            <div className={classes.header}>\n                <Typography variant={\"subtitle1\"}>\n                    CPU\n                </Typography>\n            </div>\n            <Divider/>\n            <Grid container className={classes.content}>\n                <Grid item className={classes.chart} xs={12} sm={12} md={12} lg={4} xl={4}>\n                    <RingProgress {...config} />\n                </Grid>\n                <Grid item className={classes.chart} xs={12} sm={12} md={12} lg={4} xl={4}>\n                    <Pie\n                        label={\n                            null\n                        }\n                        innerRadius={0.8}\n                        width={160}\n                        height={160}\n                        angleField={'value'}\n                        colorField={'label'}\n                        data={[\n                            {\n                                label: \"system\",\n                                value: cpu.system\n                            },\n                            {\n                                label: \"user\",\n                                value: cpu.user\n                            },\n                            {\n                                label: \"iowait\",\n                                value: cpu.iowait\n                            }\n                        ]}\n                    />\n                </Grid>\n                <Grid className={classes.info} xs={12} sm={12} md={12} lg={4} xl={4}>\n                    <div className={classes.item}>\n                        <div className={classes.label}>\n                            Idle\n                        </div>\n                        <div className={classes.value}>\n                            {cpu.idle}\n                        </div>\n                    </div>\n                    <div className={classes.item}>\n                        <div className={classes.label}>\n                            Total\n                        </div>\n                        <div className={classes.value}>\n                            {cpu.total}\n                        </div>\n                    </div>\n                    <div className={classes.item}>\n                        <div className={classes.label}>\n                            User\n                        </div>\n                        <div className={classes.value}>\n                            {cpu.user}\n                        </div>\n                    </div>\n                    <div className={classes.item}>\n                        <div className={classes.label}>\n                            System\n                        </div>\n                        <div className={classes.value}>\n                            {cpu.system}\n                        </div>\n                    </div>\n                </Grid>\n            </Grid>\n\n        </Paper>\n    )\n}\n\nexport default CpuMonitorCard;\n","/home/aren/Desktop/YouPlus/ypw/src/pages/DashBoard/part/CpuMonitorCard/style.tsx",[],"/home/aren/Desktop/YouPlus/ypw/src/pages/DashBoard/part/MemoryMonitorCard/index.tsx",["767"],"import useStyles from \"./style\";\nimport {Divider, Grid, Paper, Typography} from \"@material-ui/core\";\nimport clsx from \"clsx\";\nimport {RingProgress} from \"@ant-design/charts\";\nimport React from \"react\";\nimport {Memory, MemoryStat} from \"../../../../api/system\";\nimport filesize from \"filesize\";\n\nexport interface MemoryMonitorCardPropsType {\n    className?:string\n    memory:MemoryStat\n}\n\nconst MemoryMonitorCard = ({ className,memory }: MemoryMonitorCardPropsType) => {\n    const classes = useStyles()\n    var config = {\n        height: 160,\n        width: 160,\n        autoFit: false,\n        percent: (memory.used) / memory.total,\n        color: ['#00701a', '#E8EDF3'],\n    };\n    return (\n        <Paper className={clsx(classes.root,className)}>\n            <div className={classes.header}>\n                <Typography variant={\"subtitle1\"}>\n                    Memory\n                </Typography>\n            </div>\n            <Divider />\n            <Grid container className={classes.content}>\n                <Grid item className={classes.chart} xs={12} sm={12} md={12} lg={6} xl={6}>\n                    <RingProgress {...config} />\n                </Grid>\n                <Grid item className={classes.info} xs={12} sm={12} md={12} lg={6} xl={6}>\n                    <div className={classes.item}>\n                        <div className={classes.label}>\n                            Total\n                        </div>\n                        <div className={classes.value}>\n                            { filesize(memory.total) }\n                        </div>\n                    </div>\n                    <div className={classes.item}>\n                        <div className={classes.label}>\n                            Free\n                        </div>\n                        <div className={classes.value}>\n                            { filesize(memory.free) }\n                        </div>\n                    </div>\n                    <div className={classes.item}>\n                        <div className={classes.label}>\n                            Used\n                        </div>\n                        <div className={classes.value}>\n                            { filesize(memory.used) }\n                        </div>\n                    </div>\n                    <div className={classes.item}>\n                        <div className={classes.label}>\n                            System\n                        </div>\n                        <div className={classes.value}>\n                            { filesize(memory.cache) }\n                        </div>\n                    </div>\n                </Grid>\n            </Grid>\n\n        </Paper>\n    )\n}\n\nexport default MemoryMonitorCard;\n","/home/aren/Desktop/YouPlus/ypw/src/pages/DashBoard/part/MemoryMonitorCard/style.tsx",[],{"ruleId":"768","replacedBy":"769"},{"ruleId":"770","replacedBy":"771"},{"ruleId":"772","severity":1,"message":"773","line":7,"column":8,"nodeType":"774","messageId":"775","endLine":7,"endColumn":13},{"ruleId":"772","severity":1,"message":"776","line":2,"column":9,"nodeType":"774","messageId":"775","endLine":2,"endColumn":13},{"ruleId":"772","severity":1,"message":"777","line":2,"column":22,"nodeType":"774","messageId":"775","endLine":2,"endColumn":28},{"ruleId":"778","severity":1,"message":"779","line":30,"column":22,"nodeType":"780","messageId":"781","endLine":30,"endColumn":46},{"ruleId":"782","severity":1,"message":"783","line":39,"column":8,"nodeType":"784","endLine":39,"endColumn":10,"suggestions":"785"},{"ruleId":"772","severity":1,"message":"786","line":1,"column":9,"nodeType":"774","messageId":"775","endLine":1,"endColumn":18},{"ruleId":"772","severity":1,"message":"787","line":11,"column":7,"nodeType":"774","messageId":"775","endLine":11,"endColumn":18},{"ruleId":"772","severity":1,"message":"788","line":3,"column":9,"nodeType":"774","messageId":"775","endLine":3,"endColumn":15},{"ruleId":"772","severity":1,"message":"789","line":3,"column":23,"nodeType":"774","messageId":"775","endLine":3,"endColumn":27},{"ruleId":"772","severity":1,"message":"790","line":3,"column":29,"nodeType":"774","messageId":"775","endLine":3,"endColumn":37},{"ruleId":"772","severity":1,"message":"791","line":3,"column":39,"nodeType":"774","messageId":"775","endLine":3,"endColumn":53},{"ruleId":"772","severity":1,"message":"792","line":3,"column":55,"nodeType":"774","messageId":"775","endLine":3,"endColumn":67},{"ruleId":"772","severity":1,"message":"793","line":4,"column":9,"nodeType":"774","messageId":"775","endLine":4,"endColumn":16},{"ruleId":"772","severity":1,"message":"794","line":4,"column":18,"nodeType":"774","messageId":"775","endLine":4,"endColumn":23},{"ruleId":"778","severity":1,"message":"779","line":12,"column":20,"nodeType":"780","messageId":"781","endLine":12,"endColumn":42},{"ruleId":"782","severity":1,"message":"795","line":17,"column":7,"nodeType":"784","endLine":17,"endColumn":9,"suggestions":"796"},{"ruleId":"778","severity":1,"message":"779","line":24,"column":22,"nodeType":"780","messageId":"781","endLine":24,"endColumn":46},{"ruleId":"782","severity":1,"message":"797","line":30,"column":8,"nodeType":"784","endLine":30,"endColumn":10,"suggestions":"798"},{"ruleId":"778","severity":1,"message":"779","line":35,"column":18,"nodeType":"780","messageId":"781","endLine":35,"endColumn":38},{"ruleId":"782","severity":1,"message":"799","line":43,"column":7,"nodeType":"784","endLine":43,"endColumn":9,"suggestions":"800"},{"ruleId":"801","severity":1,"message":"802","line":1,"column":1,"nodeType":"803","messageId":"781","fix":"804"},{"ruleId":"778","severity":1,"message":"779","line":11,"column":20,"nodeType":"780","messageId":"781","endLine":11,"endColumn":42},{"ruleId":"782","severity":1,"message":"795","line":16,"column":7,"nodeType":"784","endLine":16,"endColumn":9,"suggestions":"805"},{"ruleId":"778","severity":1,"message":"779","line":17,"column":24,"nodeType":"780","messageId":"781","endLine":17,"endColumn":50},{"ruleId":"782","severity":1,"message":"795","line":26,"column":7,"nodeType":"784","endLine":26,"endColumn":9,"suggestions":"806"},{"ruleId":"772","severity":1,"message":"807","line":5,"column":22,"nodeType":"774","messageId":"775","endLine":5,"endColumn":28},{"ruleId":"772","severity":1,"message":"808","line":8,"column":8,"nodeType":"774","messageId":"775","endLine":8,"endColumn":14},{"ruleId":"778","severity":1,"message":"779","line":15,"column":22,"nodeType":"780","messageId":"781","endLine":15,"endColumn":46},{"ruleId":"782","severity":1,"message":"795","line":21,"column":8,"nodeType":"784","endLine":21,"endColumn":10,"suggestions":"809"},{"ruleId":"772","severity":1,"message":"810","line":5,"column":17,"nodeType":"774","messageId":"775","endLine":5,"endColumn":22},{"ruleId":"778","severity":1,"message":"779","line":15,"column":26,"nodeType":"780","messageId":"781","endLine":15,"endColumn":54},{"ruleId":"782","severity":1,"message":"811","line":23,"column":8,"nodeType":"784","endLine":23,"endColumn":10,"suggestions":"812"},{"ruleId":"772","severity":1,"message":"813","line":7,"column":9,"nodeType":"774","messageId":"775","endLine":7,"endColumn":29},{"ruleId":"778","severity":1,"message":"779","line":13,"column":20,"nodeType":"780","messageId":"781","endLine":13,"endColumn":42},{"ruleId":"778","severity":1,"message":"779","line":14,"column":22,"nodeType":"780","messageId":"781","endLine":14,"endColumn":46},{"ruleId":"778","severity":1,"message":"779","line":15,"column":21,"nodeType":"780","messageId":"781","endLine":15,"endColumn":44},{"ruleId":"782","severity":1,"message":"795","line":22,"column":8,"nodeType":"784","endLine":22,"endColumn":10,"suggestions":"814"},{"ruleId":"772","severity":1,"message":"810","line":1,"column":74,"nodeType":"774","messageId":"775","endLine":1,"endColumn":79},{"ruleId":"778","severity":1,"message":"779","line":12,"column":21,"nodeType":"780","messageId":"781","endLine":12,"endColumn":44},{"ruleId":"778","severity":1,"message":"779","line":13,"column":25,"nodeType":"780","messageId":"781","endLine":13,"endColumn":52},{"ruleId":"782","severity":1,"message":"811","line":19,"column":7,"nodeType":"784","endLine":19,"endColumn":9,"suggestions":"815"},{"ruleId":"778","severity":1,"message":"779","line":24,"column":20,"nodeType":"780","messageId":"781","endLine":24,"endColumn":42},{"ruleId":"782","severity":1,"message":"816","line":36,"column":8,"nodeType":"784","endLine":36,"endColumn":10,"suggestions":"817"},{"ruleId":"772","severity":1,"message":"786","line":1,"column":16,"nodeType":"774","messageId":"775","endLine":1,"endColumn":25},{"ruleId":"772","severity":1,"message":"818","line":2,"column":9,"nodeType":"774","messageId":"775","endLine":2,"endColumn":19},{"ruleId":"772","severity":1,"message":"819","line":3,"column":23,"nodeType":"774","messageId":"775","endLine":3,"endColumn":33},{"ruleId":"778","severity":1,"message":"779","line":19,"column":34,"nodeType":"780","messageId":"781","endLine":19,"endColumn":55},{"ruleId":"782","severity":1,"message":"811","line":28,"column":7,"nodeType":"784","endLine":28,"endColumn":9,"suggestions":"820"},{"ruleId":"778","severity":1,"message":"779","line":19,"column":28,"nodeType":"780","messageId":"781","endLine":19,"endColumn":58},{"ruleId":"782","severity":1,"message":"811","line":27,"column":8,"nodeType":"784","endLine":27,"endColumn":10,"suggestions":"821"},{"ruleId":"772","severity":1,"message":"822","line":2,"column":9,"nodeType":"774","messageId":"775","endLine":2,"endColumn":22},{"ruleId":"772","severity":1,"message":"823","line":4,"column":9,"nodeType":"774","messageId":"775","endLine":4,"endColumn":21},{"ruleId":"778","severity":1,"message":"779","line":9,"column":23,"nodeType":"780","messageId":"781","endLine":9,"endColumn":48},{"ruleId":"782","severity":1,"message":"824","line":24,"column":7,"nodeType":"784","endLine":24,"endColumn":9,"suggestions":"825"},{"ruleId":"772","severity":1,"message":"826","line":2,"column":10,"nodeType":"774","messageId":"775","endLine":2,"endColumn":27},{"ruleId":"772","severity":1,"message":"827","line":4,"column":5,"nodeType":"774","messageId":"775","endLine":4,"endColumn":11},{"ruleId":"772","severity":1,"message":"828","line":12,"column":25,"nodeType":"774","messageId":"775","endLine":12,"endColumn":31},{"ruleId":"772","severity":1,"message":"813","line":4,"column":9,"nodeType":"774","messageId":"775","endLine":4,"endColumn":29},{"ruleId":"772","severity":1,"message":"829","line":10,"column":9,"nodeType":"774","messageId":"775","endLine":10,"endColumn":15},{"ruleId":"772","severity":1,"message":"830","line":11,"column":9,"nodeType":"774","messageId":"775","endLine":11,"endColumn":17},{"ruleId":"772","severity":1,"message":"786","line":2,"column":9,"nodeType":"774","messageId":"775","endLine":2,"endColumn":18},{"ruleId":"772","severity":1,"message":"831","line":1,"column":9,"nodeType":"774","messageId":"775","endLine":1,"endColumn":20},{"ruleId":"772","severity":1,"message":"786","line":2,"column":9,"nodeType":"774","messageId":"775","endLine":2,"endColumn":18},{"ruleId":"772","severity":1,"message":"832","line":6,"column":5,"nodeType":"774","messageId":"775","endLine":6,"endColumn":15},{"ruleId":"772","severity":1,"message":"833","line":13,"column":9,"nodeType":"774","messageId":"775","endLine":13,"endColumn":20},{"ruleId":"772","severity":1,"message":"834","line":33,"column":11,"nodeType":"774","messageId":"775","endLine":33,"endColumn":30},{"ruleId":"772","severity":1,"message":"833","line":2,"column":9,"nodeType":"774","messageId":"775","endLine":2,"endColumn":20},{"ruleId":"772","severity":1,"message":"835","line":2,"column":9,"nodeType":"774","messageId":"775","endLine":2,"endColumn":19},{"ruleId":"772","severity":1,"message":"786","line":3,"column":9,"nodeType":"774","messageId":"775","endLine":3,"endColumn":18},{"ruleId":"772","severity":1,"message":"786","line":2,"column":9,"nodeType":"774","messageId":"775","endLine":2,"endColumn":18},{"ruleId":"772","severity":1,"message":"786","line":2,"column":9,"nodeType":"774","messageId":"775","endLine":2,"endColumn":18},{"ruleId":"772","severity":1,"message":"786","line":2,"column":9,"nodeType":"774","messageId":"775","endLine":2,"endColumn":18},{"ruleId":"768","replacedBy":"836"},{"ruleId":"770","replacedBy":"837"},{"ruleId":"772","severity":1,"message":"838","line":3,"column":9,"nodeType":"774","messageId":"775","endLine":3,"endColumn":25},{"ruleId":"772","severity":1,"message":"818","line":2,"column":9,"nodeType":"774","messageId":"775","endLine":2,"endColumn":19},{"ruleId":"772","severity":1,"message":"819","line":12,"column":5,"nodeType":"774","messageId":"775","endLine":12,"endColumn":15},{"ruleId":"772","severity":1,"message":"839","line":14,"column":9,"nodeType":"774","messageId":"775","endLine":14,"endColumn":13},{"ruleId":"840","severity":1,"message":"841","line":96,"column":25,"nodeType":"842","endLine":96,"endColumn":89},{"ruleId":"772","severity":1,"message":"819","line":1,"column":68,"nodeType":"774","messageId":"775","endLine":1,"endColumn":78},{"ruleId":"772","severity":1,"message":"843","line":2,"column":9,"nodeType":"774","messageId":"775","endLine":2,"endColumn":20},{"ruleId":"772","severity":1,"message":"844","line":4,"column":8,"nodeType":"774","messageId":"775","endLine":4,"endColumn":14},{"ruleId":"782","severity":1,"message":"845","line":39,"column":7,"nodeType":"784","endLine":39,"endColumn":13,"suggestions":"846"},{"ruleId":"847","severity":1,"message":"848","line":41,"column":23,"nodeType":"849","messageId":"781","endLine":41,"endColumn":25},{"ruleId":"847","severity":1,"message":"848","line":52,"column":23,"nodeType":"849","messageId":"781","endLine":52,"endColumn":25},{"ruleId":"847","severity":1,"message":"848","line":68,"column":23,"nodeType":"849","messageId":"781","endLine":68,"endColumn":25},{"ruleId":"847","severity":1,"message":"848","line":86,"column":41,"nodeType":"849","messageId":"781","endLine":86,"endColumn":43},{"ruleId":"847","severity":1,"message":"848","line":96,"column":39,"nodeType":"849","messageId":"781","endLine":96,"endColumn":41},{"ruleId":"847","severity":1,"message":"848","line":103,"column":32,"nodeType":"849","messageId":"781","endLine":103,"endColumn":34},{"ruleId":"772","severity":1,"message":"850","line":4,"column":8,"nodeType":"774","messageId":"775","endLine":4,"endColumn":16},{"ruleId":"772","severity":1,"message":"851","line":11,"column":9,"nodeType":"774","messageId":"775","endLine":11,"endColumn":12},{"ruleId":"772","severity":1,"message":"819","line":9,"column":5,"nodeType":"774","messageId":"775","endLine":9,"endColumn":15},{"ruleId":"847","severity":1,"message":"848","line":61,"column":27,"nodeType":"849","messageId":"781","endLine":61,"endColumn":29},{"ruleId":"772","severity":1,"message":"852","line":1,"column":29,"nodeType":"774","messageId":"775","endLine":1,"endColumn":33},{"ruleId":"772","severity":1,"message":"853","line":3,"column":8,"nodeType":"774","messageId":"775","endLine":3,"endColumn":14},{"ruleId":"772","severity":1,"message":"854","line":6,"column":17,"nodeType":"774","messageId":"775","endLine":6,"endColumn":27},{"ruleId":"772","severity":1,"message":"855","line":6,"column":41,"nodeType":"774","messageId":"775","endLine":6,"endColumn":45},{"ruleId":"772","severity":1,"message":"856","line":6,"column":47,"nodeType":"774","messageId":"775","endLine":6,"endColumn":55},{"ruleId":"772","severity":1,"message":"807","line":7,"column":23,"nodeType":"774","messageId":"775","endLine":7,"endColumn":29},{"ruleId":"778","severity":1,"message":"779","line":19,"column":21,"nodeType":"780","messageId":"781","endLine":19,"endColumn":44},{"ruleId":"778","severity":1,"message":"779","line":36,"column":39,"nodeType":"780","messageId":"781","endLine":36,"endColumn":65},{"ruleId":"772","severity":1,"message":"854","line":2,"column":25,"nodeType":"774","messageId":"775","endLine":2,"endColumn":35},{"ruleId":"772","severity":1,"message":"857","line":1,"column":27,"nodeType":"774","messageId":"775","endLine":1,"endColumn":35},{"ruleId":"772","severity":1,"message":"858","line":2,"column":9,"nodeType":"774","messageId":"775","endLine":2,"endColumn":19},{"ruleId":"772","severity":1,"message":"859","line":2,"column":21,"nodeType":"774","messageId":"775","endLine":2,"endColumn":25},{"ruleId":"772","severity":1,"message":"860","line":16,"column":11,"nodeType":"774","messageId":"775","endLine":16,"endColumn":21},{"ruleId":"782","severity":1,"message":"797","line":20,"column":7,"nodeType":"784","endLine":20,"endColumn":9,"suggestions":"861"},{"ruleId":"772","severity":1,"message":"862","line":2,"column":8,"nodeType":"774","messageId":"775","endLine":2,"endColumn":12},{"ruleId":"772","severity":1,"message":"788","line":4,"column":9,"nodeType":"774","messageId":"775","endLine":4,"endColumn":15},{"ruleId":"772","severity":1,"message":"791","line":4,"column":42,"nodeType":"774","messageId":"775","endLine":4,"endColumn":56},{"ruleId":"772","severity":1,"message":"819","line":4,"column":72,"nodeType":"774","messageId":"775","endLine":4,"endColumn":82},{"ruleId":"772","severity":1,"message":"863","line":6,"column":9,"nodeType":"774","messageId":"775","endLine":6,"endColumn":20},{"ruleId":"772","severity":1,"message":"864","line":6,"column":22,"nodeType":"774","messageId":"775","endLine":6,"endColumn":36},{"ruleId":"772","severity":1,"message":"865","line":6,"column":38,"nodeType":"774","messageId":"775","endLine":6,"endColumn":52},{"ruleId":"772","severity":1,"message":"866","line":6,"column":54,"nodeType":"774","messageId":"775","endLine":6,"endColumn":65},{"ruleId":"772","severity":1,"message":"867","line":14,"column":11,"nodeType":"774","messageId":"775","endLine":14,"endColumn":18},{"ruleId":"772","severity":1,"message":"868","line":9,"column":8,"nodeType":"774","messageId":"775","endLine":9,"endColumn":12},{"ruleId":"772","severity":1,"message":"857","line":1,"column":27,"nodeType":"774","messageId":"775","endLine":1,"endColumn":35},{"ruleId":"772","severity":1,"message":"869","line":3,"column":15,"nodeType":"774","messageId":"775","endLine":3,"endColumn":26},{"ruleId":"772","severity":1,"message":"870","line":3,"column":28,"nodeType":"774","messageId":"775","endLine":3,"endColumn":38},{"ruleId":"772","severity":1,"message":"871","line":3,"column":40,"nodeType":"774","messageId":"775","endLine":3,"endColumn":50},{"ruleId":"772","severity":1,"message":"819","line":3,"column":70,"nodeType":"774","messageId":"775","endLine":3,"endColumn":80},{"ruleId":"772","severity":1,"message":"872","line":4,"column":9,"nodeType":"774","messageId":"775","endLine":4,"endColumn":12},{"ruleId":"782","severity":1,"message":"873","line":26,"column":7,"nodeType":"784","endLine":26,"endColumn":29,"suggestions":"874"},{"ruleId":"772","severity":1,"message":"875","line":8,"column":5,"nodeType":"774","messageId":"775","endLine":8,"endColumn":19},{"ruleId":"778","severity":1,"message":"779","line":21,"column":25,"nodeType":"780","messageId":"781","endLine":21,"endColumn":52},{"ruleId":"782","severity":1,"message":"811","line":28,"column":8,"nodeType":"784","endLine":28,"endColumn":10,"suggestions":"876"},{"ruleId":"772","severity":1,"message":"850","line":3,"column":8,"nodeType":"774","messageId":"775","endLine":3,"endColumn":16},{"ruleId":"772","severity":1,"message":"877","line":3,"column":31,"nodeType":"774","messageId":"775","endLine":3,"endColumn":36},{"ruleId":"772","severity":1,"message":"878","line":3,"column":38,"nodeType":"774","messageId":"775","endLine":3,"endColumn":47},{"ruleId":"772","severity":1,"message":"879","line":3,"column":49,"nodeType":"774","messageId":"775","endLine":3,"endColumn":58},{"ruleId":"772","severity":1,"message":"880","line":3,"column":60,"nodeType":"774","messageId":"775","endLine":3,"endColumn":68},{"ruleId":"772","severity":1,"message":"881","line":5,"column":9,"nodeType":"774","messageId":"775","endLine":5,"endColumn":12},{"ruleId":"772","severity":1,"message":"882","line":5,"column":19,"nodeType":"774","messageId":"775","endLine":5,"endColumn":27},{"ruleId":"847","severity":1,"message":"848","line":16,"column":23,"nodeType":"849","messageId":"781","endLine":16,"endColumn":25},{"ruleId":"772","severity":1,"message":"883","line":6,"column":9,"nodeType":"774","messageId":"775","endLine":6,"endColumn":15},"no-native-reassign",["884"],"no-negated-in-lhs",["885"],"@typescript-eslint/no-unused-vars","'dayjs' is defined but never used.","Identifier","unusedVar","'blue' is defined but never used.","'indigo' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'onGlobalSnackMessage'. Either include it or remove the dependency array.","ArrayExpression",["886"],"'useEffect' is defined but never used.","'drawerWidth' is assigned a value but never used.","'Avatar' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'ListItemAvatar' is defined but never used.","'ListItemText' is defined but never used.","'Storage' is defined but never used.","'Store' is defined but never used.","React Hook useEffect has a missing dependency: 'model'. Either include it or remove the dependency array.",["887"],"React Hook useEffect has a missing dependency: 'storageModel'. Either include it or remove the dependency array.",["888"],"React Hook useEffect has a missing dependency: 'zfsModel'. Either include it or remove the dependency array.",["889"],"unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program",{"range":"890","text":"891"},["892"],["893"],"'Person' is defined but never used.","'layout' is defined but never used.",["894"],"'Paper' is defined but never used.","React Hook useEffect has missing dependencies: 'model' and 'name'. Either include them or remove the dependency array.",["895"],"'useLocalStorageState' is defined but never used.",["896"],["897"],"React Hook useEffect has a missing dependency: 'usersModel'. Either include it or remove the dependency array.",["898"],"'makeStyles' is defined but never used.","'Typography' is defined but never used.",["899"],["900"],"'ResponseError' is defined but never used.","'useClickAway' is defined but never used.","React Hook useEffect has a missing dependency: 'enqueueSnackbar'. Either include it or remove the dependency array.",["901"],"'ApplicationConfig' is defined but never used.","'Button' is defined but never used.","'Remove' is defined but never used.","'strict' is defined but never used.","'hexToRgb' is defined but never used.","'getUserList' is defined but never used.","'installApp' is defined but never used.","'useInterval' is defined but never used.","'removeFromAutoStart' is assigned a value but never used.","'fetchDisks' is defined but never used.",["884"],["885"],"'UserListResponse' is defined but never used.","'Apps' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'ChangeEvent' is defined but never used.","'styled' is defined but never used.","React Hook useEffect has a missing dependency: 'uploadFile'. Either include it or remove the dependency array.",["902"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'DiskIcon' is defined but never used.","'Dns' is defined but never used.","'Card' is defined but never used.","'AppBar' is defined but never used.","'ButtonBase' is defined but never used.","'Menu' is defined but never used.","'MenuItem' is defined but never used.","'useState' is defined but never used.","'fetchParts' is defined but never used.","'Part' is defined but never used.","'partsModel' is assigned a value but never used.",["903"],"'clsx' is defined but never used.","'AppsRounded' is defined but never used.","'ArchiveRounded' is defined but never used.","'LinkOffRounded' is defined but never used.","'LinkRounded' is defined but never used.","'classes' is assigned a value but never used.","'task' is defined but never used.","'FormControl' is defined but never used.","'IconButton' is defined but never used.","'InputLabel' is defined but never used.","'Add' is defined but never used.","React Hook useEffect has a missing dependency: 'onChange'. Either include it or remove the dependency array. If 'onChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["904"],"'TableContainer' is defined but never used.",["905"],"'Table' is defined but never used.","'TableBody' is defined but never used.","'TableCell' is defined but never used.","'TableRow' is defined but never used.","'Bar' is defined but never used.","'Progress' is defined but never used.","'Memory' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"906","fix":"907"},{"desc":"908","fix":"909"},{"desc":"910","fix":"911"},{"desc":"912","fix":"913"},[-1,0],"",{"desc":"908","fix":"914"},{"desc":"908","fix":"915"},{"desc":"908","fix":"916"},{"desc":"917","fix":"918"},{"desc":"908","fix":"919"},{"desc":"917","fix":"920"},{"desc":"921","fix":"922"},{"desc":"917","fix":"923"},{"desc":"917","fix":"924"},{"desc":"925","fix":"926"},{"desc":"927","fix":"928"},{"desc":"910","fix":"929"},{"desc":"930","fix":"931"},{"desc":"917","fix":"932"},"Update the dependencies array to be: [onGlobalSnackMessage]",{"range":"933","text":"934"},"Update the dependencies array to be: [model]",{"range":"935","text":"936"},"Update the dependencies array to be: [storageModel]",{"range":"937","text":"938"},"Update the dependencies array to be: [zfsModel]",{"range":"939","text":"940"},{"range":"941","text":"936"},{"range":"942","text":"936"},{"range":"943","text":"936"},"Update the dependencies array to be: [model, name]",{"range":"944","text":"945"},{"range":"946","text":"936"},{"range":"947","text":"945"},"Update the dependencies array to be: [usersModel]",{"range":"948","text":"949"},{"range":"950","text":"945"},{"range":"951","text":"945"},"Update the dependencies array to be: [enqueueSnackbar]",{"range":"952","text":"953"},"Update the dependencies array to be: [file, uploadFile]",{"range":"954","text":"955"},{"range":"956","text":"938"},"Update the dependencies array to be: [disksController.list, onChange]",{"range":"957","text":"958"},{"range":"959","text":"945"},[1690,1692],"[onGlobalSnackMessage]",[527,529],"[model]",[842,844],"[storageModel]",[1190,1192],"[zfsModel]",[470,472],[906,908],[735,737],[823,825],"[model, name]",[779,781],[564,566],[1111,1113],"[usersModel]",[677,679],[1121,1123],[1095,1097],"[enqueueSnackbar]",[1313,1319],"[file, uploadFile]",[805,807],[933,955],"[disksController.list, onChange]",[625,627]]