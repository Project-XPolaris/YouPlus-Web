[{"/home/aren/Desktop/YouPlus/ypw/src/index.tsx":"1","/home/aren/Desktop/YouPlus/ypw/src/reportWebVitals.ts":"2","/home/aren/Desktop/YouPlus/ypw/src/App.tsx":"3","/home/aren/Desktop/YouPlus/ypw/src/theme.ts":"4","/home/aren/Desktop/YouPlus/ypw/src/layout/Blank/index.tsx":"5","/home/aren/Desktop/YouPlus/ypw/src/model/layout.ts":"6","/home/aren/Desktop/YouPlus/ypw/src/hooks/ConfirmDialog.ts":"7","/home/aren/Desktop/YouPlus/ypw/src/layout/Base/index.tsx":"8","/home/aren/Desktop/YouPlus/ypw/src/pages/Parts/index.tsx":"9","/home/aren/Desktop/YouPlus/ypw/src/pages/Storage/index.tsx":"10","/home/aren/Desktop/YouPlus/ypw/src/pages/ShareFolder/index.tsx":"11","/home/aren/Desktop/YouPlus/ypw/src/pages/Disks/index.tsx":"12","/home/aren/Desktop/YouPlus/ypw/src/pages/Users/index.tsx":"13","/home/aren/Desktop/YouPlus/ypw/src/pages/Apps/index.tsx":"14","/home/aren/Desktop/YouPlus/ypw/src/pages/ZFS/index.tsx":"15","/home/aren/Desktop/YouPlus/ypw/src/pages/Account/index.tsx":"16","/home/aren/Desktop/YouPlus/ypw/src/pages/Login/index.tsx":"17","/home/aren/Desktop/YouPlus/ypw/src/pages/ShareFolderDetail/index.tsx":"18","/home/aren/Desktop/YouPlus/ypw/src/pages/GroupDetail/index.tsx":"19","/home/aren/Desktop/YouPlus/ypw/src/pages/DashBoard/index.tsx":"20","/home/aren/Desktop/YouPlus/ypw/src/pages/Groups/index.tsx":"21","/home/aren/Desktop/YouPlus/ypw/src/pages/Groups/style.ts":"22","/home/aren/Desktop/YouPlus/ypw/src/pages/Groups/model.ts":"23","/home/aren/Desktop/YouPlus/ypw/src/pages/DashBoard/model.ts":"24","/home/aren/Desktop/YouPlus/ypw/src/pages/DashBoard/style.ts":"25","/home/aren/Desktop/YouPlus/ypw/src/components/Icons/UserIcon.tsx":"26","/home/aren/Desktop/YouPlus/ypw/src/components/Icons/DiskIcon.tsx":"27","/home/aren/Desktop/YouPlus/ypw/src/components/Icons/StorageIcon.tsx":"28","/home/aren/Desktop/YouPlus/ypw/src/components/Icons/ShareFolderIcon.tsx":"29","/home/aren/Desktop/YouPlus/ypw/src/api/users.ts":"30","/home/aren/Desktop/YouPlus/ypw/src/api/share.ts":"31","/home/aren/Desktop/YouPlus/ypw/src/layout/Base/parts/Tool/index.tsx":"32","/home/aren/Desktop/YouPlus/ypw/src/components/ListPage/index.tsx":"33","/home/aren/Desktop/YouPlus/ypw/src/components/ImageInfoCard/index.tsx":"34","/home/aren/Desktop/YouPlus/ypw/src/components/NewGroupDialog/index.tsx":"35","/home/aren/Desktop/YouPlus/ypw/src/components/InfoCard/index.tsx":"36","/home/aren/Desktop/YouPlus/ypw/src/config.ts":"37","/home/aren/Desktop/YouPlus/ypw/src/utils/request.ts":"38","/home/aren/Desktop/YouPlus/ypw/src/model/user.ts":"39","/home/aren/Desktop/YouPlus/ypw/src/components/InfoCard/style.ts":"40","/home/aren/Desktop/YouPlus/ypw/src/components/ImageInfoCard/style.ts":"41","/home/aren/Desktop/YouPlus/ypw/src/components/NewGroupDialog/style.ts":"42","/home/aren/Desktop/YouPlus/ypw/src/components/ListPage/style.ts":"43","/home/aren/Desktop/YouPlus/ypw/src/layout/Base/parts/Tool/style.ts":"44","/home/aren/Desktop/YouPlus/ypw/src/api/auth.ts":"45","/home/aren/Desktop/YouPlus/ypw/src/api/storage.ts":"46","/home/aren/Desktop/YouPlus/ypw/src/api/disks.ts":"47","/home/aren/Desktop/YouPlus/ypw/src/api/style.ts":"48","/home/aren/Desktop/YouPlus/ypw/src/pages/GroupDetail/style.ts":"49","/home/aren/Desktop/YouPlus/ypw/src/pages/GroupDetail/model.ts":"50","/home/aren/Desktop/YouPlus/ypw/src/utils/values.ts":"51","/home/aren/Desktop/YouPlus/ypw/src/pages/ShareFolderDetail/style.ts":"52","/home/aren/Desktop/YouPlus/ypw/src/pages/ShareFolderDetail/model.ts":"53","/home/aren/Desktop/YouPlus/ypw/src/pages/Login/style.ts":"54","/home/aren/Desktop/YouPlus/ypw/src/api/account.ts":"55","/home/aren/Desktop/YouPlus/ypw/src/pages/Account/style.ts":"56","/home/aren/Desktop/YouPlus/ypw/src/pages/Storage/model.ts":"57","/home/aren/Desktop/YouPlus/ypw/src/pages/ZFS/style.ts":"58","/home/aren/Desktop/YouPlus/ypw/src/pages/ZFS/model.ts":"59","/home/aren/Desktop/YouPlus/ypw/src/pages/Apps/style.ts":"60","/home/aren/Desktop/YouPlus/ypw/src/pages/Apps/model.ts":"61","/home/aren/Desktop/YouPlus/ypw/src/hooks/ContextMenu.ts":"62","/home/aren/Desktop/YouPlus/ypw/src/pages/Users/model.ts":"63","/home/aren/Desktop/YouPlus/ypw/src/pages/Users/style.ts":"64","/home/aren/Desktop/YouPlus/ypw/src/pages/Disks/style.ts":"65","/home/aren/Desktop/YouPlus/ypw/src/pages/Disks/model.ts":"66","/home/aren/Desktop/YouPlus/ypw/src/pages/ShareFolder/model.ts":"67","/home/aren/Desktop/YouPlus/ypw/src/pages/Storage/style.ts":"68","/home/aren/Desktop/YouPlus/ypw/src/pages/ShareFolder/style.ts":"69","/home/aren/Desktop/YouPlus/ypw/src/pages/Parts/style.ts":"70","/home/aren/Desktop/YouPlus/ypw/src/pages/Parts/model.ts":"71","/home/aren/Desktop/YouPlus/ypw/src/api/zfs.ts":"72","/home/aren/Desktop/YouPlus/ypw/src/components/UserSelectDialog/index.tsx":"73","/home/aren/Desktop/YouPlus/ypw/src/components/UserListCard/index.tsx":"74","/home/aren/Desktop/YouPlus/ypw/src/components/SwitchSelectDialog/index.tsx":"75","/home/aren/Desktop/YouPlus/ypw/src/components/ChangePasswordDialog/index.tsx":"76","/home/aren/Desktop/YouPlus/ypw/src/components/ListItemDialog/index.tsx":"77","/home/aren/Desktop/YouPlus/ypw/src/api/apps.ts":"78","/home/aren/Desktop/YouPlus/ypw/src/components/CreateZFSPoolDialog/index.tsx":"79","/home/aren/Desktop/YouPlus/ypw/src/components/InstallAppDialog/index.tsx":"80","/home/aren/Desktop/YouPlus/ypw/src/components/AppCard/index.tsx":"81","/home/aren/Desktop/YouPlus/ypw/src/components/NewUserDialog/index.tsx":"82","/home/aren/Desktop/YouPlus/ypw/src/components/NewShareDialog/index.tsx":"83","/home/aren/Desktop/YouPlus/ypw/src/layout/Auth/index.tsx":"84","/home/aren/Desktop/YouPlus/ypw/src/layout/Base/parts/Nav/index.tsx":"85","/home/aren/Desktop/YouPlus/ypw/src/components/SwitchSelectDialog/style.ts":"86","/home/aren/Desktop/YouPlus/ypw/src/components/UserListCard/style.ts":"87","/home/aren/Desktop/YouPlus/ypw/src/components/UserSelectDialog/style.ts":"88","/home/aren/Desktop/YouPlus/ypw/src/components/ListItemDialog/style.ts":"89","/home/aren/Desktop/YouPlus/ypw/src/components/CreateZFSPoolDialog/style.ts":"90","/home/aren/Desktop/YouPlus/ypw/src/components/ChangePasswordDialog/style.ts":"91","/home/aren/Desktop/YouPlus/ypw/src/components/InstallAppDialog/style.ts":"92","/home/aren/Desktop/YouPlus/ypw/src/components/NewUserDialog/style.ts":"93","/home/aren/Desktop/YouPlus/ypw/src/components/NewShareDialog/hook.ts":"94","/home/aren/Desktop/YouPlus/ypw/src/components/NewShareDialog/style.ts":"95","/home/aren/Desktop/YouPlus/ypw/src/components/AppCard/style.ts":"96","/home/aren/Desktop/YouPlus/ypw/src/utils/app.ts":"97","/home/aren/Desktop/YouPlus/ypw/src/components/DiskSelectField/index.tsx":"98","/home/aren/Desktop/YouPlus/ypw/src/components/NewShareDialog/step/complete/index.tsx":"99","/home/aren/Desktop/YouPlus/ypw/src/components/NewShareDialog/step/info/index.tsx":"100","/home/aren/Desktop/YouPlus/ypw/src/components/NewShareDialog/step/storage/index.tsx":"101","/home/aren/Desktop/YouPlus/ypw/src/components/NewShareDialog/step/users/index.tsx":"102","/home/aren/Desktop/YouPlus/ypw/src/components/DiskSelectField/style.ts":"103","/home/aren/Desktop/YouPlus/ypw/src/components/NewShareDialog/step/complete/style.ts":"104","/home/aren/Desktop/YouPlus/ypw/src/components/NewShareDialog/step/storage/style.ts":"105","/home/aren/Desktop/YouPlus/ypw/src/components/NewShareDialog/step/info/style.ts":"106","/home/aren/Desktop/YouPlus/ypw/src/components/NewShareDialog/step/users/style.ts":"107","/home/aren/Desktop/YouPlus/ypw/src/components/UserSelectField/index.tsx":"108","/home/aren/Desktop/YouPlus/ypw/src/components/ValueField/index.tsx":"109","/home/aren/Desktop/YouPlus/ypw/src/components/ValueField/style.ts":"110","/home/aren/Desktop/YouPlus/ypw/src/components/UserSelectField/style.ts":"111","/home/aren/Desktop/YouPlus/ypw/src/layout/Base/parts/Task/index.tsx":"112","/home/aren/Desktop/YouPlus/ypw/src/layout/Base/parts/Task/style.tsx":"113","/home/aren/Desktop/YouPlus/ypw/src/components/InstallAppTaskCard/index.tsx":"114","/home/aren/Desktop/YouPlus/ypw/src/components/InstallAppTaskCard/style.tsx":"115","/home/aren/Desktop/YouPlus/ypw/src/model/task.ts":"116","/home/aren/Desktop/YouPlus/ypw/src/api/task.ts":"117","/home/aren/Desktop/YouPlus/ypw/src/ws.ts":"118","/home/aren/Desktop/YouPlus/ypw/src/layout/Notification/index.tsx":"119","/home/aren/Desktop/YouPlus/ypw/src/pages/PoolDetail/index.tsx":"120","/home/aren/Desktop/YouPlus/ypw/src/pages/PoolDetail/model.ts":"121","/home/aren/Desktop/YouPlus/ypw/src/pages/PoolDetail/style.tsx":"122","/home/aren/Desktop/YouPlus/ypw/src/utils/message.ts":"123","/home/aren/Desktop/YouPlus/ypw/src/components/UserPopup/index.tsx":"124","/home/aren/Desktop/YouPlus/ypw/src/components/UserPopup/style.tsx":"125"},{"size":610,"mtime":1620123804126,"results":"126","hashOfConfig":"127"},{"size":425,"mtime":1614998296846,"results":"128","hashOfConfig":"127"},{"size":544,"mtime":1620123804118,"results":"129","hashOfConfig":"127"},{"size":329,"mtime":1614998296849,"results":"130","hashOfConfig":"127"},{"size":5618,"mtime":1620535822286,"results":"131","hashOfConfig":"127"},{"size":1173,"mtime":1619875916179,"results":"132","hashOfConfig":"127"},{"size":872,"mtime":1618406056539,"results":"133","hashOfConfig":"127"},{"size":1422,"mtime":1620135467271,"results":"134","hashOfConfig":"127"},{"size":1277,"mtime":1615994728785,"results":"135","hashOfConfig":"127"},{"size":3458,"mtime":1618406318905,"results":"136","hashOfConfig":"127"},{"size":2489,"mtime":1618127409825,"results":"137","hashOfConfig":"127"},{"size":1323,"mtime":1615994728821,"results":"138","hashOfConfig":"127"},{"size":3282,"mtime":1618406056531,"results":"139","hashOfConfig":"127"},{"size":2240,"mtime":1620122951999,"results":"140","hashOfConfig":"127"},{"size":7434,"mtime":1620228660268,"results":"141","hashOfConfig":"127"},{"size":1917,"mtime":1617455734543,"results":"142","hashOfConfig":"127"},{"size":3155,"mtime":1620398413586,"results":"143","hashOfConfig":"127"},{"size":7588,"mtime":1618406582535,"results":"144","hashOfConfig":"127"},{"size":2596,"mtime":1618666309661,"results":"145","hashOfConfig":"127"},{"size":2850,"mtime":1620119433345,"results":"146","hashOfConfig":"127"},{"size":2387,"mtime":1618637319805,"results":"147","hashOfConfig":"127"},{"size":203,"mtime":1618635356861,"results":"148","hashOfConfig":"127"},{"size":603,"mtime":1618635476844,"results":"149","hashOfConfig":"127"},{"size":1515,"mtime":1620119433337,"results":"150","hashOfConfig":"127"},{"size":306,"mtime":1619705990764,"results":"151","hashOfConfig":"127"},{"size":433,"mtime":1619707818336,"results":"152","hashOfConfig":"127"},{"size":783,"mtime":1619707137346,"results":"153","hashOfConfig":"127"},{"size":626,"mtime":1619707213041,"results":"154","hashOfConfig":"127"},{"size":502,"mtime":1619707643227,"results":"155","hashOfConfig":"127"},{"size":2128,"mtime":1620565985205,"results":"156","hashOfConfig":"127"},{"size":1433,"mtime":1620544555992,"results":"157","hashOfConfig":"127"},{"size":1889,"mtime":1620558675765,"results":"158","hashOfConfig":"127"},{"size":641,"mtime":1614998296829,"results":"159","hashOfConfig":"127"},{"size":552,"mtime":1619707141762,"results":"160","hashOfConfig":"127"},{"size":1394,"mtime":1618634847936,"results":"161","hashOfConfig":"127"},{"size":971,"mtime":1618153852451,"results":"162","hashOfConfig":"127"},{"size":567,"mtime":1620094562930,"results":"163","hashOfConfig":"127"},{"size":1239,"mtime":1620544395078,"results":"164","hashOfConfig":"127"},{"size":1006,"mtime":1618235277991,"results":"165","hashOfConfig":"127"},{"size":465,"mtime":1618134529596,"results":"166","hashOfConfig":"127"},{"size":340,"mtime":1619706600536,"results":"167","hashOfConfig":"127"},{"size":192,"mtime":1618628941576,"results":"168","hashOfConfig":"127"},{"size":440,"mtime":1614998296830,"results":"169","hashOfConfig":"127"},{"size":498,"mtime":1620092795699,"results":"170","hashOfConfig":"127"},{"size":345,"mtime":1614998296817,"results":"171","hashOfConfig":"127"},{"size":690,"mtime":1614998296817,"results":"172","hashOfConfig":"127"},{"size":813,"mtime":1615031782224,"results":"173","hashOfConfig":"127"},{"size":1863,"mtime":1617458018841,"results":"174","hashOfConfig":"127"},{"size":317,"mtime":1618666015007,"results":"175","hashOfConfig":"127"},{"size":1388,"mtime":1618666014991,"results":"176","hashOfConfig":"127"},{"size":195,"mtime":1618153706292,"results":"177","hashOfConfig":"127"},{"size":1180,"mtime":1618400205506,"results":"178","hashOfConfig":"127"},{"size":1240,"mtime":1620544556000,"results":"179","hashOfConfig":"127"},{"size":1215,"mtime":1614998296846,"results":"180","hashOfConfig":"127"},{"size":304,"mtime":1617455718575,"results":"181","hashOfConfig":"127"},{"size":328,"mtime":1617450625164,"results":"182","hashOfConfig":"127"},{"size":762,"mtime":1615994728765,"results":"183","hashOfConfig":"127"},{"size":540,"mtime":1614998296843,"results":"184","hashOfConfig":"127"},{"size":1058,"mtime":1620556918516,"results":"185","hashOfConfig":"127"},{"size":428,"mtime":1619876493443,"results":"186","hashOfConfig":"127"},{"size":1217,"mtime":1619876369420,"results":"187","hashOfConfig":"127"},{"size":811,"mtime":1617439977423,"results":"188","hashOfConfig":"127"},{"size":1244,"mtime":1620566052192,"results":"189","hashOfConfig":"127"},{"size":534,"mtime":1614998296840,"results":"190","hashOfConfig":"127"},{"size":342,"mtime":1614998296841,"results":"191","hashOfConfig":"127"},{"size":442,"mtime":1615994728809,"results":"192","hashOfConfig":"127"},{"size":990,"mtime":1620544555996,"results":"193","hashOfConfig":"127"},{"size":345,"mtime":1614998296844,"results":"194","hashOfConfig":"127"},{"size":524,"mtime":1614998296839,"results":"195","hashOfConfig":"127"},{"size":342,"mtime":1614998296842,"results":"196","hashOfConfig":"127"},{"size":676,"mtime":1615994728781,"results":"197","hashOfConfig":"127"},{"size":909,"mtime":1620226953365,"results":"198","hashOfConfig":"127"},{"size":1855,"mtime":1618146892937,"results":"199","hashOfConfig":"127"},{"size":2152,"mtime":1618638719359,"results":"200","hashOfConfig":"127"},{"size":1174,"mtime":1618154094921,"results":"201","hashOfConfig":"127"},{"size":1952,"mtime":1617455487598,"results":"202","hashOfConfig":"127"},{"size":2006,"mtime":1614998296832,"results":"203","hashOfConfig":"127"},{"size":1391,"mtime":1619876369408,"results":"204","hashOfConfig":"127"},{"size":1948,"mtime":1614998296828,"results":"205","hashOfConfig":"127"},{"size":2084,"mtime":1619875916147,"results":"206","hashOfConfig":"127"},{"size":3710,"mtime":1619872666033,"results":"207","hashOfConfig":"127"},{"size":1956,"mtime":1614998296820,"results":"208","hashOfConfig":"127"},{"size":4365,"mtime":1614998296821,"results":"209","hashOfConfig":"127"},{"size":653,"mtime":1620127517655,"results":"210","hashOfConfig":"127"},{"size":7426,"mtime":1618621871663,"results":"211","hashOfConfig":"127"},{"size":194,"mtime":1618154120289,"results":"212","hashOfConfig":"127"},{"size":731,"mtime":1618148273380,"results":"213","hashOfConfig":"127"},{"size":260,"mtime":1618134786875,"results":"214","hashOfConfig":"127"},{"size":390,"mtime":1614998296832,"results":"215","hashOfConfig":"127"},{"size":533,"mtime":1614998296828,"results":"216","hashOfConfig":"127"},{"size":197,"mtime":1617451780712,"results":"217","hashOfConfig":"127"},{"size":193,"mtime":1619874568499,"results":"218","hashOfConfig":"127"},{"size":329,"mtime":1614998296820,"results":"219","hashOfConfig":"127"},{"size":467,"mtime":1614998296825,"results":"220","hashOfConfig":"127"},{"size":518,"mtime":1614998296825,"results":"221","hashOfConfig":"127"},{"size":562,"mtime":1614998296819,"results":"222","hashOfConfig":"127"},{"size":195,"mtime":1614998296847,"results":"223","hashOfConfig":"127"},{"size":3355,"mtime":1614998296831,"results":"224","hashOfConfig":"127"},{"size":1361,"mtime":1614998296824,"results":"225","hashOfConfig":"127"},{"size":818,"mtime":1614998296821,"results":"226","hashOfConfig":"127"},{"size":1831,"mtime":1620537047270,"results":"227","hashOfConfig":"127"},{"size":2748,"mtime":1614998296823,"results":"228","hashOfConfig":"127"},{"size":463,"mtime":1614998296830,"results":"229","hashOfConfig":"127"},{"size":271,"mtime":1614998296824,"results":"230","hashOfConfig":"127"},{"size":317,"mtime":1614998296822,"results":"231","hashOfConfig":"127"},{"size":243,"mtime":1614998296821,"results":"232","hashOfConfig":"127"},{"size":800,"mtime":1614998296823,"results":"233","hashOfConfig":"127"},{"size":3020,"mtime":1614998296826,"results":"234","hashOfConfig":"127"},{"size":657,"mtime":1614998296827,"results":"235","hashOfConfig":"127"},{"size":361,"mtime":1614998296827,"results":"236","hashOfConfig":"127"},{"size":463,"mtime":1614998296826,"results":"237","hashOfConfig":"127"},{"size":2453,"mtime":1620560458339,"results":"238","hashOfConfig":"127"},{"size":763,"mtime":1620560554173,"results":"239","hashOfConfig":"127"},{"size":1324,"mtime":1620124220861,"results":"240","hashOfConfig":"127"},{"size":288,"mtime":1620120030721,"results":"241","hashOfConfig":"127"},{"size":418,"mtime":1620558377596,"results":"242","hashOfConfig":"127"},{"size":679,"mtime":1620123314608,"results":"243","hashOfConfig":"127"},{"size":1139,"mtime":1620135626594,"results":"244","hashOfConfig":"127"},{"size":1150,"mtime":1620135951492,"results":"245","hashOfConfig":"127"},{"size":1367,"mtime":1620229117424,"results":"246","hashOfConfig":"127"},{"size":562,"mtime":1620228550584,"results":"247","hashOfConfig":"127"},{"size":459,"mtime":1620228927926,"results":"248","hashOfConfig":"127"},{"size":725,"mtime":1620536970322,"results":"249","hashOfConfig":"127"},{"size":867,"mtime":1620559915498,"results":"250","hashOfConfig":"127"},{"size":507,"mtime":1620558967519,"results":"251","hashOfConfig":"127"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},"ybrbqb",{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"254"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"254"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"254"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"254"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"275","usedDeprecatedRules":"254"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"254"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"254"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"254"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"254"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"254"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"254"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"254"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"254"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"254"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"254"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308","usedDeprecatedRules":"254"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"254"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"254"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"254"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336","usedDeprecatedRules":"254"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341","usedDeprecatedRules":"254"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"254"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353","usedDeprecatedRules":"254"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"376","usedDeprecatedRules":"254"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"391","usedDeprecatedRules":"254"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"400","usedDeprecatedRules":"254"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"411","usedDeprecatedRules":"254"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"414","usedDeprecatedRules":"254"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"423","usedDeprecatedRules":"254"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"430","usedDeprecatedRules":"254"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"437","usedDeprecatedRules":"254"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"446","usedDeprecatedRules":"254"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"451","usedDeprecatedRules":"254"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"456","usedDeprecatedRules":"254"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"469","messages":"470","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"475","usedDeprecatedRules":"254"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"482","messages":"483","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"484","usedDeprecatedRules":"254"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"491","usedDeprecatedRules":"254"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"494","usedDeprecatedRules":"254"},{"filePath":"495","messages":"496","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"497","messages":"498","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"499","messages":"500","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"501","messages":"502","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"503","messages":"504","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"505","messages":"506","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"507","usedDeprecatedRules":"254"},{"filePath":"508","messages":"509","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"510","messages":"511","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"512","messages":"513","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"514"},{"filePath":"515","messages":"516","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"517","usedDeprecatedRules":"254"},{"filePath":"518","messages":"519","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"520","messages":"521","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"522","messages":"523","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"524","messages":"525","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"526","messages":"527","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"528","messages":"529","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"530","messages":"531","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"532","usedDeprecatedRules":"254"},{"filePath":"533","messages":"534","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"535","usedDeprecatedRules":"254"},{"filePath":"536","messages":"537","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"538","messages":"539","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"540","messages":"541","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"542","usedDeprecatedRules":"254"},{"filePath":"543","messages":"544","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"545","usedDeprecatedRules":"254"},{"filePath":"546","messages":"547","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},"/home/aren/Desktop/YouPlus/ypw/src/index.tsx",[],["548","549"],"/home/aren/Desktop/YouPlus/ypw/src/reportWebVitals.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/App.tsx",[],"/home/aren/Desktop/YouPlus/ypw/src/theme.ts",["550","551"],"import {createMuiTheme} from '@material-ui/core/styles';\nimport {blue, green, indigo, yellow} from \"@material-ui/core/colors\";\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: green[700],\n        },\n        secondary: {\n            main: yellow[800],\n        },\n\n    },\n});\nexport default theme","/home/aren/Desktop/YouPlus/ypw/src/layout/Blank/index.tsx",["552","553"],"import {HashRouter as Router, Route, Switch} from \"react-router-dom\";\nimport ZFSPage from \"../../pages/ZFS\";\nimport StoragePage from \"../../pages/Storage\";\nimport PartsPage from \"../../pages/Parts\";\nimport DisksPage from \"../../pages/Disks\";\nimport UsersPage from \"../../pages/Users\";\nimport ShareFolder from \"../../pages/ShareFolder\";\nimport AppsPage from \"../../pages/Apps\";\nimport * as React from \"react\";\nimport BaseLayout from \"../Base\";\nimport LoginPage from \"../../pages/Login\";\nimport AccountPage from \"../../pages/Account\";\nimport DashboardPage from \"../../pages/DashBoard\";\nimport ShareFolderDetail from \"../../pages/ShareFolderDetail\";\nimport useLayoutModel from \"../../model/layout\";\nimport {Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle} from \"@material-ui/core\";\nimport GroupsPage from \"../../pages/Groups\";\nimport GroupDetailPage from \"../../pages/GroupDetail\";\nimport PoolDetailPage from \"../../pages/PoolDetail\";\nimport {OptionsObject, SnackbarMessage, useSnackbar} from \"notistack\";\nimport {useEffect} from \"react\";\n\nexport interface BlankLayoutPropsType {\n\n}\n\nconst BlankLayout = ({}: BlankLayoutPropsType) => {\n    const layoutModel = useLayoutModel()\n    const { enqueueSnackbar } = useSnackbar()\n    const onGlobalSnackMessage = (e: any) => {\n        const { message,options } : {message: SnackbarMessage, options?: OptionsObject} = e.detail\n        enqueueSnackbar(message,options)\n    }\n    useEffect(() => {\n        document.addEventListener(\"globalMessage\",onGlobalSnackMessage)\n    },[])\n    return (\n        <div>\n            <Dialog open={layoutModel.confirmDialogController.open} onClose={layoutModel.confirmDialogController.onClose}>\n                <DialogTitle>\n                    { layoutModel.confirmDialogController.title }\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        { layoutModel.confirmDialogController.message }\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    {\n                        layoutModel.confirmDialogController.onOk &&\n                            <Button onClick={() => {\n                                if (layoutModel.confirmDialogController.onOk) {\n                                    layoutModel.confirmDialogController.onOk()\n                                }\n                                layoutModel.confirmDialogController.onClose()\n                            }}>\n                                OK\n                            </Button>\n                    }\n                    {\n                        <Button onClick={layoutModel.confirmDialogController.onClose}>\n                           Cancel\n                        </Button>\n                    }\n                </DialogActions>\n            </Dialog>\n            <Router>\n                <Switch>\n                    <Route path=\"/login\">\n                        <LoginPage/>\n                    </Route>\n\n                    <Route path=\"/zfs\">\n                        <BaseLayout>\n                            <ZFSPage/>\n                        </BaseLayout>\n                    </Route>\n                    <Route path=\"/pool/:name/info\">\n                        <BaseLayout>\n                            <PoolDetailPage/>\n                        </BaseLayout>\n                    </Route>\n                    <Route path=\"/storage\">\n                        <BaseLayout>\n                            <StoragePage/>\n                        </BaseLayout>\n                    </Route>\n                    <Route path=\"/parts\">\n                        <BaseLayout>\n                            <PartsPage/>\n                        </BaseLayout>\n                    </Route>\n                    <Route path=\"/disks\">\n                        <BaseLayout>\n                            <DisksPage/>\n                        </BaseLayout>\n                    </Route>\n                    <Route path=\"/users\">\n                        <BaseLayout>\n                            <UsersPage/>\n                        </BaseLayout>\n                    </Route>\n                    <Route path=\"/folders\">\n                        <BaseLayout>\n                            <ShareFolder/>\n                        </BaseLayout>\n                    </Route>\n                    <Route path=\"/folder/:name/info\">\n                        <BaseLayout>\n                            <ShareFolderDetail/>\n                        </BaseLayout>\n                    </Route>\n                    <Route path=\"/my/account\">\n                        <BaseLayout>\n                            <AccountPage/>\n                        </BaseLayout>\n                    </Route>\n                    <Route path=\"/apps\">\n                        <BaseLayout>\n                            <AppsPage/>\n                        </BaseLayout>\n                    </Route>\n                    <Route path=\"/groups\">\n                        <BaseLayout>\n                            <GroupsPage />\n                        </BaseLayout>\n                    </Route>\n                    <Route path=\"/group/:name/info\">\n                        <BaseLayout>\n                            <GroupDetailPage />\n                        </BaseLayout>\n                    </Route>\n                    <Route path=\"/\">\n                        <BaseLayout>\n                            <DashboardPage/>\n                        </BaseLayout>\n                    </Route>\n                </Switch>\n            </Router>\n        </div>\n    )\n}\n\nexport default BlankLayout;\n","/home/aren/Desktop/YouPlus/ypw/src/model/layout.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/hooks/ConfirmDialog.ts",["554"],"import {useEffect, useState} from \"react\";\n\nexport interface ConfirmDialogController {\n    message?: string\n    open: boolean\n    openDialog: (option: ConfirmOption) => void\n    onClose: () => void\n    onOk?: () => void\n    title: string\n}\n\nexport interface ConfirmOption {\n    message: string\n    onOk?: () => void\n    title?: string\n}\n\nexport const useConfirmDialog = (): ConfirmDialogController => {\n    const [open, setOpen] = useState<boolean>(false)\n    const [option, setOption] = useState<ConfirmOption | undefined>()\n    const openDialog = (option: ConfirmOption) => {\n        setOption(option)\n        setOpen(true)\n    }\n    const onClose = () => {\n        setOpen(false)\n    }\n\n    return {\n        message: option?.message,\n        open: open,\n        openDialog,\n        onClose,\n        onOk: option?.onOk,\n        title: option?.title ?? \"Confirm\"\n    }\n}\n","/home/aren/Desktop/YouPlus/ypw/src/layout/Base/index.tsx",["555"],"import * as React from 'react';\nimport {createStyles, makeStyles, Theme} from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport AppNavigation from \"./parts/Nav\";\nimport AuthLayout from \"../Auth\";\nimport AppToolbar from \"./parts/Tool\";\nimport Notification from \"../Notification\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            display: 'flex',\n        },\n        appBar: {\n            zIndex: theme.zIndex.drawer + 1,\n        },\n        content: {\n            flexGrow: 1,\n            minHeight: \"100vh\",\n            paddingTop: theme.spacing(3),\n            backgroundColor: \"#EEEEEE\"\n        },\n    }),\n);\n\nconst BaseLayout = ({children}: { children: any }) => {\n    const classes = useStyles();\n    return (\n        <AuthLayout>\n            <Notification />\n            <div className={classes.root}>\n                <CssBaseline/>\n                <AppBar position=\"fixed\" className={classes.appBar}>\n                  <AppToolbar />\n                </AppBar>\n\n                <AppNavigation/>\n                <main className={classes.content}>\n                    <Toolbar/>\n                    {children}\n                </main>\n            </div>\n        </AuthLayout>\n    );\n};\nexport default BaseLayout\n","/home/aren/Desktop/YouPlus/ypw/src/pages/Parts/index.tsx",["556","557","558"],"﻿import React, {useEffect} from \"react\";\nimport usePartsPageModel from \"./model\";\nimport {Avatar, List, ListItem, ListItemAvatar, ListItemText, Typography} from \"@material-ui/core\";\nimport {Inbox} from \"@material-ui/icons\";\nimport useStyles from \"./style\";\n\nexport interface PartsPagePropsType {\n\n}\n\nconst PartsPage = ({}: PartsPagePropsType) => {\n    const model = usePartsPageModel()\n    const classes = useStyles()\n    useEffect(() => {\n        model.initData()\n    },[])\n    return (\n        <div>\n            <Typography variant={\"h4\"} className={classes.title}>\n                Parts\n            </Typography>\n            <List>\n            {\n                model.parts.map(part => {\n                    return (\n                        <ListItem key={part.name} button>\n                            <ListItemAvatar>\n                                <Avatar className={classes.avatar}>\n                                    <Inbox />\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText primary={part.name} secondary={part.fs_type}/>\n                        </ListItem>\n                    )\n                })\n            }\n            </List>\n        </div>\n    )\n}\n\nexport default PartsPage;\n","/home/aren/Desktop/YouPlus/ypw/src/pages/Storage/index.tsx",["559","560"],"import React, {useEffect, useState} from \"react\";\nimport ListPage from \"../../components/ListPage\";\nimport useStorageModel from \"./model\";\nimport {\n    Avatar,\n    IconButton,\n    List,\n    ListItem,\n    ListItemAvatar,\n    ListItemSecondaryAction,\n    ListItemText\n} from \"@material-ui/core\";\nimport {Archive, Delete} from \"@material-ui/icons\";\nimport useStyles from \"./style\";\nimport ListItemDialog from \"../../components/ListItemDialog\";\nimport {Storage} from \"../../api/storage\";\nimport useLayoutModel from \"../../model/layout\";\nimport {useSnackbar} from \"notistack\";\n\nexport interface StoragePagePropsType {\n\n}\n\nconst StoragePage = ({}: StoragePagePropsType) => {\n    const storageModel = useStorageModel()\n    const layoutModel = useLayoutModel()\n    const classes = useStyles()\n    useEffect(() => {\n        storageModel.init()\n    }, [])\n    const { enqueueSnackbar } = useSnackbar();\n    const [contextStorage, setContextStorage] = useState<Storage>()\n    const switchDeleteConfirmDialog = layoutModel.getDialogSwitchHandler('deleteStorageConfirm')\n    const openDeleteDialog = (storage: Storage) => {\n        setContextStorage(storage)\n        switchDeleteConfirmDialog()\n    }\n    return (\n        <div>\n\n            <ListPage\n                title={\"Storages\"}\n                actions={<></>}\n            >\n                <>\n                <ListItemDialog\n                    primary={contextStorage?.id ?? \"unknown\"}\n                    icon={<Archive/>}\n                    onClose={switchDeleteConfirmDialog}\n                    title={\"Delete\"}\n                    onOk={async () => {\n                        if (contextStorage) {\n                            await storageModel.remove(contextStorage?.id)\n                            enqueueSnackbar(`storage ${contextStorage?.id} removed`,{variant:\"success\"})\n                        }\n                        switchDeleteConfirmDialog()\n                    }}\n                    open={layoutModel.getDialogOpen('deleteStorageConfirm')}\n                    secondary={contextStorage?.type ?? \"unknown\"}\n                    text={\"Remove action will remove all SHARE FOLDER in this storage!\"}\n                />\n                    <List className={classes.list}>\n                        {\n                            storageModel.storages.map(storage => {\n                                return (\n                                    <ListItem key={storage.id} button>\n                                        <ListItemAvatar>\n                                            <Avatar className={classes.avatar}>\n                                                <Archive/>\n                                            </Avatar>\n                                        </ListItemAvatar>\n                                        <ListItemText primary={storage.id} secondary={storage.type}/>\n                                        <ListItemSecondaryAction>\n                                            <IconButton onClick={() => openDeleteDialog(storage)}>\n                                                <Delete/>\n                                            </IconButton>\n                                        </ListItemSecondaryAction>\n                                    </ListItem>\n                                )\n                            })\n                        }\n                    </List>\n                </>\n            </ListPage>\n        </div>\n    )\n}\n\nexport default StoragePage;\n","/home/aren/Desktop/YouPlus/ypw/src/pages/ShareFolder/index.tsx",["561","562","563","564"],"import React, {useEffect} from \"react\";\nimport useStyles from \"./style\";\nimport useShareFoldersModel from \"./model\";\nimport {Avatar, Button, List, ListItem, ListItemAvatar, ListItemText, Typography} from \"@material-ui/core\";\nimport {Add, Folder, Person} from \"@material-ui/icons\";\nimport NewShareDialog from \"../../components/NewShareDialog\";\nimport useLayoutModel from \"../../model/layout\";\nimport layout from \"../../model/layout\";\nimport {useHistory} from \"react-router-dom\";\n\nexport interface ShareFolderPropsType {\n\n}\n\nconst ShareFolder = ({}: ShareFolderPropsType) => {\n    const classes = useStyles()\n    const model = useShareFoldersModel()\n    const history = useHistory()\n    useEffect(() => {\n        model.initData()\n    }, [])\n    const layoutModel = useLayoutModel()\n    const newShareSwitchHandler = layoutModel.getDialogSwitchHandler(\"newShare\")\n    return (\n        <div>\n            <Typography variant={\"h4\"} className={classes.title}>\n                Folders\n            </Typography>\n            {\n                layoutModel.getDialogOpen(\"newShare\") &&\n                <NewShareDialog\n                    open={true}\n                    onClose={newShareSwitchHandler}\n                    onCreateShare={async (data) => {\n                        await model.createShare(data)\n                        newShareSwitchHandler()\n                    }}\n                />\n            }\n\n            <div className={classes.actions}>\n                <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    startIcon={<Add />}\n                    onClick={newShareSwitchHandler}\n                >\n                    New share folder\n                </Button>\n            </div>\n            <List>\n                {\n                    model.folders.map(it => {\n                        return (\n                            <ListItem key={it.name} button onClick={() => history.push(`/folder/${it.name}/info`)}>\n                                <ListItemAvatar>\n                                    <Avatar className={classes.avatar}>\n                                        <Folder />\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText primary={it.name}/>\n                            </ListItem>\n                        )\n                    })\n                }\n\n            </List>\n        </div>\n    )\n}\n\nexport default ShareFolder;\n","/home/aren/Desktop/YouPlus/ypw/src/pages/Disks/index.tsx",["565","566","567"],"import React, {useEffect} from \"react\";\nimport useDisksModel from \"./model\";\nimport {Avatar, List, ListItem, ListItemAvatar, ListItemText, Typography} from \"@material-ui/core\";\nimport {Storage, Store} from \"@material-ui/icons\";\nimport useStyles from \"./style\";\n\nexport interface DisksPagePropsType {\n\n}\n\nconst DisksPage = ({}: DisksPagePropsType) => {\n    const classes = useStyles()\n    const model = useDisksModel()\n    useEffect(() => {\n        model.initData()\n    },[])\n    return (\n        <div>\n            <Typography variant={\"h4\"} className={classes.title}>\n                Disks\n            </Typography>\n            <List>\n                {\n                    model.disks.map(it => {\n                        return (\n                            <ListItem key={it.name} button>\n                                <ListItemAvatar>\n                                    <Avatar className={classes.avatar}>\n                                        <Storage />\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText primary={it.name} secondary={it.model}/>\n                            </ListItem>\n                        )\n                    })\n                }\n            </List>\n        </div>\n    )\n}\n\nexport default DisksPage;\n","/home/aren/Desktop/YouPlus/ypw/src/pages/Users/index.tsx",["568","569"],"import React, {useEffect} from \"react\";\nimport useStyles from \"./style\";\nimport {\n    Avatar,\n    Button, IconButton,\n    List,\n    ListItem,\n    ListItemAvatar,\n    ListItemSecondaryAction,\n    ListItemText, Menu,\n    MenuItem,\n    Typography\n} from \"@material-ui/core\";\nimport useUsersModel from \"./model\";\nimport {Add, Delete, MoreVert, Person} from \"@material-ui/icons\";\nimport useLayoutModel from \"../../model/layout\";\nimport NewUserDialog from \"../../components/NewUserDialog\";\nimport {useContextMenu} from \"../../hooks/ContextMenu\";\n\nexport interface UsersPagePropsType {\n\n}\nconst UsersPage = ({}: UsersPagePropsType) => {\n    const classes = useStyles()\n    const usersModel = useUsersModel()\n    const layoutModel = useLayoutModel()\n    const userContextMenu = useContextMenu<string>()\n    const onSwitchNewUserDialog = layoutModel.getDialogSwitchHandler(\"newUser\")\n    useEffect(() => {\n        usersModel.initData()\n    }, [])\n    return (\n        <div className={classes.root}>\n            <NewUserDialog\n                open={layoutModel.getDialogOpen(\"newUser\")}\n                onClose={onSwitchNewUserDialog}\n                onOk={(username, password) => {\n                    usersModel.newUser(username,password)\n                    onSwitchNewUserDialog()\n                }}\n            />\n            <Menu\n                open={userContextMenu.isOpen}\n                anchorEl={userContextMenu.anchor}\n                onClose={() => userContextMenu.close()}\n            >\n                <MenuItem onClick={async () => {\n                    if (userContextMenu.data) {\n                        userContextMenu.close()\n                        await usersModel.remove(userContextMenu.data)\n\n                    }\n                }}>\n                    <Delete/> Remove user\n                </MenuItem>\n            </Menu>\n            <Typography variant={\"h4\"} className={classes.title}>\n                Users\n            </Typography>\n            <div className={classes.actions}>\n                <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    startIcon={<Add />}\n                    onClick={onSwitchNewUserDialog}\n                >\n                    New user\n                </Button>\n            </div>\n            <List>\n                {\n                    usersModel.users.map(it => {\n                        return (\n                            <ListItem key={it}>\n                                <ListItemAvatar>\n                                    <Avatar className={classes.avatar}>\n                                        <Person />\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText primary={it} />\n                                <ListItemSecondaryAction>\n                                    <IconButton onClick={(e) => userContextMenu.open(it,e.target)}>\n                                        <MoreVert />\n                                    </IconButton>\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                        )\n                    })\n                }\n\n            </List>\n        </div>\n    )\n}\n\nexport default UsersPage;\n","/home/aren/Desktop/YouPlus/ypw/src/pages/Apps/index.tsx",["570","571","572","573"],"import React, {useEffect} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {Button, Grid, Typography} from \"@material-ui/core\";\nimport AppCard from \"../../components/AppCard\";\nimport useAppsPageModel from \"./model\";\nimport {App} from \"../../api/apps\";\nimport useStyles from \"./style\";\nimport InstallAppDialog from \"../../components/InstallAppDialog\";\nimport useLayoutModel from \"../../model/layout\";\nimport {Add} from \"@material-ui/icons\";\n\n\ninterface AppsPagePropsType {\n\n}\n\n\nexport default function AppsPage({}: AppsPagePropsType) {\n    const classes = useStyles();\n    const model = useAppsPageModel()\n    const layoutModel = useLayoutModel()\n    return (\n        <div className={classes.root}>\n            <InstallAppDialog\n                open={layoutModel.getDialogOpen('installApp')}\n                onClose={() => {\n                    layoutModel.switchDialog(\"installApp\")\n                }}\n                onOk={async (file) => {\n                    await model.install(file)\n                    layoutModel.switchDialog(\"installApp\")\n                }}\n            />\n            <div className={classes.header}>\n                <div className={classes.title}>\n                    Apps\n                </div>\n                <Button\n                    variant=\"contained\"\n                    onClick={() => layoutModel.switchDialog(\"installApp\")}\n                    color=\"secondary\"\n                    startIcon={<Add />}\n                >\n                    Install App\n                </Button>\n            </div>\n\n            <Grid container spacing={2}>\n                {model.appList.map((app: App) => (\n                    <Grid xs={2} item>\n                        <AppCard\n                            app={app}\n                            onStart={() => model.start(app.id)}\n                            onStop={() => model.stop(app.id)}\n                            enableAutoStart={() => model.addToAutoStart(app.id)}\n                            disableAutoStart={() => model.removeAutoStart(app.id)}\n                            onRemove={() => model.uninstall(app.id)}\n                        />\n                    </Grid>\n                ))}\n            </Grid>\n        </div>\n    );\n}\n","/home/aren/Desktop/YouPlus/ypw/src/pages/ZFS/index.tsx",["574","575"],"import React, {useEffect, useState} from \"react\";\nimport {\n    Avatar,\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    IconButton,\n    List,\n    ListItem,\n    ListItemAvatar,\n    ListItemSecondaryAction,\n    ListItemText,\n    Menu,\n    MenuItem\n} from \"@material-ui/core\";\nimport useZFSModel from \"./model\";\nimport {Add, Delete, Dns, MoreVert} from \"@material-ui/icons\";\nimport ListPage from \"../../components/ListPage\";\nimport CreateZFSPoolDialog from \"../../components/CreateZFSPoolDialog\";\nimport useStyles from \"./style\";\nimport useLayoutModel from \"../../model/layout\";\nimport ListItemDialog from \"../../components/ListItemDialog\";\nimport {ZFSPool} from \"../../api/zfs\";\nimport useStorageModel from \"../Storage/model\";\nimport {useSnackbar} from \"notistack\";\nimport {useHistory} from \"react-router-dom\";\n\nexport interface ZFSPagePropsType {\n\n}\n\nconst ZFSPage = ({}: ZFSPagePropsType) => {\n    const zfsModel = useZFSModel()\n    const layoutModel = useLayoutModel()\n    const storageModel = useStorageModel()\n    const history = useHistory()\n    const classes = useStyles()\n    useEffect(() => {\n        zfsModel.refresh()\n    },[])\n    const [moreMenuEl, setMoreMenuEl] = React.useState(null);\n    const createPoolDialogSwitchHandler = layoutModel.getDialogSwitchHandler(\"newZFSPool\")\n    const [contextPool, setContextPool] = useState<ZFSPool>()\n    const [deleteConfirmDialog, setDeleteConfirmDialog] = useState<{\n        name: string,\n        open: boolean\n    }>({name: \"\", open: false})\n    const {enqueueSnackbar} = useSnackbar();\n\n    const openDeleteConfirm = (name: string) => {\n        setDeleteConfirmDialog({\n            name,\n            open: true\n        })\n    }\n    const closeDeleteConfirm = () => {\n        setDeleteConfirmDialog({\n            ...deleteConfirmDialog,\n            open: false\n        })\n    }\n    const onRemoveHandler = async () => {\n        if (deleteConfirmDialog?.name) {\n            await zfsModel.removePool(deleteConfirmDialog.name)\n            enqueueSnackbar(\"delete success\", {variant: 'success'})\n            closeDeleteConfirm()\n        }\n    }\n    const handleMoreMenuClick = (event: any) => {\n        setMoreMenuEl(event.currentTarget);\n    };\n    const handleMoreMenuClose = () => {\n        setMoreMenuEl(null);\n    };\n    const asStorageSwitchHandler = layoutModel.getDialogSwitchHandler('poolAsStorageDialog')\n    return (\n        <ListPage\n            title={\"Pools\"}\n            actions={\n                <>\n                    <Button\n                        variant={\"contained\"}\n                        color={'secondary'}\n                        startIcon={<Add/>}\n                        onClick={createPoolDialogSwitchHandler}\n                    >New pool</Button>\n                </>\n            }\n        >\n            <>\n                <Menu\n                    anchorEl={moreMenuEl}\n                    keepMounted\n                    open={Boolean(moreMenuEl)}\n                    onClose={handleMoreMenuClose}\n                >\n                    <MenuItem onClick={() => {\n                        asStorageSwitchHandler()\n                        handleMoreMenuClose()\n                    }}>Use as storage</MenuItem>\n\n                </Menu>\n                <ListItemDialog\n                    primary={contextPool?.name ?? \"unknown\"}\n                    icon={<Dns/>}\n                    onClose={asStorageSwitchHandler}\n                    title={\"As storage\"}\n                    onOk={async () => {\n                        await storageModel.addStorage(`/${contextPool?.name}`, \"ZFSPool\")\n                        asStorageSwitchHandler()\n                        enqueueSnackbar(\"storage created\", {\n                            variant: 'success'\n                        })\n                    }}\n                    text={\"Use this pool to create new storage\"}\n                    open={layoutModel.getDialogOpen('poolAsStorageDialog')}\n                />\n                <CreateZFSPoolDialog\n                    open={layoutModel.getDialogOpen(\"newZFSPool\")}\n                    onClose={createPoolDialogSwitchHandler}\n                    onOk={async (form) => {\n                        await zfsModel.createPool({\n                            name: form.name,\n                            disks: form.disks.map(it => `/dev/${it}`)\n                        })\n                        enqueueSnackbar(\"create pool success\", {\n                            variant: 'success'\n                        })\n                        createPoolDialogSwitchHandler()\n                    }}\n                />\n                <Dialog open={Boolean(deleteConfirmDialog.open)} maxWidth={\"xl\"}>\n                    <DialogTitle>\n                        Remove\n                    </DialogTitle>\n                    <DialogContent className={classes.deleteDialogContent}>\n                        <DialogContentText>\n                            ALL DATA in pool will deleted,please confirm!\n                        </DialogContentText>\n                        <ListItem className={classes.deleteDialogItem}>\n                            <ListItemAvatar>\n                                <Avatar>\n                                    <Dns/>\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText primary={deleteConfirmDialog.name}/>\n                        </ListItem>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color={\"secondary\"} onClick={closeDeleteConfirm}>\n                            Cancel\n                        </Button>\n                        <Button color={\"secondary\"} onClick={onRemoveHandler}>\n                            Delete\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <List className={classes.list}>\n                    {\n                        zfsModel.pools.map(pool => {\n                            return (\n                                <ListItem key={pool.name} button onClick={() => history.push(`/pool/${pool.name}/info`)}>\n                                    <ListItemAvatar>\n                                        <Avatar className={classes.avatar}>\n                                            <Dns/>\n                                        </Avatar>\n                                    </ListItemAvatar>\n                                    <ListItemText primary={pool.name}/>\n                                    <ListItemSecondaryAction>\n\n                                        <IconButton>\n                                            <Delete onClick={() => openDeleteConfirm(pool.name)}/>\n                                        </IconButton>\n                                        <IconButton onClick={(e) => {\n                                            setContextPool(pool)\n                                            handleMoreMenuClick(e)\n                                        }}>\n                                            <MoreVert/>\n                                        </IconButton>\n                                    </ListItemSecondaryAction>\n                                </ListItem>\n                            )\n                        })\n                    }\n\n                </List>\n            </>\n        </ListPage>\n    )\n}\n\nexport default ZFSPage;\n","/home/aren/Desktop/YouPlus/ypw/src/pages/Account/index.tsx",["576"],"import {ReactElement} from \"react\";\nimport useStyles from \"./style\";\nimport {Button, Grid, Typography} from \"@material-ui/core\";\nimport InfoCard from \"../../components/InfoCard\";\nimport useLayoutModel from \"../../model/layout\";\nimport ChangePasswordDialog from \"../../components/ChangePasswordDialog\";\nimport {changePassword} from \"../../api/account\";\nimport {useSnackbar} from \"notistack\";\n\nexport interface AccountPagePropsType {\n\n}\n\nconst AccountPage = ({}: AccountPagePropsType): ReactElement => {\n    const classes = useStyles()\n    const layoutModel = useLayoutModel()\n    const {enqueueSnackbar} = useSnackbar()\n    return (\n        <div className={classes.root}>\n            <ChangePasswordDialog\n                open={layoutModel.getDialogOpen(\"changePassword\")}\n                onCancel={() => layoutModel.switchDialog(\"changePassword\")}\n                onOk={async (password) => {\n                    await changePassword(password)\n                    enqueueSnackbar(\"password changed\", {variant: 'success'})\n                    layoutModel.switchDialog(\"changePassword\")\n                }}\n            />\n            <Typography variant={\"h5\"}>\n                {localStorage.getItem(\"user\")}\n            </Typography>\n            <Grid container spacing={4} className={classes.content}>\n                <Grid item>\n                    <InfoCard\n                        className={classes.card}\n                        label={\"Password\"}\n                        value={\"******\"}\n                        bottom={\n                            <>\n                                <Button onClick={() => layoutModel.switchDialog(\"changePassword\")}>\n                                    Change\n                                </Button>\n                            </>\n                        }\n                    />\n                </Grid>\n            </Grid>\n\n        </div>\n    )\n}\n\nexport default AccountPage\n","/home/aren/Desktop/YouPlus/ypw/src/pages/Login/index.tsx",["577","578"],"import useStyles from \"./style\";\nimport {Button, Paper, TextField} from \"@material-ui/core\";\nimport useUserModel from \"../../model/user\";\nimport {useEffect, useState} from \"react\";\nimport {useSnackbar} from \"notistack\";\nimport {useHistory} from \"react-router-dom\";\nimport {useLocalStorageState} from \"ahooks\";\n\nexport interface LoginPagePropsType {\n\n}\n\nconst LoginPage = ({}: LoginPagePropsType) => {\n    const history = useHistory()\n    const {enqueueSnackbar} = useSnackbar();\n    const [username, setUsername] = useState<string | undefined>()\n    const [password, setPassword] = useState<string | undefined>()\n    const [serviceUrl,setServiceUrl] = useState<string | undefined>()\n    const classes = useStyles()\n    const model = useUserModel()\n    useEffect(() => {\n        setServiceUrl(window.location.protocol +\"//\" + window.location.host.replace( window.location.port,\"8999\"))\n    },[])\n    const onLoginClick = async () => {\n        if (username && password && serviceUrl) {\n            localStorage.setItem(\"apiUrl\",serviceUrl)\n            const result = await model.login(username, password)\n            if (result.success) {\n                enqueueSnackbar(\"Login success\", {variant: 'success'})\n                history.replace(\"/\")\n            } else {\n                enqueueSnackbar(`Login failed:${result.message}`, {variant: 'error'})\n            }\n        }\n    }\n    return (\n        <div className={classes.root}>\n\n            <Paper className={classes.loginContainer}>\n                <div className={classes.loginHeader}>\n                    <div className={classes.title}>\n                        YouPlus\n                    </div>\n                    <div className={classes.sub}>\n                        ProjectXPolaris\n                    </div>\n                </div>\n                <div className={classes.loginForm}>\n                    <TextField\n                        label={\"ServiceUrl\"}\n                        fullWidth\n                        variant={\"outlined\"}\n                        value={serviceUrl}\n                        className={classes.input}\n                        onChange={(e) => setServiceUrl(e.target.value)}\n                    />\n                    <TextField\n                        label={\"Username\"}\n                        fullWidth\n                        variant={\"outlined\"}\n                        value={username}\n                        className={classes.input}\n                        onChange={(e) => setUsername(e.target.value)}\n                    />\n                    <TextField\n                        label={\"Password\"}\n                        fullWidth\n                        variant={\"outlined\"}\n                        className={classes.input}\n                        type={\"password\"}\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    />\n                    <Button variant={'contained'} fullWidth className={classes.loginBtn} onClick={onLoginClick}>Login\n                        in </Button>\n                </div>\n            </Paper>\n        </div>\n    )\n}\n\nexport default LoginPage;\n","/home/aren/Desktop/YouPlus/ypw/src/pages/ShareFolderDetail/index.tsx",["579","580","581","582"],"import React, {ReactElement, useEffect, useState} from \"react\";\nimport {useHistory, useParams} from \"react-router-dom\";\nimport useShareFolderDetailModel from \"./model\";\nimport useStyles from \"./style\";\nimport InfoCard from \"../../components/InfoCard\";\nimport {Button, Grid} from \"@material-ui/core\";\nimport UserListCard from \"../../components/UserListCard\";\nimport UserSelectDialog from \"../../components/UserSelectDialog\";\nimport SwitchSelectDialog from \"../../components/SwitchSelectDialog\";\nimport {getSwitchText} from \"../../utils/values\";\nimport {Delete} from \"@material-ui/icons\";\nimport useLayoutModel from \"../../model/layout\";\n\nexport interface ShareFolderDetailPropsType {\n\n}\n\ntype UserPickModeType = \"valid user\" | \"write list\"\ntype SwitchSelectTargetType = \"public\" | 'readonly'  | \"writable\"\nconst ShareFolderDetail = ({}: ShareFolderDetailPropsType): ReactElement => {\n    const {name}: any = useParams();\n    const classes = useStyles()\n    const model = useShareFolderDetailModel()\n    const layoutModel = useLayoutModel()\n    const history = useHistory()\n    useEffect(() => {\n        model.initData(name)\n    }, [])\n    const [pickUpUserMode, setPickUpUserMode] = useState<UserPickModeType | undefined>()\n    const [pickUserExcept, setPickUserExcept] = useState<string[]>([])\n    const [switchSelectTarget, setSwitchSelectTarget] = useState<SwitchSelectTargetType | undefined>()\n    const onOk = async (user: string) => {\n        if (!model.folder) {\n            return\n        }\n        if (pickUpUserMode == \"valid user\") {\n            model.update({\n                validUsers: [...(model.folder?.validateUsers ?? []).map(it => it.name), user]\n            })\n        } else if (pickUpUserMode == 'write list') {\n            model.update({\n                writeList: [...(model.folder?.writeableUsers ?? []).map(it => it.name), user]\n            })\n        }\n        setPickUpUserMode(undefined)\n    }\n    const onSwitchSelect = (value: boolean | undefined) => {\n        switch (switchSelectTarget) {\n            case \"public\":\n                model.update({\n                    public: getSwitchText(value)\n                })\n                break;\n            case 'readonly':\n                model.update({\n                    readonly: getSwitchText(value)\n                })\n                break;\n            case 'writable':\n                model.update({\n                    writable: getSwitchText(value)\n                })\n        }\n        setSwitchSelectTarget(undefined)\n\n    }\n    return (\n        <div className={classes.root}>\n            <UserSelectDialog\n                onCancel={() => setPickUpUserMode(undefined)}\n                onOk={onOk}\n                open={Boolean(pickUpUserMode)}\n                except={pickUserExcept}\n            />\n            <SwitchSelectDialog\n                onOk={onSwitchSelect}\n                onClose={() => setSwitchSelectTarget(undefined)}\n                open={Boolean(switchSelectTarget)}\n            />\n            <div className={classes.header}>\n                <div className={classes.title}>\n                    {model.folder?.name}\n                </div>\n                <Button\n                    variant={'contained'}\n                    size={\"small\"}\n                    startIcon={<Delete />}\n                    onClick={() => {\n                        layoutModel.showConfirmDialog({\n                            title: 'Remove Confirm',\n                            message: 'Remove folder will lost ALL DATA in folder',\n                            onOk:async () => {\n                                await model.remove()\n                                history.goBack()\n                            }\n                        })\n                    }}\n                >\n                    Remove folder\n                </Button>\n            </div>\n\n            <Grid container spacing={4} className={classes.grid}>\n                <Grid xs={2} item>\n                    <InfoCard label={\"folder name\"} value={model.folder?.name} valueSize={18}\n                              className={classes.infoCard}/>\n                </Grid>\n                <Grid xs={2} item>\n                    <InfoCard label={\"storage\"} value={model.folder?.storage.id} valueSize={18}\n                              className={classes.infoCard}/>\n                </Grid>\n                <Grid xs={2} item>\n                    <InfoCard\n                        label={\"public\"}\n                        value={model.folder?.public}\n                        valueSize={18}\n                        className={classes.infoCard}\n                        onEdit={() => setSwitchSelectTarget(\"public\")}\n                    />\n                </Grid>\n                <Grid xs={2} item>\n                    <InfoCard\n                        label={\"readonly\"}\n                        value={model.folder?.readonly}\n                        valueSize={18}\n                        className={classes.infoCard}\n                        onEdit={() => setSwitchSelectTarget(\"readonly\")}\n                    />\n                </Grid>\n                <Grid xs={2} item>\n                    <InfoCard\n                        label={\"writable\"}\n                        value={model.folder?.writable}\n                        valueSize={18}\n                        className={classes.infoCard}\n                        onEdit={() => setSwitchSelectTarget(\"writable\")}\n                    />\n                </Grid>\n            </Grid>\n            <Grid className={classes.grid} container spacing={4}>\n                <Grid xs={12} sm={6} xl={4} item>\n\n                    <UserListCard\n                        users={model.folder?.validateUsers}\n                        title={\"valid user\"}\n                        actions={\n                            <>\n                                <Button onClick={() => {\n                                    setPickUserExcept((model.folder?.validateUsers ?? []).map(it => it.name))\n                                    setPickUpUserMode(\"valid user\")\n                                }}>\n                                    add user\n                                </Button>\n                            </>\n                        }\n                        onRemove={(name) => {\n                            model.update({\n                                validUsers: model.folder?.validateUsers.map(it => it.name).filter(it => it !== name)\n                            })\n                        }}\n                    />\n                </Grid>\n                <Grid xs={12} sm={6} xl={4} item>\n                    <UserListCard\n                        users={model.folder?.writeableUsers}\n                        title={\"write list\"}\n                        onRemove={(name) => {\n                            model.update({\n                                writeList: model.folder?.writeableUsers.map(it => it.name).filter(it => it !== name)\n                            })\n                        }}\n                        actions={\n                            <>\n                                <Button onClick={() => {\n                                    setPickUserExcept((model.folder?.writeableUsers ?? []).map(it => it.name))\n                                    setPickUpUserMode(\"write list\")\n                                }}>\n                                    add user\n                                </Button>\n                            </>\n                        }\n                    />\n                </Grid>\n            </Grid>\n\n\n        </div>\n    )\n}\n\nexport default ShareFolderDetail\n","/home/aren/Desktop/YouPlus/ypw/src/pages/GroupDetail/index.tsx",["583","584","585"],"import {ReactElement, useEffect} from \"react\";\nimport useStyles from \"./style\";\nimport useGroupDetailModel from \"./model\";\nimport {useHistory, useParams} from \"react-router-dom\";\nimport {Button, Paper, Typography} from \"@material-ui/core\";\nimport UserListCard from \"../../components/UserListCard\";\nimport UserSelectDialog from \"../../components/UserSelectDialog\";\nimport useLayoutModel from \"../../model/layout\";\nimport {Delete} from \"@material-ui/icons\";\n\nexport interface GroupDetailPagePropsType {\n\n}\n\nconst GroupDetailPage = ({}: GroupDetailPagePropsType): ReactElement => {\n    const {name}: any = useParams()\n    const classes = useStyles()\n    const model = useGroupDetailModel()\n    const layoutModel = useLayoutModel()\n    const history = useHistory()\n    useEffect(() => {\n        model.setGroupName(name)\n    }, [])\n    return (\n        <div className={classes.root}>\n            <div className={classes.header}>\n                <Typography variant={\"h4\"} className={classes.title}>\n                    {model.groupDetail?.name ?? \"\"}\n                </Typography>\n                <Button\n                    variant={\"contained\"}\n                    startIcon={<Delete/>}\n                    onClick={() => {\n                        layoutModel.showConfirmDialog({\n                            title: \"Remove confirm\",\n                            message:\"confirm remove\",\n                            onOk:async () => {\n                                await model.remove()\n                                history.replace(\"/groups\")\n                            }\n                        })\n                    }}\n                >\n                    Remove\n                </Button>\n            </div>\n\n            <UserSelectDialog\n                onCancel={() => layoutModel.switchDialog(\"group/addUser\")}\n                onOk={(username) => {\n                    layoutModel.switchDialog(\"group/addUser\")\n                    model.addUser([username])\n                }}\n                except={(model.groupDetail?.users ?? []).map(it => it.name)}\n                open={layoutModel.getDialogOpen(\"group/addUser\")}\n            />\n            <UserListCard\n                onRemove={(username) => {\n                    model.removeUser([username])\n                }}\n                className={classes.userList}\n                users={\n                    model.groupDetail?.users ?? []\n                }\n                actions={<Button onClick={() => layoutModel.switchDialog(\"group/addUser\")}>Add user</Button>}\n            />\n        </div>\n    )\n}\n\nexport default GroupDetailPage\n","/home/aren/Desktop/YouPlus/ypw/src/pages/DashBoard/index.tsx",["586","587","588"],"import {ReactElement, useEffect} from \"react\";\nimport useStyles from \"./style\";\nimport InfoCard from \"../../components/InfoCard\";\nimport {Grid} from \"@material-ui/core\";\nimport useDashboardModel from \"./model\";\nimport ImageInfoCard from \"../../components/ImageInfoCard\";\nimport DiskIcon from \"../../components/Icons/DiskIcon\";\nimport useDisksModel from \"../Disks/model\";\nimport StorageIcon from \"../../components/Icons/StorageIcon\";\nimport ShareFolderIcon from \"../../components/Icons/ShareFolderIcon\";\nimport UserIcon from \"../../components/Icons/UserIcon\";\nimport {useInterval} from \"ahooks\";\n\nexport interface DashboardPagePropsType {\n\n}\n\nconst DashboardPage = ({}: DashboardPagePropsType): ReactElement => {\n    const classes = useStyles()\n    const model = useDashboardModel()\n    useInterval(() => {\n        model.refreshSystemInfo()\n    },4000)\n    useEffect(() => {\n        model.initData()\n    },[])\n    return (\n        <div className={classes.root}>\n            <Grid container spacing={2}>\n                <Grid item xs={2}>\n                    <ImageInfoCard icon={<DiskIcon width={64} height={64}/>} text={`${model.diskCount} Disks`}/>\n                </Grid>\n                <Grid item xs={2}>\n                    <ImageInfoCard icon={<StorageIcon width={64} height={64}/>} text={`${model.storageCount} Storage`}/>\n                </Grid>\n                <Grid item xs={2}>\n                    <ImageInfoCard icon={<ShareFolderIcon width={64} height={64}/>} text={`${model.shareFolderCount} Share folders`}/>\n                </Grid>\n                <Grid item xs={2}>\n                    <ImageInfoCard icon={<UserIcon width={64} height={64}/>} text={`${model.userCount} Users`}/>\n                </Grid>\n            </Grid>\n            <div className={classes.sectionTitle}>\n                Server info\n            </div>\n            {\n                model.systemInfo &&\n                <Grid container spacing={2}>\n                    <Grid item>\n                        <InfoCard label={\"Hostname\"} value={model.systemInfo.node.hostname} valueSize={20} />\n                    </Grid>\n                    <Grid item>\n                        <InfoCard label={\"OS\"} value={model.systemInfo.os.name} valueSize={20} />\n                    </Grid>\n                    <Grid item>\n                        <InfoCard label={\"Board\"} value={model.systemInfo.board.vendor} valueSize={20}/>\n                    </Grid>\n                    <Grid item>\n                        <InfoCard label={\"CPU\"} value={model.systemInfo.cpu.model} valueSize={20}/>\n                    </Grid>\n                    <Grid item>\n                        <InfoCard label={\"Memory\"} value={`${model.systemInfo.memory.size}MB`} valueSize={20}/>\n                    </Grid>\n                </Grid>\n            }\n\n        </div>\n    )\n}\n\nexport default DashboardPage\n","/home/aren/Desktop/YouPlus/ypw/src/pages/Groups/index.tsx",["589","590"],"import {ReactElement, useEffect} from \"react\";\nimport ListPage from \"../../components/ListPage\";\nimport {Avatar, Button, List, ListItem, ListItemAvatar, ListItemText} from \"@material-ui/core\";\nimport {Add, Group} from \"@material-ui/icons\";\nimport useUserGroupsModel from \"./model\";\nimport NewGroupDialog from \"../../components/NewGroupDialog\";\nimport useLayoutModel from \"../../model/layout\";\nimport useStyles from \"./style\";\nimport {useHistory} from \"react-router-dom\";\n\nexport interface GroupsPagePropsType {\n\n}\n\nconst GroupsPage = ({}: GroupsPagePropsType): ReactElement => {\n    const classes = useStyles()\n    const model = useUserGroupsModel()\n    const layoutModel = useLayoutModel()\n    const history = useHistory()\n    useEffect(() => {\n        model.fetchData()\n    }, [])\n    return (\n        <ListPage\n            title={\"Groups\"}\n            actions={\n                <>\n                    <Button startIcon={<Add/>} variant={\"contained\"}\n                            onClick={() => layoutModel.switchDialog(\"newgroup\")}>\n                        New user group\n                    </Button>\n                </>\n            }\n        >\n            <div>\n                <NewGroupDialog\n                    onOk={(name) => {\n                        model.create(name)\n                        layoutModel.switchDialog(\"newgroup\")\n                    }}\n                    onCancel={() => layoutModel.switchDialog(\"newgroup\")}\n                    open={layoutModel.getDialogOpen(\"newgroup\")}\n                />\n                <List>\n                    {\n                        model.groups.map(group => {\n                            return (\n                                <ListItem key={group.gid} button onClick={() => {history.push(`/group/${group.name}/info`)}}>\n                                    <ListItemAvatar>\n                                        <Avatar className={classes.avatar}>\n                                            <Group/>\n                                        </Avatar>\n                                    </ListItemAvatar>\n                                    <ListItemText primary={group.name} secondary={group.type}/>\n                                </ListItem>\n                            )\n                        })\n\n                    }\n                </List>\n            </div>\n\n\n        </ListPage>\n    )\n}\n\nexport default GroupsPage\n","/home/aren/Desktop/YouPlus/ypw/src/pages/Groups/style.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/pages/Groups/model.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/pages/DashBoard/model.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/pages/DashBoard/style.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/components/Icons/UserIcon.tsx",[],"/home/aren/Desktop/YouPlus/ypw/src/components/Icons/DiskIcon.tsx",[],"/home/aren/Desktop/YouPlus/ypw/src/components/Icons/StorageIcon.tsx",[],"/home/aren/Desktop/YouPlus/ypw/src/components/Icons/ShareFolderIcon.tsx",[],"/home/aren/Desktop/YouPlus/ypw/src/api/users.ts",["591"],"import apiRequest from \"../utils/request\";\nimport {ApplicationConfig} from \"../config\";\nimport {BaseResponse} from \"./base\";\nimport {useClickAway} from \"ahooks\";\n\nexport type UserGroupType = \"admin\" | \"normal\"\n\nexport interface UserGroup {\n    name: string\n    type: UserGroupType\n    gid: string\n}\n\nexport interface UserListResponse {\n    users: string[]\n}\n\nexport type UserGroupDetail = UserGroup & {\n    users: {\n        name: string\n        uid: string\n    }[]\n}\nexport const getUserList = async (): Promise<UserListResponse> => {\n    return await apiRequest.get(ApplicationConfig.apiPaths.users)\n}\nexport const createUser = async (username: string, password: string): Promise<void> => {\n    return await apiRequest.post(ApplicationConfig.apiPaths.users, {\n        data: {\n            username, password\n        }\n    })\n}\n\nexport const removeUser = async (username: string): Promise<void> => {\n    return await apiRequest.delete(ApplicationConfig.apiPaths.users, {\n        params: {\n            username\n        }\n    })\n}\nexport const fetchGroupList = async (): Promise<{ groups: UserGroup[] }> => {\n    return await apiRequest.get(ApplicationConfig.apiPaths.groups)\n}\nexport const createGroup = async (name: string): Promise<UserGroup> => {\n    return await apiRequest.post(ApplicationConfig.apiPaths.groups, {data: {name}})\n}\nexport const fetchGroupDetail = async (name: string): Promise<UserGroupDetail> => {\n    return await apiRequest.get(ApplicationConfig.apiPaths.group.replace(\":name\", name))\n}\nexport const removeGroup = async (name: string): Promise<UserGroupDetail> => {\n    return await apiRequest.delete(ApplicationConfig.apiPaths.groups,{params:{name}})\n}\nexport const addUserToUserGroup = async (name: string, users: string[]): Promise<BaseResponse> => {\n    return await apiRequest.post(ApplicationConfig.apiPaths.groupUsers.replace(\":name\", name), {data: {users}})\n}\n\nexport const removeUserFromUserGroup = async (name: string, users: string[]): Promise<BaseResponse> => {\n    return await apiRequest.delete(ApplicationConfig.apiPaths.groupUsers.replace(\":name\", name), {data: {users}})\n}\n","/home/aren/Desktop/YouPlus/ypw/src/api/share.ts",["592"],"import apiRequest from \"../utils/request\";\nimport {ApplicationConfig} from \"../config\";\nimport {UserListResponse} from \"./users\";\nexport interface  ShareFolder {\n    id:number\n    name:string\n    storage:{\n        id:string\n    },\n    validateUsers:{\n        uid:string\n        name:string\n    }[],\n    writeableUsers:{\n        uid:string\n        name:string\n    }[],\n    public:string,\n    readonly:string\n    writable:string\n}\nexport interface FetchShareFoldersResponse {\n    folders:ShareFolder[]\n}\nexport const getShareList = async ():Promise<FetchShareFoldersResponse> => {\n    return await apiRequest.get(ApplicationConfig.apiPaths.share)\n}\n\nexport const createNewShare = async (data:any):Promise<void> => {\n    return await apiRequest.post(ApplicationConfig.apiPaths.share,{\n        data\n    })\n}\n\nexport const removeShare = async (id : number):Promise<void> => {\n    return await apiRequest.delete(ApplicationConfig.apiPaths.share,{\n        params:{\n            id\n        }\n    })\n}\nexport interface ShareUpdateOption {\n    validUsers?:string[]\n    writeList?:string[]\n    public?:string\n    readonly?:string\n    writable?:string\n}\nexport const updateShare = async (name:string,option:ShareUpdateOption):Promise<void> => {\n    return await apiRequest.post(ApplicationConfig.apiPaths.shareUpdate,{\n        data:{\n            name,\n            ...option\n        }\n    })\n}\n","/home/aren/Desktop/YouPlus/ypw/src/layout/Base/parts/Tool/index.tsx",["593","594","595","596","597","598","599","600"],"import Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport * as React from \"react\";\nimport useStyles from \"./style\";\nimport {Avatar, ButtonBase, Menu, MenuItem} from \"@material-ui/core\";\nimport {Person} from \"@material-ui/icons\";\nimport useUserModel from \"../../../../model/user\";\nimport {useHistory} from \"react-router-dom\";\nimport TaskPopup from \"../Task\";\nimport UserPopup from \"../../../../components/UserPopup\";\n\nexport interface AppToolbarPropsType {\n\n}\n\nconst AppToolbar = ({}: AppToolbarPropsType) => {\n    const classes = useStyles()\n    const [userMenuEl, setUserMenuEl] = React.useState(null);\n    const userModel = useUserModel()\n    const history = useHistory()\n    const handleUserMenuClick = (event:any) => {\n        setUserMenuEl(event.currentTarget);\n    };\n\n    const handleUserMenuClose = () => {\n        setUserMenuEl(null);\n    };\n    const getUsername = () => {\n        const username = localStorage.getItem(\"username\")\n        if (username) {\n            return username\n        }\n        return \"Unknown\"\n    }\n\n    return (\n        <Toolbar>\n            <UserPopup\n                username={getUsername()}\n                open={Boolean(userMenuEl)}\n                anchorEl={userMenuEl}\n                onClose={handleUserMenuClose}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n            />\n            <Typography variant=\"h6\" noWrap component=\"div\" className={classes.title}>\n                YouPlus\n            </Typography>\n            <Avatar className={classes.avatar} onClick={handleUserMenuClick}>\n                { getUsername()[0] }\n            </Avatar>\n            <TaskPopup className={classes.actionIcon} />\n        </Toolbar>\n    )\n}\n\nexport default AppToolbar;\n","/home/aren/Desktop/YouPlus/ypw/src/components/ListPage/index.tsx",[],"/home/aren/Desktop/YouPlus/ypw/src/components/ImageInfoCard/index.tsx",["601"],"import {ReactElement} from \"react\";\nimport {Paper} from \"@material-ui/core\";\nimport useStyles from \"./style\";\nimport DiskIcon from \"../Icons/DiskIcon\";\n\nexport interface ImageInfoCardPropsType {\n    icon?:any\n    text:string\n}\n\nconst ImageInfoCard = ({icon,text}: ImageInfoCardPropsType): ReactElement => {\n    const classes = useStyles()\n    return (\n        <Paper className={classes.root}>\n            {icon}\n            <div className={classes.text}>\n                {text}\n            </div>\n        </Paper>\n    )\n}\n\nexport default ImageInfoCard\n","/home/aren/Desktop/YouPlus/ypw/src/components/NewGroupDialog/index.tsx",[],"/home/aren/Desktop/YouPlus/ypw/src/components/InfoCard/index.tsx",[],"/home/aren/Desktop/YouPlus/ypw/src/config.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/utils/request.ts",["602"],"import {extend, ResponseError} from 'umi-request'\nimport { ApplicationConfig } from '../config'\nconst errorHandler = (error:ResponseError) => {\n  console.log(error)\n  if (error.response) {\n    // The request was made and the server responded with a status code\n    // that falls out of the range of 2xx\n    console.log(error.response.status);\n    console.log(error.response.headers);\n    console.log(error.data);\n    console.log(error.request);\n    return { status:error.response.status,data:error.data }\n  } else {\n    console.log(error.message);\n  }\n  // return {some: 'data'}; If return, return the value as a return. If you don't write it is equivalent to return undefined, you can judge whether the response has a value when processing the result.\n  // return {some: 'data'};\n};\nconst apiRequest = extend({\n  timeout: 2000,\n  credentials: 'omit',\n  errorHandler\n})\napiRequest.interceptors.request.use((url,options) => {\n  const token = localStorage.getItem(\"token\")\n  const apiUrl = localStorage.getItem(\"apiUrl\")\n  if (apiUrl) {\n    url  = apiUrl + url\n  }\n  if (token) {\n    options.headers = {\n      ...options.headers,\n      \"Authorization\" :`Bearer ${token}`\n    }\n  }\n  return {\n    url,options\n  }\n})\nexport default apiRequest\n","/home/aren/Desktop/YouPlus/ypw/src/model/user.ts",["603"],"import {createModel} from \"hox\";\nimport {fetchAuthToken} from \"../api/auth\";\nimport {ResponseError} from 'umi-request'\nimport {useLocalStorageState} from \"ahooks\";\n\nconst UserModel = () => {\n    const login = async (username: string, password: string) => {\n        try {\n            const response = await fetchAuthToken(username, password)\n            if (response.success) {\n                localStorage.setItem(\"token\", response.token)\n                localStorage.setItem(\"username\", username)\n                return {success: true}\n            }\n            return {success: false, message: response.reason}\n        }catch (e) {\n            const responseError : ResponseError = e\n            return {success: false, message: responseError.data.reason}\n        }\n    }\n    const logout = () => {\n        localStorage.removeItem(\"token\")\n        localStorage.removeItem(\"username\")\n    }\n    return {\n        login,logout\n    }\n}\nconst useUserModel = createModel(UserModel)\nexport default useUserModel\n","/home/aren/Desktop/YouPlus/ypw/src/components/InfoCard/style.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/components/ImageInfoCard/style.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/components/NewGroupDialog/style.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/components/ListPage/style.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/layout/Base/parts/Tool/style.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/api/auth.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/api/storage.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/api/disks.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/api/style.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/pages/GroupDetail/style.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/pages/GroupDetail/model.ts",["604","605"],"import {createModel} from \"hox\";\nimport {useEffect, useState} from \"react\";\nimport {\n    addUserToUserGroup,\n    fetchGroupDetail,\n    removeGroup,\n    removeUserFromUserGroup,\n    UserGroupDetail\n} from \"../../api/users\";\nimport {strict} from \"assert\";\nimport {hexToRgb} from \"@material-ui/core\";\n\nconst GroupDetailModel = () => {\n    const [groupDetail,setGroupDetail]  = useState<UserGroupDetail | undefined>()\n    const [groupName,setGroupName] = useState<string | undefined>()\n\n    const fetchData = async (name:string) => {\n        const detail = await fetchGroupDetail(name)\n        setGroupDetail(detail)\n    }\n    const removeUser = async (users:string[]) => {\n        if (groupName) {\n            await removeUserFromUserGroup(groupName,users)\n            await fetchData(groupName)\n        }\n    }\n    const addUser = async (users:string[]) => {\n        if (groupName) {\n            await addUserToUserGroup(groupName,users)\n            await fetchData(groupName)\n        }\n    }\n    const remove = async () => {\n        if (groupName) {\n            await removeGroup(groupName)\n        }\n    }\n    useEffect(() => {\n        if (groupName) {\n            fetchData(groupName)\n        }\n    },[groupName])\n    return {\n        groupDetail,setGroupName,addUser,removeUser,remove\n    }\n}\nconst useGroupDetailModel = createModel(GroupDetailModel)\nexport default useGroupDetailModel\n","/home/aren/Desktop/YouPlus/ypw/src/utils/values.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/pages/ShareFolderDetail/style.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/pages/ShareFolderDetail/model.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/pages/Login/style.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/api/account.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/pages/Account/style.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/pages/Storage/model.ts",["606"],"import {createModel} from \"hox\";\nimport {useEffect, useState} from \"react\";\nimport {fetchStorageList, Storage, removeStorage, createStorage} from \"../../api/storage\";\n\nconst StorageModel = () => {\n    const [storages, setStorages] = useState<Storage[]>([])\n    const init = async () => {\n        const response = await fetchStorageList()\n        setStorages(response.storages)\n    }\n    const remove = async (id: string) => {\n        await removeStorage(id)\n        await init()\n    }\n    const addStorage = async (source:string,type:string) => {\n        await createStorage({source,type})\n        await init()\n    }\n\n    return {\n        storages, remove, addStorage,init\n    }\n}\nconst useStorageModel = createModel(StorageModel)\nexport default useStorageModel\n","/home/aren/Desktop/YouPlus/ypw/src/pages/ZFS/style.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/pages/ZFS/model.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/pages/Apps/style.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/pages/Apps/model.ts",["607"],"import {createModel} from \"hox\";\nimport {useState} from \"react\";\nimport {\n    App,\n    fetchApps,\n    installApp,\n    removeAutoStart,\n    setAutoStart,\n    startApp,\n    stopApp,\n    unInstallAPP\n} from \"../../api/apps\";\nimport {useInterval} from \"ahooks\";\n\nconst AppsPageModel = () => {\n    const [appList,setAppList] = useState<App[]>([])\n    const loadApp = async () => {\n        const response = await fetchApps()\n        setAppList(response.apps)\n    }\n    useInterval(() => {\n        loadApp();\n    },1000)\n    const start = async (appId:string) => {\n        await startApp(appId)\n    }\n    const stop = async (appId:string) => {\n        await stopApp(appId)\n    }\n    const addToAutoStart = async (appId:string) => {\n        await setAutoStart(appId)\n    }\n    const removeFromAutoStart = async (appId:string) => {\n        await removeAutoStart(appId)\n    }\n    const uninstall = async (id:string) => {\n        await unInstallAPP(id)\n    }\n    const install = async (file:File) => {\n        await installApp(file)\n    }\n    return {\n        appList,loadApp,start,stop,addToAutoStart,removeAutoStart,uninstall,install\n    }\n}\nconst useAppsPageModel = createModel(AppsPageModel)\nexport default useAppsPageModel\n","/home/aren/Desktop/YouPlus/ypw/src/hooks/ContextMenu.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/pages/Users/model.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/pages/Users/style.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/pages/Disks/style.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/pages/Disks/model.ts",["608"],"import {createModel} from \"hox\";\nimport {useEffect, useState} from \"react\";\nimport {Disk, fetchDisks} from \"../../api/disks\";\n\nconst DisksModel = () => {\n    const [disks,setDisks] = useState<Disk[]>([])\n    const initData = async () => {\n        const response = await fetchDisks()\n        setDisks(response.disks)\n    }\n\n    return {\n        disks,initData\n    }\n}\nconst useDisksModel = createModel(DisksModel)\nexport default useDisksModel\n","/home/aren/Desktop/YouPlus/ypw/src/pages/ShareFolder/model.ts",["609","610"],"import {getUserList} from \"../../api/users\";\nimport {useEffect, useState} from \"react\";\nimport {createModel} from \"hox\";\nimport {createNewShare, getShareList, ShareFolder} from \"../../api/share\";\nimport {showAPIResponseErrorMessage, showGlobalSnackMessage} from \"../../utils/message\";\n\nconst ShareFoldersModel = () => {\n    const [folders, setFolders] = useState<ShareFolder[]>([])\n    const initData = async () => {\n        const response = await getShareList()\n        setFolders(response.folders)\n    }\n    const createShare = async (data: any) => {\n        const response:any = await createNewShare(data)\n        if (response.success) {\n            showGlobalSnackMessage(\"create share folder success\",{variant:\"success\"})\n        }else{\n            showAPIResponseErrorMessage(response)\n        }\n        await initData()\n    }\n\n    return {\n        folders, createShare, initData\n    }\n}\nconst useShareFoldersModel = createModel(ShareFoldersModel)\nexport default useShareFoldersModel\n","/home/aren/Desktop/YouPlus/ypw/src/pages/Storage/style.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/pages/ShareFolder/style.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/pages/Parts/style.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/pages/Parts/model.ts",["611","612"],"import {createModel} from \"hox\";\nimport {fetchDisks, fetchParts, Part} from \"../../api/disks\";\nimport {useEffect, useState} from \"react\";\nconst targetFS = [\"ext4\",\"ntfs\"]\nconst PartsPageModel = () => {\n    const [parts, setParts] = useState<Part[]>([])\n    const initData = async () => {\n        let result: Part[] = await fetchParts()\n        if (!result) {\n            return\n        }\n        result = result.filter(part => {\n            return targetFS.find(it => it === part.fs_type) !== undefined\n        })\n        setParts(result)\n    }\n    return {\n        parts,initData\n    }\n}\nconst usePartsPageModel = createModel(PartsPageModel)\nexport default usePartsPageModel\n","/home/aren/Desktop/YouPlus/ypw/src/api/zfs.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/components/UserSelectDialog/index.tsx",[],"/home/aren/Desktop/YouPlus/ypw/src/components/UserListCard/index.tsx",["613","614"],"import React, {ReactElement} from \"react\";\nimport {\n    Avatar,\n    Button, IconButton,\n    List,\n    ListItem,\n    ListItemAvatar,\n    ListItemSecondaryAction,\n    ListItemText,\n    Paper\n} from \"@material-ui/core\";\nimport {Delete, Person, Remove} from \"@material-ui/icons\";\nimport useStyles from \"./style\";\n\nexport interface UserListCardPropsType {\n    users?: { uid: string, name: string }[]\n    title?: string\n    actions?: ReactElement\n    onRemove: (name: string) => void\n    className?: any\n}\n\nconst UserListCard = ({\n                          className,\n                          onRemove,\n                          actions,\n                          users = [],\n                          title = \"users\"\n                      }: UserListCardPropsType): ReactElement => {\n    const classes = useStyles()\n    return (\n        <Paper className={className}>\n            <div className={classes.userListHeader}>\n                <div className={classes.usersListTitle}>\n                    {title}\n                </div>\n                {actions}\n            </div>\n            <List className={classes.userList} dense>\n                {\n                    users.map(it => {\n                        return (\n                            <ListItem key={it.uid} className={classes.userListItem}>\n                                <ListItemAvatar>\n                                    <Avatar className={classes.userListIcon}>\n                                        <Person/>\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText primary={it.name} secondary={it.uid}/>\n                                <ListItemSecondaryAction>\n                                    <IconButton onClick={() => onRemove(it.name)} size={\"small\"}>\n                                        <Delete/>\n                                    </IconButton>\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                        )\n                    })\n                }\n            </List>\n\n        </Paper>\n    )\n}\n\nexport default UserListCard\n","/home/aren/Desktop/YouPlus/ypw/src/components/SwitchSelectDialog/index.tsx",[],"/home/aren/Desktop/YouPlus/ypw/src/components/ChangePasswordDialog/index.tsx",[],"/home/aren/Desktop/YouPlus/ypw/src/components/ListItemDialog/index.tsx",["615"],"import React, {ReactElement} from \"react\";\nimport {\n    Avatar, Button, Dialog, DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    ListItem,\n    ListItemAvatar,\n    ListItemText\n} from \"@material-ui/core\";\nimport {Dns} from \"@material-ui/icons\";\nimport useStyles from \"./style\";\n\nexport interface ListItemDialogPropsType {\n    open?: boolean\n    primary: string\n    secondary?: string\n    icon: ReactElement,\n    onClose: () => void\n    title: string\n    onOk: () => void\n    okText?: string,\n    text?:string\n}\n\nconst ListItemDialog = ({\n                            primary,\n                            icon,\n                            secondary,\n                            onOk,\n                            onClose,\n                            title,\n    text,\n                            okText = \"OK\",\n                            open = false\n                        }: ListItemDialogPropsType) => {\n    const classes = useStyles()\n    return (\n        <Dialog open={open} maxWidth={\"xl\"} onClose={onClose}>\n            <DialogTitle>\n                {title}\n            </DialogTitle>\n            <DialogContent className={classes.deleteDialogContent}>\n                <DialogContentText>\n                    {text}\n                </DialogContentText>\n                <ListItem className={classes.deleteDialogItem}>\n                    <ListItemAvatar>\n                        <Avatar>\n                            {icon}\n                        </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText primary={primary} secondary={secondary}/>\n                </ListItem>\n            </DialogContent>\n            <DialogActions>\n                <Button color={\"secondary\"} onClick={onClose}>\n                    Cancel\n                </Button>\n                <Button color={\"secondary\"} onClick={onOk}>\n                    {okText}\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nexport default ListItemDialog;\n","/home/aren/Desktop/YouPlus/ypw/src/api/apps.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/components/CreateZFSPoolDialog/index.tsx",[],"/home/aren/Desktop/YouPlus/ypw/src/components/InstallAppDialog/index.tsx",[],"/home/aren/Desktop/YouPlus/ypw/src/components/AppCard/index.tsx",["616","617","618","619"],"import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {\n    Avatar,\n    Button,\n    Card,\n    CardActions,\n    CardContent,\n    IconButton,\n    Menu,\n    MenuItem,\n    Typography\n} from \"@material-ui/core\";\nimport {Apps, MoreVert} from \"@material-ui/icons\";\nimport {App} from \"../../api/apps\";\nimport {getAppIconUrl} from \"../../utils/app\";\nimport useStyles from \"./style\";\n\n\n\ninterface AppCardPropsType {\n    app: App\n    onStart?: () => void\n    onStop?: () => void\n    enableAutoStart?: () => void\n    disableAutoStart?: () => void\n    onRemove:() => void\n}\n\n\nexport default function AppCard({app, onStart, onStop, enableAutoStart, disableAutoStart,onRemove}: AppCardPropsType) {\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n    const renderMenu = () => {\n        return (\n            <Menu\n                id=\"simple-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n            >\n                {\n                    app.auto_start ?\n                        <MenuItem\n                            onClick={() => {\n                                if (disableAutoStart){\n                                    disableAutoStart()\n                                }\n                                handleClose()\n                            }}\n                        >\n                            Disable autostart\n                        </MenuItem>\n                        :\n                        <MenuItem\n                            onClick={\n                                () => {\n                                    if (enableAutoStart) {\n                                        enableAutoStart()\n                                    }\n                                    handleClose()\n                                }\n                            }\n                        >\n                            Enable autostart\n                        </MenuItem>\n                }\n                <MenuItem\n                    onClick={\n                        () => {\n                            onRemove()\n                            handleClose()\n                        }\n                    }\n                >\n                    Uninstall\n                </MenuItem>\n            </Menu>\n        )\n    }\n    return (\n        <Card className={classes.main}>\n            {renderMenu()}\n            <CardContent>\n                <div className={classes.header}>\n                    <Avatar className={classes.icon}>\n                        <img src={getAppIconUrl(app.id)} className={classes.appicon}  />\n                    </Avatar>\n                    <div className={classes.title}>\n                        {app.name}\n                    </div>\n                    <IconButton onClick={handleClick}>\n                        <MoreVert/>\n                    </IconButton>\n                </div>\n\n                <div className={classes.status}>\n                    {app.status}\n                </div>\n            </CardContent>\n            <CardActions>\n                {\n                    app.status === \"Stop\" &&\n                    <Button size=\"small\" onClick={onStart}>Start</Button>\n                }\n                {\n                    app.status === \"Running\" &&\n                    <Button size=\"small\" onClick={onStop}>Stop</Button>\n                }\n            </CardActions>\n        </Card>\n    );\n}\n","/home/aren/Desktop/YouPlus/ypw/src/components/NewUserDialog/index.tsx",[],"/home/aren/Desktop/YouPlus/ypw/src/components/NewShareDialog/index.tsx",["620","621"],"import React, {useState} from \"react\";\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogProps,\n    DialogTitle,\n    Step,\n    StepLabel,\n    Stepper\n} from \"@material-ui/core\";\nimport useStyles from \"./style\";\nimport ShareInfoStep, {InfoForm} from \"./step/info\";\nimport StorageStep from \"./step/storage\";\nimport {Part} from \"../../api/disks\";\nimport UsersStep, {UsersForm} from \"./step/users\";\nimport CompleteStep from \"./step/complete\";\nimport {useForm} from \"./hook\";\nimport {Storage} from \"../../api/storage\";\n\nexport interface NewShareDialogPropsType {\n    onCreateShare:(data:any) => void\n}\nconst steps = [\n    \"info\",\"storage\",\"users\",\"complete\"\n]\nconst NewShareDialog = ({onCreateShare ,...other}: NewShareDialogPropsType & DialogProps) => {\n    const [index, setIndex] = useState<number>(0)\n    const [selectStorage,setSelectStorage] = useState<Storage | undefined>()\n    const usersFormController = useForm<UsersForm>({\n        useValidateUsers:false,\n        useWriteUsers:false,\n        folderPublic:true\n    })\n    const infoForm = useForm<InfoForm>({})\n    const classes = useStyles()\n    const renderStepContent = () => {\n        switch (index) {\n            case 0:\n                return <ShareInfoStep controller={infoForm}/>\n            case 1:\n                return <StorageStep selectedStorage={selectStorage} onSelect={(part) => setSelectStorage(part)} />\n            case 2:\n                return <UsersStep controller={usersFormController}/>\n            case 3:\n                return <CompleteStep\n                    name={infoForm.form.name}\n                    access={usersFormController.form.folderPublic ? \"Allow guest\" : \"Not allow guest\"}\n                    storage={selectStorage?.id}\n                    validateUsers={\n                        usersFormController.form.useValidateUsers && usersFormController.form.validateUsers ?\n                        usersFormController.form.validateUsers?.join(\",\") : \"disable\"\n                    }\n                    writeUsers={\n                        usersFormController.form.useWriteUsers && usersFormController.form.writeUsers ?\n                        usersFormController.form.writeUsers?.join(\",\") : 'disable'\n                    }\n                />\n            default:\n                return (<></>)\n        }\n    }\n    const validate = () => {\n        if (\n            infoForm.form.name === undefined ||\n            selectStorage == undefined\n        ){\n            return false\n        }\n        return true\n    }\n    const onCreate = () => {\n        if (!validate()){\n            return\n        }\n        const data = {\n            name:infoForm.form.name,\n            public:usersFormController.form.folderPublic,\n            valid_users:usersFormController.form.validateUsers,\n            write_list:usersFormController.form.writeUsers,\n            storageId:selectStorage?.id\n        }\n        onCreateShare(data)\n\n    }\n    return (\n        <Dialog {...other}>\n            <DialogTitle>\n                New Share\n                <Stepper activeStep={index} className={classes.stepper}>\n                    {\n                        steps.map((label,index) => {\n                            return (\n                                <Step key={index}>\n                                    <StepLabel>{label}</StepLabel>\n                                </Step>\n                            )\n                        })\n                    }\n                </Stepper>\n            </DialogTitle>\n            <DialogContent className={classes.content}>\n\n                <div className={classes.stepContent}>\n                    {renderStepContent()}\n                </div>\n            </DialogContent>\n            <DialogActions>\n                <Button\n                    disabled={index < 1}\n                    onClick={() => setIndex(index - 1)}\n                >Previous</Button>\n                {\n                    index === steps.length - 1 && <Button onClick={() => onCreate()}>Create</Button>\n                }\n                {\n                    index !== steps.length - 1 && <Button\n                        onClick={() => setIndex(index + 1)}\n                    >\n                        Next\n                    </Button>\n                }\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nexport default NewShareDialog;\n","/home/aren/Desktop/YouPlus/ypw/src/layout/Auth/index.tsx",[],"/home/aren/Desktop/YouPlus/ypw/src/layout/Base/parts/Nav/index.tsx",["622","623","624","625"],"import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport {\n    Apps,\n    Archive,\n    Assignment,\n    Dashboard,\n    Dns,\n    Folder, Group,\n    Inbox,\n    Person,\n    Storage,\n    Store,\n    SwapCalls\n} from \"@material-ui/icons\";\nimport {useHistory} from \"react-router-dom\";\nimport {useUpdate} from \"ahooks\";\nimport {ListSubheader} from \"@material-ui/core\";\n\nconst drawerWidth = 240;\nconst useStyles = makeStyles({\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n        boxSizing: 'border-box',\n    },\n    drawerContainer: {\n        overflow: 'auto',\n    },\n});\n\ninterface AppNavigationPropsType {\n\n}\n\n\nexport default function AppNavigation({}: AppNavigationPropsType) {\n    const classes = useStyles();\n    const history = useHistory();\n    const update = useUpdate();\n    const changeUrl = (urlPath: string) => {\n        if (history.location.pathname !== urlPath) {\n            history.replace(urlPath)\n            update()\n        }\n    }\n    console.log(history.location.pathname)\n    return (\n        <Drawer\n            className={classes.drawer}\n            variant=\"permanent\"\n            classes={{\n                paper: classes.drawerPaper,\n            }}\n        >\n            <Toolbar/>\n            <div className={classes.drawerContainer}>\n                <List\n                    subheader={\n                        <ListSubheader component=\"div\">\n                            General\n                        </ListSubheader>\n                    }\n                >\n                    <ListItem\n                        button\n                        key={\"dashboard\"}\n                        selected={history.location.pathname === \"/\"}\n                        onClick={() => changeUrl(\"/\")}\n                    >\n                        <ListItemIcon>\n                            <Dashboard/>\n                        </ListItemIcon>\n                        <ListItemText primary={\"Dashboard\"}/>\n                    </ListItem>\n                    <ListItem\n                        button\n                        key={\"apps\"}\n                        selected={history.location.pathname === \"/apps\"}\n                        onClick={() => changeUrl(\"/apps\")}\n                    >\n                        <ListItemIcon>\n                            <Apps/>\n                        </ListItemIcon>\n                        <ListItemText primary={\"Apps\"}/>\n                    </ListItem>\n                </List>\n                <List\n                    subheader={\n                        <ListSubheader component=\"div\">\n                            Data\n                        </ListSubheader>\n                    }\n                >\n\n                    <ListItem\n                        button\n                        key={\"disks\"}\n                        selected={history.location.pathname === \"/disks\"}\n                        onClick={() => changeUrl(\"/disks\")}\n                    >\n                        <ListItemIcon>\n                            <Storage/>\n                        </ListItemIcon>\n                        <ListItemText primary={\"Disks\"}/>\n                    </ListItem>\n                    {/*<ListItem*/}\n                    {/*    button*/}\n                    {/*    key={\"parts\"}*/}\n                    {/*    selected={history.location.pathname === \"/parts\"}*/}\n                    {/*    onClick={() => changeUrl(\"/parts\")}*/}\n                    {/*>*/}\n                    {/*    <ListItemIcon>*/}\n                    {/*        <Inbox/>*/}\n                    {/*    </ListItemIcon>*/}\n                    {/*    <ListItemText primary={\"Parts\"}/>*/}\n                    {/*</ListItem>*/}\n                    <ListItem\n                        button\n                        key={\"zfs\"}\n                        selected={history.location.pathname === \"/zfs\"}\n                        onClick={() => changeUrl(\"/zfs\")}\n                    >\n                        <ListItemIcon>\n                            <Dns/>\n                        </ListItemIcon>\n                        <ListItemText primary={\"ZFS\"}/>\n                    </ListItem>\n                    <ListItem\n                        button\n                        key={\"storage\"}\n                        selected={history.location.pathname === \"/storage\"}\n                        onClick={() => changeUrl(\"/storage\")}\n                    >\n                        <ListItemIcon>\n                            <Archive/>\n                        </ListItemIcon>\n                        <ListItemText primary={\"Storage\"}/>\n                    </ListItem>\n                    <ListItem\n                        button\n                        key={\"shareFolder\"}\n                        selected={history.location.pathname === \"/folders\"}\n                        onClick={() => changeUrl(\"/folders\")}\n                    >\n                        <ListItemIcon>\n                            <Folder/>\n                        </ListItemIcon>\n                        <ListItemText primary={\"Share Folders\"}/>\n                    </ListItem>\n                </List>\n                <List\n                    subheader={\n                        <ListSubheader component=\"div\">\n                            System\n                        </ListSubheader>\n                    }\n                >\n                    <ListItem\n                        button\n                        key={\"users\"}\n                        selected={history.location.pathname === \"/users\"}\n                        onClick={() => changeUrl(\"/users\")}\n                    >\n                        <ListItemIcon>\n                            <Person/>\n                        </ListItemIcon>\n                        <ListItemText primary={\"Users\"}/>\n                    </ListItem>\n                    <ListItem\n                        button\n                        key={\"groups\"}\n                        selected={history.location.pathname === \"/groups\"}\n                        onClick={() => changeUrl(\"/groups\")}\n                    >\n                        <ListItemIcon>\n                            <Group/>\n                        </ListItemIcon>\n                        <ListItemText primary={\"Groups\"}/>\n                    </ListItem>\n                </List>\n                <List\n                    subheader={\n                        <ListSubheader component=\"div\">\n                            My\n                        </ListSubheader>\n                    }\n                >\n                    <ListItem\n                        button\n                        key={\"account\"}\n                        selected={history.location.pathname === \"/my/account\"}\n                        onClick={() => changeUrl(\"/my/account\")}\n                    >\n                        <ListItemIcon>\n                            <Assignment/>\n                        </ListItemIcon>\n                        <ListItemText primary={\"Account\"}/>\n                    </ListItem>\n                </List>\n\n            </div>\n        </Drawer>\n    );\n}\n","/home/aren/Desktop/YouPlus/ypw/src/components/SwitchSelectDialog/style.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/components/UserListCard/style.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/components/UserSelectDialog/style.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/components/ListItemDialog/style.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/components/CreateZFSPoolDialog/style.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/components/ChangePasswordDialog/style.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/components/InstallAppDialog/style.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/components/NewUserDialog/style.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/components/NewShareDialog/hook.ts",["626"],"import {useState} from \"react\";\nimport {UsersForm } from \"./step/users\";\n\nexport interface FormController<T> {\n    form: T\n    updateValue: (values: any) => void\n}\n\nexport const useForm = <T>(init:T): FormController<T> => {\n    const [form, setForm] = useState<T>(init)\n\n    const updateValue = (values: any) => {\n        console.log(values)\n        setForm({\n            ...form,\n            ...values\n        })\n    }\n    return {\n        form, updateValue\n    }\n}\n","/home/aren/Desktop/YouPlus/ypw/src/components/NewShareDialog/style.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/components/AppCard/style.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/utils/app.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/components/DiskSelectField/index.tsx",["627","628"],"import React, {useEffect, useState} from \"react\";\nimport {useDynamicList} from \"ahooks\";\nimport {Chip, IconButton, MenuItem, Select, Typography} from \"@material-ui/core\";\nimport {Add, Storage} from \"@material-ui/icons\";\nimport useStyles from \"./style\";\nimport {Disk} from \"../../api/disks\";\nimport filesize from \"filesize\";\n\nexport interface DiskSelectFieldPropsType {\n    disks?:Disk[]\n    onChange?: (disks : Disk[]) => void\n    initValue?:Disk[]\n}\n\nconst DiskSelectField = ({onChange,disks = [],initValue = []}: DiskSelectFieldPropsType) => {\n    const disksController = useDynamicList<Disk>(initValue);\n\n    const getSelectOption = ():Disk[] => {\n        return disks.filter(it => disksController.list.find(selected => selected.name === it.name) === undefined)\n    }\n    const classes = useStyles()\n    const [diskSelect,setDiskSelect] = useState<string | undefined>(getSelectOption().length > 0?getSelectOption()[0].name:undefined)\n    useEffect(() => {\n        if (onChange) {\n            onChange(disksController.list)\n        }\n    },[disksController.list])\n\n    return (\n        <div>\n            <div>\n                {\n                    disksController.list.map(it => {\n                        return (\n                            <Chip\n                                label={`${it.model} | ${it.name} | ${filesize(Number(it.size))}`}\n                                key={it.name}\n                                className={classes.chip}\n                                color={'primary'}\n                                icon={<Storage />}\n                                onDelete={() => {\n                                    const index = disksController.list.indexOf(it)\n                                    if (index !== -1) {\n                                        disksController.remove(index)\n                                    }\n                                }}\n                            />\n                        )\n                    })\n                }\n            </div>\n            <div className={classes.addAction}>\n\n                <Select\n                    variant={\"outlined\"}\n                    value={diskSelect}\n                    size={\"small\"}\n                    onChange={(e) => setDiskSelect(e.target.value)}\n                    displayEmpty={true}\n                >\n                    {\n                        getSelectOption().map(disk => {\n                            return (\n                                <MenuItem value={disk.name}>{`${disk.model} | ${disk.name} | ${filesize(Number(disk.size))}`}</MenuItem>\n                            )\n                        })\n                    }\n                </Select>\n                <IconButton\n                    className={classes.addButton}\n                    size={\"small\"}\n                    onClick={() => {\n                        if (diskSelect && disksController.list.find(it => it.name ===  diskSelect) === undefined){\n                            const target = disks.find(it => it.name ===  diskSelect)\n                            if (target) {\n                                disksController.push(target)\n                            }\n                        }\n                    }}\n                >\n                    <Add />\n                </IconButton>\n            </div>\n        </div>\n    )\n}\n\nexport default DiskSelectField;\n","/home/aren/Desktop/YouPlus/ypw/src/components/NewShareDialog/step/complete/index.tsx",[],"/home/aren/Desktop/YouPlus/ypw/src/components/NewShareDialog/step/info/index.tsx",[],"/home/aren/Desktop/YouPlus/ypw/src/components/NewShareDialog/step/storage/index.tsx",["629","630","631","632","633"],"import React, {useEffect, useState} from \"react\";\nimport {fetchParts, Part} from \"../../../../api/disks\";\nimport {Avatar, List, ListItem, ListItemAvatar, ListItemText} from \"@material-ui/core\";\nimport {Inbox} from \"@material-ui/icons\";\nimport useStyles from \"./style\";\nimport usePartsPageModel from \"../../../../pages/Parts/model\";\nimport useStorageModel from \"../../../../pages/Storage/model\";\nimport {Storage} from \"../../../../api/storage\";\n\nexport interface StorageStepPropsType {\n    selectedStorage?:Storage\n    onSelect:(storage:Storage) => void\n}\nconst StorageStep = ({onSelect,selectedStorage}: StorageStepPropsType) => {\n    const classes = useStyles()\n    const partsModel = usePartsPageModel()\n    const storageModel = useStorageModel()\n    useEffect(() => {\n        storageModel.init()\n    },[])\n    return (\n        <div className={classes.root}>\n\n            <List>\n                {\n                    storageModel.storages.map(storage => {\n                        return (\n                            <ListItem\n                                key={storage.id}\n                                button\n                                selected={selectedStorage?.id === storage.id}\n                                onClick={() => onSelect(storage)}\n                            >\n                                <ListItemAvatar>\n                                    <Avatar className={classes.avatar}>\n                                        <Inbox />\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText primary={storage.id} secondary={storage.type}/>\n                            </ListItem>\n                        )\n                    })\n                }\n            </List>\n        </div>\n    )\n}\n\nexport default StorageStep;\n","/home/aren/Desktop/YouPlus/ypw/src/components/NewShareDialog/step/users/index.tsx",["634","635"],"import React, {useEffect, useState} from \"react\";\nimport useStyles from \"./style\";\nimport {Checkbox, FormControlLabel} from \"@material-ui/core\";\nimport useUsersModel from \"../../../../pages/Users/model\";\nimport UserSelectField from \"../../../UserSelectField\";\nimport clsx from \"clsx\";\nimport {FormController} from \"../../hook\";\n\nexport interface UsersForm {\n    folderPublic: boolean\n    validateUsers?: string[]\n    writeUsers?: string[]\n    useValidateUsers: boolean\n    useWriteUsers: boolean\n}\n\nexport interface UsersStepPropsType {\n    controller: FormController<UsersForm>\n}\n\nconst UsersStep = ({controller}: UsersStepPropsType) => {\n    const classes = useStyles()\n    const userModel = useUsersModel()\n    return (\n        <div>\n            <div className={classes.field}>\n                <FormControlLabel\n                    control={\n                        <Checkbox\n                            name=\"checkedB\"\n                            color=\"primary\"\n                            size={\"small\"}\n                            checked={controller.form.folderPublic}\n                            onChange={(e) => controller.updateValue({folderPublic: e.target.checked})}\n                        />\n                    }\n                    label=\"Allow guest\"\n                />\n            </div>\n            <div className={clsx(classes.field, classes.fieldArea)}>\n                <div className={classes.label}>\n                    <Checkbox\n                        size={\"small\"}\n                        checked={controller.form.useValidateUsers}\n                        onChange={(e) => controller.updateValue({useValidateUsers: e.target.checked})}\n                    />\n                    validate users\n                </div>\n                <UserSelectField\n                    users={userModel.users}\n                    onChange={(users) => controller.updateValue({validateUsers: users})}\n                    initValue={controller.form.validateUsers}\n                />\n            </div>\n            <div className={clsx(classes.field, classes.fieldArea)}>\n                <div className={classes.label}>\n                    <Checkbox\n                        size={\"small\"}\n                        checked={controller.form.useWriteUsers}\n                        onChange={(e) => controller.updateValue({useWriteUsers: e.target.checked})}\n                    />\n                    write user\n                </div>\n                <UserSelectField\n                    users={userModel.users}\n                    onChange={(users) => controller.updateValue({writeUsers: users})}\n                    initValue={controller.form.writeUsers}\n                />\n            </div>\n\n        </div>\n    )\n}\n\nexport default UsersStep;\n","/home/aren/Desktop/YouPlus/ypw/src/components/DiskSelectField/style.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/components/NewShareDialog/step/complete/style.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/components/NewShareDialog/step/storage/style.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/components/NewShareDialog/step/info/style.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/components/NewShareDialog/step/users/style.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/components/UserSelectField/index.tsx",["636"],"import React, {useEffect, useState} from \"react\";\nimport {useDynamicList} from \"ahooks\";\nimport {Chip, IconButton, MenuItem, Select} from \"@material-ui/core\";\nimport {Add, Person} from \"@material-ui/icons\";\nimport useStyles from \"./style\";\n\nexport interface UserSelectFieldPropsType {\n    users?:string[]\n    onChange?: (users : string[]) => void\n    initValue?:string[]\n}\n\nconst UserSelectField = ({onChange,users = [],initValue = []}: UserSelectFieldPropsType) => {\n    const classes = useStyles()\n    const usersController = useDynamicList<string>(initValue);\n    const [userSelect,setUserSelect] = useState<string | undefined>()\n    useEffect(() => {\n        if (onChange) {\n            onChange(usersController.list)\n        }\n    },[usersController.list])\n    return (\n        <div>\n            <div>\n                {\n                    usersController.list.map(it => {\n                        return (\n                            <Chip\n                                label={it}\n                                key={it}\n                                className={classes.chip}\n                                color={'primary'}\n                                size=\"small\"\n                                icon={<Person />}\n                                onDelete={() => {\n                                    const index = usersController.list.indexOf(it)\n                                    if (index !== -1) {\n                                        usersController.remove(index)\n                                    }\n                                }}\n                            />\n                        )\n                    })\n                }\n            </div>\n            <div className={classes.addAction}>\n                <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    variant={\"outlined\"}\n                    size={\"small\"}\n                    fullWidth\n                    value={userSelect}\n                    onChange={(e) => setUserSelect(e.target.value)}\n                >\n                    {\n                        users.filter(it => usersController.list.find(selected => selected === it) === undefined).map(user => {\n                            return (\n                                <MenuItem value={user}>{user}</MenuItem>\n                            )\n                        })\n                    }\n                </Select>\n                <IconButton\n                    className={classes.addButton}\n                    size={\"small\"}\n                    onClick={() => {\n                        if (userSelect && usersController.list.find(it => it ===  userSelect) === undefined){\n                            usersController.push(userSelect)\n                            setUserSelect(undefined)\n                        }\n                    }}\n                >\n                    <Add />\n                </IconButton>\n            </div>\n        </div>\n    )\n}\n\nexport default UserSelectField;\n","/home/aren/Desktop/YouPlus/ypw/src/components/ValueField/index.tsx",[],"/home/aren/Desktop/YouPlus/ypw/src/components/ValueField/style.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/components/UserSelectField/style.ts",[],["637","638"],"/home/aren/Desktop/YouPlus/ypw/src/layout/Base/parts/Task/index.tsx",["639"],"import useStyles from \"./style\";\nimport {IconButton, Paper, Popover, Typography} from \"@material-ui/core\";\nimport {Report, ViewDay} from \"@material-ui/icons\";\nimport {SyntheticEvent, useState} from \"react\";\nimport clsx from \"clsx\";\nimport InstallAppTaskCard from \"../../../../components/InstallAppTaskCard\";\nimport useTaskModel from \"../../../../model/task\";\nimport {useInterval} from \"ahooks\";\nimport task from \"../../../../model/task\";\n\nexport interface TaskPopupPropsType {\n    className?:any\n}\n\nconst TaskPopup = ({className}: TaskPopupPropsType) => {\n    const classes = useStyles()\n    const taskModel = useTaskModel()\n    useInterval(() => {\n       taskModel.refresh()\n    },2000)\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const handleClick = (event:SyntheticEvent<any>) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const open = Boolean(anchorEl);\n    const id = open ? 'simple-popover' : undefined;\n    return (\n        <>\n            <IconButton onClick={handleClick} className={clsx(className,classes.root)}>\n                <ViewDay />\n            </IconButton>\n            <Popover\n                id={id}\n                open={open}\n                anchorEl={anchorEl}\n                onClose={handleClose}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'center',\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'center',\n                }}\n            >\n               <Paper className={classes.content}>\n                   {\n                       taskModel.tasks.length > 0 && taskModel.tasks.map(it => {\n                           return (\n                               <InstallAppTaskCard className={classes.item} task={it}/>\n                           )\n                       })\n                   }\n                   {\n                       taskModel.tasks.length === 0 &&\n                           <div className={classes.empty}>\n                               <Report className={classes.icon}/>\n                               <Typography variant={\"subtitle1\"}>\n                                   No task\n                               </Typography>\n                           </div>\n                   }\n               </Paper>\n            </Popover>\n        </>\n    )\n}\n\nexport default TaskPopup;\n","/home/aren/Desktop/YouPlus/ypw/src/layout/Base/parts/Task/style.tsx",[],"/home/aren/Desktop/YouPlus/ypw/src/components/InstallAppTaskCard/index.tsx",[],"/home/aren/Desktop/YouPlus/ypw/src/components/InstallAppTaskCard/style.tsx",[],"/home/aren/Desktop/YouPlus/ypw/src/model/task.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/api/task.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/ws.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/layout/Notification/index.tsx",["640","641"],"import {useEffect} from \"react\";\nimport {DefaultNotificationManager} from \"../../ws\";\nimport {useSnackbar} from \"notistack\";\n\nexport interface NotificationPropsType {\n\n}\n\nconst Notification = ({}: NotificationPropsType) => {\n    const { enqueueSnackbar } = useSnackbar()\n    useEffect(() => {\n        DefaultNotificationManager.addListener(\"InstallError\", (event) => {\n            enqueueSnackbar(`${event.data.extra.appName} install error: ${event.data.errorMessage}`,{ variant:\"error\"  })\n        })\n        DefaultNotificationManager.addListener(\"InstallDone\", (event) => {\n            enqueueSnackbar(`${event.data.extra.appName} install success`,{ variant:\"success\"  })\n        })\n        DefaultNotificationManager.addListener(\"UninstallDone\", (event) => {\n            enqueueSnackbar(`${event.data.extra.appName} uninstall success`,{ variant:\"success\"  })\n        })\n        DefaultNotificationManager.addListener(\"UninstallError\", (event) => {\n            enqueueSnackbar(`${event.data.extra.appName} uninstall error: ${event.data.errorMessage}`,{ variant:\"success\"  })\n        })\n    },[])\n    return (<></>)\n}\n\nexport default Notification;\n","/home/aren/Desktop/YouPlus/ypw/src/pages/PoolDetail/index.tsx",["642","643"],"import useStyles from \"./style\";\nimport {Grid, Typography} from \"@material-ui/core\";\nimport React, {useEffect} from \"react\";\nimport usePoolDetailModel from \"./model\";\nimport {useParams} from \"react-router-dom\";\nimport InfoCard from \"../../components/InfoCard\";\nimport filesize from \"filesize\";\n\nexport interface PoolDetailPagePropsType {\n\n}\n\nconst PoolDetailPage = ({}: PoolDetailPagePropsType) => {\n    const {name}: any = useParams();\n    const classes = useStyles()\n    const model = usePoolDetailModel()\n    useEffect(() => {\n        model.refresh(name)\n    },[])\n    return (\n        <div className={classes.root}>\n            <Typography variant={\"h4\"} className={classes.title}>\n                { model.pool?.name }\n            </Typography>\n            <Grid container spacing={4}>\n                <Grid xs={2} item>\n                    <InfoCard label={\"Size\"} value={filesize(model.pool?.tree.size ?? 0)} valueSize={18} />\n                </Grid>\n                <Grid xs={2} item>\n                    <InfoCard label={\"Used\"} value={filesize(model.pool?.tree.alloc ?? 0)} valueSize={18} />\n                </Grid>\n                <Grid xs={2} item>\n                    <InfoCard label={\"Free\"} value={filesize(model.pool?.tree.free ?? 0)} valueSize={18} />\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default PoolDetailPage;\n","/home/aren/Desktop/YouPlus/ypw/src/pages/PoolDetail/model.ts",[],"/home/aren/Desktop/YouPlus/ypw/src/pages/PoolDetail/style.tsx",[],"/home/aren/Desktop/YouPlus/ypw/src/utils/message.ts",["644"],"import {OptionsObject, SnackbarMessage} from \"notistack\";\nimport {ResponseError} from \"umi-request\";\n\nexport const showGlobalSnackMessage = (message: SnackbarMessage, options?: OptionsObject) => {\n    document.dispatchEvent(new CustomEvent<{ message: SnackbarMessage, options?: OptionsObject }>(\"globalMessage\", {\n        detail: {\n            message,\n            options\n        }\n    }))\n}\nexport const showAPIResponseErrorMessage = (err:any) => {\n    console.log(err)\n    document.dispatchEvent(new CustomEvent<{ message: SnackbarMessage, options?: OptionsObject }>(\"globalMessage\", {\n        detail: {\n            message:`${err.data.reason} [${err.status}]`,\n            options: {variant: \"error\"}\n        }\n    }))\n}\n","/home/aren/Desktop/YouPlus/ypw/src/components/UserPopup/index.tsx",["645"],"import useStyles from \"./style\";\nimport {Avatar, Button, ButtonBase, Card, Divider, Popover, PopoverProps, Typography} from \"@material-ui/core\";\nimport {Person} from \"@material-ui/icons\";\n\nexport interface UserPopupPropsType  {\n    username: string\n}\n\nconst UserPopup = ({username,...other}: UserPopupPropsType & PopoverProps) => {\n    const classes = useStyles()\n    return (\n        <Popover {...other}>\n            <Card className={classes.root}>\n                <Avatar className={classes.avatar} >\n                    <Person />\n                </Avatar>\n                <Typography variant={\"h5\"}>\n                    {username}\n                </Typography>\n                <Divider/>\n                <Button variant={\"outlined\"}>\n                    Sign out\n                </Button>\n            </Card>\n        </Popover>\n    )\n}\n\nexport default UserPopup;\n","/home/aren/Desktop/YouPlus/ypw/src/components/UserPopup/style.tsx",[],{"ruleId":"646","replacedBy":"647"},{"ruleId":"648","replacedBy":"649"},{"ruleId":"650","severity":1,"message":"651","line":2,"column":9,"nodeType":"652","messageId":"653","endLine":2,"endColumn":13},{"ruleId":"650","severity":1,"message":"654","line":2,"column":22,"nodeType":"652","messageId":"653","endLine":2,"endColumn":28},{"ruleId":"655","severity":1,"message":"656","line":27,"column":22,"nodeType":"657","messageId":"658","endLine":27,"endColumn":46},{"ruleId":"659","severity":1,"message":"660","line":36,"column":7,"nodeType":"661","endLine":36,"endColumn":9,"suggestions":"662"},{"ruleId":"650","severity":1,"message":"663","line":1,"column":9,"nodeType":"652","messageId":"653","endLine":1,"endColumn":18},{"ruleId":"650","severity":1,"message":"664","line":11,"column":7,"nodeType":"652","messageId":"653","endLine":11,"endColumn":18},{"ruleId":"665","severity":1,"message":"666","line":1,"column":1,"nodeType":"667","messageId":"658","fix":"668"},{"ruleId":"655","severity":1,"message":"656","line":11,"column":20,"nodeType":"657","messageId":"658","endLine":11,"endColumn":42},{"ruleId":"659","severity":1,"message":"669","line":16,"column":7,"nodeType":"661","endLine":16,"endColumn":9,"suggestions":"670"},{"ruleId":"655","severity":1,"message":"656","line":24,"column":22,"nodeType":"657","messageId":"658","endLine":24,"endColumn":46},{"ruleId":"659","severity":1,"message":"671","line":30,"column":8,"nodeType":"661","endLine":30,"endColumn":10,"suggestions":"672"},{"ruleId":"650","severity":1,"message":"673","line":5,"column":22,"nodeType":"652","messageId":"653","endLine":5,"endColumn":28},{"ruleId":"650","severity":1,"message":"674","line":8,"column":8,"nodeType":"652","messageId":"653","endLine":8,"endColumn":14},{"ruleId":"655","severity":1,"message":"656","line":15,"column":22,"nodeType":"657","messageId":"658","endLine":15,"endColumn":46},{"ruleId":"659","severity":1,"message":"669","line":21,"column":8,"nodeType":"661","endLine":21,"endColumn":10,"suggestions":"675"},{"ruleId":"650","severity":1,"message":"676","line":4,"column":18,"nodeType":"652","messageId":"653","endLine":4,"endColumn":23},{"ruleId":"655","severity":1,"message":"656","line":11,"column":20,"nodeType":"657","messageId":"658","endLine":11,"endColumn":42},{"ruleId":"659","severity":1,"message":"669","line":16,"column":7,"nodeType":"661","endLine":16,"endColumn":9,"suggestions":"677"},{"ruleId":"655","severity":1,"message":"656","line":23,"column":20,"nodeType":"657","messageId":"658","endLine":23,"endColumn":42},{"ruleId":"659","severity":1,"message":"678","line":31,"column":8,"nodeType":"661","endLine":31,"endColumn":10,"suggestions":"679"},{"ruleId":"650","severity":1,"message":"663","line":1,"column":16,"nodeType":"652","messageId":"653","endLine":1,"endColumn":25},{"ruleId":"650","severity":1,"message":"680","line":2,"column":9,"nodeType":"652","messageId":"653","endLine":2,"endColumn":19},{"ruleId":"650","severity":1,"message":"681","line":3,"column":23,"nodeType":"652","messageId":"653","endLine":3,"endColumn":33},{"ruleId":"655","severity":1,"message":"656","line":18,"column":34,"nodeType":"657","messageId":"658","endLine":18,"endColumn":55},{"ruleId":"655","severity":1,"message":"656","line":35,"column":18,"nodeType":"657","messageId":"658","endLine":35,"endColumn":38},{"ruleId":"659","severity":1,"message":"682","line":43,"column":7,"nodeType":"661","endLine":43,"endColumn":9,"suggestions":"683"},{"ruleId":"655","severity":1,"message":"656","line":14,"column":22,"nodeType":"657","messageId":"658","endLine":14,"endColumn":46},{"ruleId":"650","severity":1,"message":"684","line":7,"column":9,"nodeType":"652","messageId":"653","endLine":7,"endColumn":29},{"ruleId":"655","severity":1,"message":"656","line":13,"column":20,"nodeType":"657","messageId":"658","endLine":13,"endColumn":42},{"ruleId":"655","severity":1,"message":"656","line":20,"column":28,"nodeType":"657","messageId":"658","endLine":20,"endColumn":58},{"ruleId":"659","severity":1,"message":"685","line":28,"column":8,"nodeType":"661","endLine":28,"endColumn":10,"suggestions":"686"},{"ruleId":"687","severity":1,"message":"688","line":36,"column":28,"nodeType":"689","messageId":"658","endLine":36,"endColumn":30},{"ruleId":"687","severity":1,"message":"688","line":40,"column":35,"nodeType":"689","messageId":"658","endLine":40,"endColumn":37},{"ruleId":"650","severity":1,"message":"690","line":5,"column":17,"nodeType":"652","messageId":"653","endLine":5,"endColumn":22},{"ruleId":"655","severity":1,"message":"656","line":15,"column":26,"nodeType":"657","messageId":"658","endLine":15,"endColumn":54},{"ruleId":"659","severity":1,"message":"685","line":23,"column":8,"nodeType":"661","endLine":23,"endColumn":10,"suggestions":"691"},{"ruleId":"650","severity":1,"message":"692","line":8,"column":8,"nodeType":"652","messageId":"653","endLine":8,"endColumn":21},{"ruleId":"655","severity":1,"message":"656","line":18,"column":24,"nodeType":"657","messageId":"658","endLine":18,"endColumn":50},{"ruleId":"659","severity":1,"message":"669","line":26,"column":7,"nodeType":"661","endLine":26,"endColumn":9,"suggestions":"693"},{"ruleId":"655","severity":1,"message":"656","line":15,"column":21,"nodeType":"657","messageId":"658","endLine":15,"endColumn":44},{"ruleId":"659","severity":1,"message":"669","line":22,"column":8,"nodeType":"661","endLine":22,"endColumn":10,"suggestions":"694"},{"ruleId":"650","severity":1,"message":"695","line":4,"column":9,"nodeType":"652","messageId":"653","endLine":4,"endColumn":21},{"ruleId":"650","severity":1,"message":"696","line":3,"column":9,"nodeType":"652","messageId":"653","endLine":3,"endColumn":25},{"ruleId":"650","severity":1,"message":"697","line":3,"column":8,"nodeType":"652","messageId":"653","endLine":3,"endColumn":14},{"ruleId":"650","severity":1,"message":"698","line":6,"column":17,"nodeType":"652","messageId":"653","endLine":6,"endColumn":27},{"ruleId":"650","severity":1,"message":"699","line":6,"column":29,"nodeType":"652","messageId":"653","endLine":6,"endColumn":33},{"ruleId":"650","severity":1,"message":"700","line":6,"column":35,"nodeType":"652","messageId":"653","endLine":6,"endColumn":43},{"ruleId":"650","severity":1,"message":"673","line":7,"column":9,"nodeType":"652","messageId":"653","endLine":7,"endColumn":15},{"ruleId":"655","severity":1,"message":"656","line":17,"column":21,"nodeType":"657","messageId":"658","endLine":17,"endColumn":44},{"ruleId":"650","severity":1,"message":"701","line":20,"column":11,"nodeType":"652","messageId":"653","endLine":20,"endColumn":20},{"ruleId":"650","severity":1,"message":"702","line":21,"column":11,"nodeType":"652","messageId":"653","endLine":21,"endColumn":18},{"ruleId":"650","severity":1,"message":"703","line":4,"column":8,"nodeType":"652","messageId":"653","endLine":4,"endColumn":16},{"ruleId":"650","severity":1,"message":"704","line":2,"column":10,"nodeType":"652","messageId":"653","endLine":2,"endColumn":27},{"ruleId":"650","severity":1,"message":"684","line":4,"column":9,"nodeType":"652","messageId":"653","endLine":4,"endColumn":29},{"ruleId":"650","severity":1,"message":"705","line":10,"column":9,"nodeType":"652","messageId":"653","endLine":10,"endColumn":15},{"ruleId":"650","severity":1,"message":"706","line":11,"column":9,"nodeType":"652","messageId":"653","endLine":11,"endColumn":17},{"ruleId":"650","severity":1,"message":"663","line":2,"column":9,"nodeType":"652","messageId":"653","endLine":2,"endColumn":18},{"ruleId":"650","severity":1,"message":"707","line":33,"column":11,"nodeType":"652","messageId":"653","endLine":33,"endColumn":30},{"ruleId":"650","severity":1,"message":"663","line":2,"column":9,"nodeType":"652","messageId":"653","endLine":2,"endColumn":18},{"ruleId":"650","severity":1,"message":"708","line":1,"column":9,"nodeType":"652","messageId":"653","endLine":1,"endColumn":20},{"ruleId":"650","severity":1,"message":"663","line":2,"column":9,"nodeType":"652","messageId":"653","endLine":2,"endColumn":18},{"ruleId":"650","severity":1,"message":"709","line":2,"column":9,"nodeType":"652","messageId":"653","endLine":2,"endColumn":19},{"ruleId":"650","severity":1,"message":"663","line":3,"column":9,"nodeType":"652","messageId":"653","endLine":3,"endColumn":18},{"ruleId":"650","severity":1,"message":"710","line":4,"column":5,"nodeType":"652","messageId":"653","endLine":4,"endColumn":11},{"ruleId":"650","severity":1,"message":"711","line":12,"column":25,"nodeType":"652","messageId":"653","endLine":12,"endColumn":31},{"ruleId":"650","severity":1,"message":"712","line":11,"column":9,"nodeType":"652","messageId":"653","endLine":11,"endColumn":12},{"ruleId":"650","severity":1,"message":"680","line":2,"column":9,"nodeType":"652","messageId":"653","endLine":2,"endColumn":19},{"ruleId":"650","severity":1,"message":"681","line":12,"column":5,"nodeType":"652","messageId":"653","endLine":12,"endColumn":15},{"ruleId":"650","severity":1,"message":"713","line":14,"column":9,"nodeType":"652","messageId":"653","endLine":14,"endColumn":13},{"ruleId":"714","severity":1,"message":"715","line":96,"column":25,"nodeType":"716","endLine":96,"endColumn":89},{"ruleId":"650","severity":1,"message":"717","line":16,"column":9,"nodeType":"652","messageId":"653","endLine":16,"endColumn":13},{"ruleId":"687","severity":1,"message":"688","line":67,"column":27,"nodeType":"689","messageId":"658","endLine":67,"endColumn":29},{"ruleId":"650","severity":1,"message":"718","line":16,"column":5,"nodeType":"652","messageId":"653","endLine":16,"endColumn":10},{"ruleId":"650","severity":1,"message":"676","line":19,"column":5,"nodeType":"652","messageId":"653","endLine":19,"endColumn":10},{"ruleId":"650","severity":1,"message":"719","line":20,"column":5,"nodeType":"652","messageId":"653","endLine":20,"endColumn":14},{"ruleId":"655","severity":1,"message":"656","line":46,"column":39,"nodeType":"657","messageId":"658","endLine":46,"endColumn":65},{"ruleId":"650","severity":1,"message":"720","line":2,"column":9,"nodeType":"652","messageId":"653","endLine":2,"endColumn":18},{"ruleId":"650","severity":1,"message":"681","line":3,"column":45,"nodeType":"652","messageId":"653","endLine":3,"endColumn":55},{"ruleId":"659","severity":1,"message":"721","line":27,"column":7,"nodeType":"661","endLine":27,"endColumn":29,"suggestions":"722"},{"ruleId":"650","severity":1,"message":"723","line":1,"column":27,"nodeType":"652","messageId":"653","endLine":1,"endColumn":35},{"ruleId":"650","severity":1,"message":"724","line":2,"column":9,"nodeType":"652","messageId":"653","endLine":2,"endColumn":19},{"ruleId":"650","severity":1,"message":"717","line":2,"column":21,"nodeType":"652","messageId":"653","endLine":2,"endColumn":25},{"ruleId":"650","severity":1,"message":"725","line":16,"column":11,"nodeType":"652","messageId":"653","endLine":16,"endColumn":21},{"ruleId":"659","severity":1,"message":"671","line":20,"column":7,"nodeType":"661","endLine":20,"endColumn":9,"suggestions":"726"},{"ruleId":"650","severity":1,"message":"663","line":1,"column":16,"nodeType":"652","messageId":"653","endLine":1,"endColumn":25},{"ruleId":"650","severity":1,"message":"723","line":1,"column":27,"nodeType":"652","messageId":"653","endLine":1,"endColumn":35},{"ruleId":"659","severity":1,"message":"721","line":21,"column":7,"nodeType":"661","endLine":21,"endColumn":29,"suggestions":"727"},{"ruleId":"646","replacedBy":"728"},{"ruleId":"648","replacedBy":"729"},{"ruleId":"650","severity":1,"message":"730","line":9,"column":8,"nodeType":"652","messageId":"653","endLine":9,"endColumn":12},{"ruleId":"655","severity":1,"message":"656","line":9,"column":23,"nodeType":"657","messageId":"658","endLine":9,"endColumn":48},{"ruleId":"659","severity":1,"message":"731","line":24,"column":7,"nodeType":"661","endLine":24,"endColumn":9,"suggestions":"732"},{"ruleId":"655","severity":1,"message":"656","line":13,"column":25,"nodeType":"657","messageId":"658","endLine":13,"endColumn":52},{"ruleId":"659","severity":1,"message":"685","line":19,"column":7,"nodeType":"661","endLine":19,"endColumn":9,"suggestions":"733"},{"ruleId":"650","severity":1,"message":"734","line":2,"column":9,"nodeType":"652","messageId":"653","endLine":2,"endColumn":22},{"ruleId":"650","severity":1,"message":"698","line":2,"column":25,"nodeType":"652","messageId":"653","endLine":2,"endColumn":35},"no-native-reassign",["735"],"no-negated-in-lhs",["736"],"@typescript-eslint/no-unused-vars","'blue' is defined but never used.","Identifier","unusedVar","'indigo' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'onGlobalSnackMessage'. Either include it or remove the dependency array.","ArrayExpression",["737"],"'useEffect' is defined but never used.","'drawerWidth' is assigned a value but never used.","unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program",{"range":"738","text":"739"},"React Hook useEffect has a missing dependency: 'model'. Either include it or remove the dependency array.",["740"],"React Hook useEffect has a missing dependency: 'storageModel'. Either include it or remove the dependency array.",["741"],"'Person' is defined but never used.","'layout' is defined but never used.",["742"],"'Store' is defined but never used.",["743"],"React Hook useEffect has a missing dependency: 'usersModel'. Either include it or remove the dependency array.",["744"],"'makeStyles' is defined but never used.","'Typography' is defined but never used.","React Hook useEffect has a missing dependency: 'zfsModel'. Either include it or remove the dependency array.",["745"],"'useLocalStorageState' is defined but never used.","React Hook useEffect has missing dependencies: 'model' and 'name'. Either include them or remove the dependency array.",["746"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'Paper' is defined but never used.",["747"],"'useDisksModel' is defined but never used.",["748"],["749"],"'useClickAway' is defined but never used.","'UserListResponse' is defined but never used.","'AppBar' is defined but never used.","'ButtonBase' is defined but never used.","'Menu' is defined but never used.","'MenuItem' is defined but never used.","'userModel' is assigned a value but never used.","'history' is assigned a value but never used.","'DiskIcon' is defined but never used.","'ApplicationConfig' is defined but never used.","'strict' is defined but never used.","'hexToRgb' is defined but never used.","'removeFromAutoStart' is assigned a value but never used.","'getUserList' is defined but never used.","'fetchDisks' is defined but never used.","'Button' is defined but never used.","'Remove' is defined but never used.","'Dns' is defined but never used.","'Apps' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Part' is defined but never used.","'Inbox' is defined but never used.","'SwapCalls' is defined but never used.","'UsersForm' is defined but never used.","React Hook useEffect has a missing dependency: 'onChange'. Either include it or remove the dependency array. If 'onChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["750"],"'useState' is defined but never used.","'fetchParts' is defined but never used.","'partsModel' is assigned a value but never used.",["751"],["752"],["735"],["736"],"'task' is defined but never used.","React Hook useEffect has a missing dependency: 'enqueueSnackbar'. Either include it or remove the dependency array.",["753"],["754"],"'ResponseError' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"755","fix":"756"},[-1,0],"",{"desc":"757","fix":"758"},{"desc":"759","fix":"760"},{"desc":"757","fix":"761"},{"desc":"757","fix":"762"},{"desc":"763","fix":"764"},{"desc":"765","fix":"766"},{"desc":"767","fix":"768"},{"desc":"767","fix":"769"},{"desc":"757","fix":"770"},{"desc":"757","fix":"771"},{"desc":"772","fix":"773"},{"desc":"759","fix":"774"},{"desc":"775","fix":"776"},{"desc":"777","fix":"778"},{"desc":"767","fix":"779"},"Update the dependencies array to be: [onGlobalSnackMessage]",{"range":"780","text":"781"},"Update the dependencies array to be: [model]",{"range":"782","text":"783"},"Update the dependencies array to be: [storageModel]",{"range":"784","text":"785"},{"range":"786","text":"783"},{"range":"787","text":"783"},"Update the dependencies array to be: [usersModel]",{"range":"788","text":"789"},"Update the dependencies array to be: [zfsModel]",{"range":"790","text":"791"},"Update the dependencies array to be: [model, name]",{"range":"792","text":"793"},{"range":"794","text":"793"},{"range":"795","text":"783"},{"range":"796","text":"783"},"Update the dependencies array to be: [disksController.list, onChange]",{"range":"797","text":"798"},{"range":"799","text":"785"},"Update the dependencies array to be: [onChange, usersController.list]",{"range":"800","text":"801"},"Update the dependencies array to be: [enqueueSnackbar]",{"range":"802","text":"803"},{"range":"804","text":"793"},[1542,1544],"[onGlobalSnackMessage]",[470,472],"[model]",[842,844],"[storageModel]",[735,737],[471,473],[934,936],"[usersModel]",[1190,1192],"[zfsModel]",[1130,1132],"[model, name]",[823,825],[905,907],[779,781],[1042,1064],"[disksController.list, onChange]",[805,807],[738,760],"[onChange, usersController.list]",[1095,1097],"[enqueueSnackbar]",[564,566]]